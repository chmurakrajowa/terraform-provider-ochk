// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetBackupsPlansBackupPlanIDListsReader is a Reader for the GetBackupsPlansBackupPlanIDLists structure.
type GetBackupsPlansBackupPlanIDListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupsPlansBackupPlanIDListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupsPlansBackupPlanIDListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBackupsPlansBackupPlanIDListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBackupsPlansBackupPlanIDListsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBackupsPlansBackupPlanIDListsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBackupsPlansBackupPlanIDListsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /backups/plans/{backupPlanId}/lists] GetBackupsPlansBackupPlanIDLists", response, response.Code())
	}
}

// NewGetBackupsPlansBackupPlanIDListsOK creates a GetBackupsPlansBackupPlanIDListsOK with default headers values
func NewGetBackupsPlansBackupPlanIDListsOK() *GetBackupsPlansBackupPlanIDListsOK {
	return &GetBackupsPlansBackupPlanIDListsOK{}
}

/*
GetBackupsPlansBackupPlanIDListsOK describes a response with status code 200, with default header values.

OK
*/
type GetBackupsPlansBackupPlanIDListsOK struct {
	Payload *models.ListBackupListResponse
}

// IsSuccess returns true when this get backups plans backup plan Id lists o k response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get backups plans backup plan Id lists o k response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists o k response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backups plans backup plan Id lists o k response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists o k response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get backups plans backup plan Id lists o k response
func (o *GetBackupsPlansBackupPlanIDListsOK) Code() int {
	return 200
}

func (o *GetBackupsPlansBackupPlanIDListsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsOK %s", 200, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsOK %s", 200, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsOK) GetPayload() *models.ListBackupListResponse {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListBackupListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsBadRequest creates a GetBackupsPlansBackupPlanIDListsBadRequest with default headers values
func NewGetBackupsPlansBackupPlanIDListsBadRequest() *GetBackupsPlansBackupPlanIDListsBadRequest {
	return &GetBackupsPlansBackupPlanIDListsBadRequest{}
}

/*
GetBackupsPlansBackupPlanIDListsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBackupsPlansBackupPlanIDListsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists bad request response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists bad request response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists bad request response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists bad request response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists bad request response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get backups plans backup plan Id lists bad request response
func (o *GetBackupsPlansBackupPlanIDListsBadRequest) Code() int {
	return 400
}

func (o *GetBackupsPlansBackupPlanIDListsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsBadRequest %s", 400, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsBadRequest %s", 400, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsUnauthorized creates a GetBackupsPlansBackupPlanIDListsUnauthorized with default headers values
func NewGetBackupsPlansBackupPlanIDListsUnauthorized() *GetBackupsPlansBackupPlanIDListsUnauthorized {
	return &GetBackupsPlansBackupPlanIDListsUnauthorized{}
}

/*
GetBackupsPlansBackupPlanIDListsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBackupsPlansBackupPlanIDListsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists unauthorized response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists unauthorized response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists unauthorized response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists unauthorized response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists unauthorized response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get backups plans backup plan Id lists unauthorized response
func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) Code() int {
	return 401
}

func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsUnauthorized %s", 401, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsUnauthorized %s", 401, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsForbidden creates a GetBackupsPlansBackupPlanIDListsForbidden with default headers values
func NewGetBackupsPlansBackupPlanIDListsForbidden() *GetBackupsPlansBackupPlanIDListsForbidden {
	return &GetBackupsPlansBackupPlanIDListsForbidden{}
}

/*
GetBackupsPlansBackupPlanIDListsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBackupsPlansBackupPlanIDListsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists forbidden response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists forbidden response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists forbidden response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists forbidden response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists forbidden response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get backups plans backup plan Id lists forbidden response
func (o *GetBackupsPlansBackupPlanIDListsForbidden) Code() int {
	return 403
}

func (o *GetBackupsPlansBackupPlanIDListsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsForbidden %s", 403, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsForbidden %s", 403, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsNotFound creates a GetBackupsPlansBackupPlanIDListsNotFound with default headers values
func NewGetBackupsPlansBackupPlanIDListsNotFound() *GetBackupsPlansBackupPlanIDListsNotFound {
	return &GetBackupsPlansBackupPlanIDListsNotFound{}
}

/*
GetBackupsPlansBackupPlanIDListsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBackupsPlansBackupPlanIDListsNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists not found response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists not found response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists not found response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists not found response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists not found response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get backups plans backup plan Id lists not found response
func (o *GetBackupsPlansBackupPlanIDListsNotFound) Code() int {
	return 404
}

func (o *GetBackupsPlansBackupPlanIDListsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsNotFound %s", 404, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists][%d] getBackupsPlansBackupPlanIdListsNotFound %s", 404, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
