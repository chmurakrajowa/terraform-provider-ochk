// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetBackupsPlansBackupPlanIDListsBackupListIDReader is a Reader for the GetBackupsPlansBackupPlanIDListsBackupListID structure.
type GetBackupsPlansBackupPlanIDListsBackupListIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupsPlansBackupPlanIDListsBackupListIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBackupsPlansBackupPlanIDListsBackupListIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBackupsPlansBackupPlanIDListsBackupListIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBackupsPlansBackupPlanIDListsBackupListIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /backups/plans/{backupPlanId}/lists/{backupListId}] GetBackupsPlansBackupPlanIDListsBackupListID", response, response.Code())
	}
}

// NewGetBackupsPlansBackupPlanIDListsBackupListIDOK creates a GetBackupsPlansBackupPlanIDListsBackupListIDOK with default headers values
func NewGetBackupsPlansBackupPlanIDListsBackupListIDOK() *GetBackupsPlansBackupPlanIDListsBackupListIDOK {
	return &GetBackupsPlansBackupPlanIDListsBackupListIDOK{}
}

/*
GetBackupsPlansBackupPlanIDListsBackupListIDOK describes a response with status code 200, with default header values.

OK
*/
type GetBackupsPlansBackupPlanIDListsBackupListIDOK struct {
	Payload *models.GetBackupListResponse
}

// IsSuccess returns true when this get backups plans backup plan Id lists backup list Id o k response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get backups plans backup plan Id lists backup list Id o k response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists backup list Id o k response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backups plans backup plan Id lists backup list Id o k response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists backup list Id o k response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get backups plans backup plan Id lists backup list Id o k response
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) Code() int {
	return 200
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdOK %s", 200, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdOK %s", 200, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) GetPayload() *models.GetBackupListResponse {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetBackupListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsBackupListIDBadRequest creates a GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest with default headers values
func NewGetBackupsPlansBackupPlanIDListsBackupListIDBadRequest() *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest {
	return &GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest{}
}

/*
GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists backup list Id bad request response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists backup list Id bad request response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists backup list Id bad request response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists backup list Id bad request response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists backup list Id bad request response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get backups plans backup plan Id lists backup list Id bad request response
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) Code() int {
	return 400
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdBadRequest %s", 400, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdBadRequest %s", 400, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized creates a GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized with default headers values
func NewGetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized() *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized {
	return &GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized{}
}

/*
GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists backup list Id unauthorized response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists backup list Id unauthorized response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists backup list Id unauthorized response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists backup list Id unauthorized response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists backup list Id unauthorized response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get backups plans backup plan Id lists backup list Id unauthorized response
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) Code() int {
	return 401
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdUnauthorized %s", 401, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdUnauthorized %s", 401, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsBackupListIDForbidden creates a GetBackupsPlansBackupPlanIDListsBackupListIDForbidden with default headers values
func NewGetBackupsPlansBackupPlanIDListsBackupListIDForbidden() *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden {
	return &GetBackupsPlansBackupPlanIDListsBackupListIDForbidden{}
}

/*
GetBackupsPlansBackupPlanIDListsBackupListIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBackupsPlansBackupPlanIDListsBackupListIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists backup list Id forbidden response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists backup list Id forbidden response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists backup list Id forbidden response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists backup list Id forbidden response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists backup list Id forbidden response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get backups plans backup plan Id lists backup list Id forbidden response
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) Code() int {
	return 403
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdForbidden %s", 403, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdForbidden %s", 403, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupsPlansBackupPlanIDListsBackupListIDNotFound creates a GetBackupsPlansBackupPlanIDListsBackupListIDNotFound with default headers values
func NewGetBackupsPlansBackupPlanIDListsBackupListIDNotFound() *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound {
	return &GetBackupsPlansBackupPlanIDListsBackupListIDNotFound{}
}

/*
GetBackupsPlansBackupPlanIDListsBackupListIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBackupsPlansBackupPlanIDListsBackupListIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get backups plans backup plan Id lists backup list Id not found response has a 2xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backups plans backup plan Id lists backup list Id not found response has a 3xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backups plans backup plan Id lists backup list Id not found response has a 4xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backups plans backup plan Id lists backup list Id not found response has a 5xx status code
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get backups plans backup plan Id lists backup list Id not found response a status code equal to that given
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get backups plans backup plan Id lists backup list Id not found response
func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) Code() int {
	return 404
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdNotFound %s", 404, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}/lists/{backupListId}][%d] getBackupsPlansBackupPlanIdListsBackupListIdNotFound %s", 404, payload)
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBackupsPlansBackupPlanIDListsBackupListIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
