// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetKmsKeyIDReader is a Reader for the GetKmsKeyID structure.
type GetKmsKeyIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKmsKeyIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKmsKeyIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKmsKeyIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKmsKeyIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKmsKeyIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKmsKeyIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kms/key/{id}] GetKmsKeyID", response, response.Code())
	}
}

// NewGetKmsKeyIDOK creates a GetKmsKeyIDOK with default headers values
func NewGetKmsKeyIDOK() *GetKmsKeyIDOK {
	return &GetKmsKeyIDOK{}
}

/*
GetKmsKeyIDOK describes a response with status code 200, with default header values.

OK
*/
type GetKmsKeyIDOK struct {
	Payload *models.KeyGetResponse
}

// IsSuccess returns true when this get kms key Id o k response has a 2xx status code
func (o *GetKmsKeyIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kms key Id o k response has a 3xx status code
func (o *GetKmsKeyIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key Id o k response has a 4xx status code
func (o *GetKmsKeyIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kms key Id o k response has a 5xx status code
func (o *GetKmsKeyIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key Id o k response a status code equal to that given
func (o *GetKmsKeyIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kms key Id o k response
func (o *GetKmsKeyIDOK) Code() int {
	return 200
}

func (o *GetKmsKeyIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdOK %s", 200, payload)
}

func (o *GetKmsKeyIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdOK %s", 200, payload)
}

func (o *GetKmsKeyIDOK) GetPayload() *models.KeyGetResponse {
	return o.Payload
}

func (o *GetKmsKeyIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyIDBadRequest creates a GetKmsKeyIDBadRequest with default headers values
func NewGetKmsKeyIDBadRequest() *GetKmsKeyIDBadRequest {
	return &GetKmsKeyIDBadRequest{}
}

/*
GetKmsKeyIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetKmsKeyIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key Id bad request response has a 2xx status code
func (o *GetKmsKeyIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key Id bad request response has a 3xx status code
func (o *GetKmsKeyIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key Id bad request response has a 4xx status code
func (o *GetKmsKeyIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key Id bad request response has a 5xx status code
func (o *GetKmsKeyIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key Id bad request response a status code equal to that given
func (o *GetKmsKeyIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kms key Id bad request response
func (o *GetKmsKeyIDBadRequest) Code() int {
	return 400
}

func (o *GetKmsKeyIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdBadRequest %s", 400, payload)
}

func (o *GetKmsKeyIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdBadRequest %s", 400, payload)
}

func (o *GetKmsKeyIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyIDUnauthorized creates a GetKmsKeyIDUnauthorized with default headers values
func NewGetKmsKeyIDUnauthorized() *GetKmsKeyIDUnauthorized {
	return &GetKmsKeyIDUnauthorized{}
}

/*
GetKmsKeyIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetKmsKeyIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key Id unauthorized response has a 2xx status code
func (o *GetKmsKeyIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key Id unauthorized response has a 3xx status code
func (o *GetKmsKeyIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key Id unauthorized response has a 4xx status code
func (o *GetKmsKeyIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key Id unauthorized response has a 5xx status code
func (o *GetKmsKeyIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key Id unauthorized response a status code equal to that given
func (o *GetKmsKeyIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kms key Id unauthorized response
func (o *GetKmsKeyIDUnauthorized) Code() int {
	return 401
}

func (o *GetKmsKeyIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdUnauthorized %s", 401, payload)
}

func (o *GetKmsKeyIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdUnauthorized %s", 401, payload)
}

func (o *GetKmsKeyIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyIDForbidden creates a GetKmsKeyIDForbidden with default headers values
func NewGetKmsKeyIDForbidden() *GetKmsKeyIDForbidden {
	return &GetKmsKeyIDForbidden{}
}

/*
GetKmsKeyIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetKmsKeyIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key Id forbidden response has a 2xx status code
func (o *GetKmsKeyIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key Id forbidden response has a 3xx status code
func (o *GetKmsKeyIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key Id forbidden response has a 4xx status code
func (o *GetKmsKeyIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key Id forbidden response has a 5xx status code
func (o *GetKmsKeyIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key Id forbidden response a status code equal to that given
func (o *GetKmsKeyIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kms key Id forbidden response
func (o *GetKmsKeyIDForbidden) Code() int {
	return 403
}

func (o *GetKmsKeyIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdForbidden %s", 403, payload)
}

func (o *GetKmsKeyIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdForbidden %s", 403, payload)
}

func (o *GetKmsKeyIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyIDNotFound creates a GetKmsKeyIDNotFound with default headers values
func NewGetKmsKeyIDNotFound() *GetKmsKeyIDNotFound {
	return &GetKmsKeyIDNotFound{}
}

/*
GetKmsKeyIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetKmsKeyIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key Id not found response has a 2xx status code
func (o *GetKmsKeyIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key Id not found response has a 3xx status code
func (o *GetKmsKeyIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key Id not found response has a 4xx status code
func (o *GetKmsKeyIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key Id not found response has a 5xx status code
func (o *GetKmsKeyIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key Id not found response a status code equal to that given
func (o *GetKmsKeyIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kms key Id not found response
func (o *GetKmsKeyIDNotFound) Code() int {
	return 404
}

func (o *GetKmsKeyIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdNotFound %s", 404, payload)
}

func (o *GetKmsKeyIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key/{id}][%d] getKmsKeyIdNotFound %s", 404, payload)
}

func (o *GetKmsKeyIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
