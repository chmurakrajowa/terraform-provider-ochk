// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutKmsKeyReader is a Reader for the PutKmsKey structure.
type PutKmsKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutKmsKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutKmsKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutKmsKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutKmsKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutKmsKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kms/key] PutKmsKey", response, response.Code())
	}
}

// NewPutKmsKeyOK creates a PutKmsKeyOK with default headers values
func NewPutKmsKeyOK() *PutKmsKeyOK {
	return &PutKmsKeyOK{}
}

/*
PutKmsKeyOK describes a response with status code 200, with default header values.

OK
*/
type PutKmsKeyOK struct {
	Payload *models.CreateKmsKeyResponse
}

// IsSuccess returns true when this put kms key o k response has a 2xx status code
func (o *PutKmsKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put kms key o k response has a 3xx status code
func (o *PutKmsKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms key o k response has a 4xx status code
func (o *PutKmsKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put kms key o k response has a 5xx status code
func (o *PutKmsKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms key o k response a status code equal to that given
func (o *PutKmsKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put kms key o k response
func (o *PutKmsKeyOK) Code() int {
	return 200
}

func (o *PutKmsKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyOK %s", 200, payload)
}

func (o *PutKmsKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyOK %s", 200, payload)
}

func (o *PutKmsKeyOK) GetPayload() *models.CreateKmsKeyResponse {
	return o.Payload
}

func (o *PutKmsKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateKmsKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsKeyBadRequest creates a PutKmsKeyBadRequest with default headers values
func NewPutKmsKeyBadRequest() *PutKmsKeyBadRequest {
	return &PutKmsKeyBadRequest{}
}

/*
PutKmsKeyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutKmsKeyBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms key bad request response has a 2xx status code
func (o *PutKmsKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms key bad request response has a 3xx status code
func (o *PutKmsKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms key bad request response has a 4xx status code
func (o *PutKmsKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms key bad request response has a 5xx status code
func (o *PutKmsKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms key bad request response a status code equal to that given
func (o *PutKmsKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put kms key bad request response
func (o *PutKmsKeyBadRequest) Code() int {
	return 400
}

func (o *PutKmsKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyBadRequest %s", 400, payload)
}

func (o *PutKmsKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyBadRequest %s", 400, payload)
}

func (o *PutKmsKeyBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsKeyUnauthorized creates a PutKmsKeyUnauthorized with default headers values
func NewPutKmsKeyUnauthorized() *PutKmsKeyUnauthorized {
	return &PutKmsKeyUnauthorized{}
}

/*
PutKmsKeyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutKmsKeyUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms key unauthorized response has a 2xx status code
func (o *PutKmsKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms key unauthorized response has a 3xx status code
func (o *PutKmsKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms key unauthorized response has a 4xx status code
func (o *PutKmsKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms key unauthorized response has a 5xx status code
func (o *PutKmsKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms key unauthorized response a status code equal to that given
func (o *PutKmsKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put kms key unauthorized response
func (o *PutKmsKeyUnauthorized) Code() int {
	return 401
}

func (o *PutKmsKeyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyUnauthorized %s", 401, payload)
}

func (o *PutKmsKeyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyUnauthorized %s", 401, payload)
}

func (o *PutKmsKeyUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsKeyForbidden creates a PutKmsKeyForbidden with default headers values
func NewPutKmsKeyForbidden() *PutKmsKeyForbidden {
	return &PutKmsKeyForbidden{}
}

/*
PutKmsKeyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutKmsKeyForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms key forbidden response has a 2xx status code
func (o *PutKmsKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms key forbidden response has a 3xx status code
func (o *PutKmsKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms key forbidden response has a 4xx status code
func (o *PutKmsKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms key forbidden response has a 5xx status code
func (o *PutKmsKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms key forbidden response a status code equal to that given
func (o *PutKmsKeyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put kms key forbidden response
func (o *PutKmsKeyForbidden) Code() int {
	return 403
}

func (o *PutKmsKeyForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyForbidden %s", 403, payload)
}

func (o *PutKmsKeyForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/key][%d] putKmsKeyForbidden %s", 403, payload)
}

func (o *PutKmsKeyForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
