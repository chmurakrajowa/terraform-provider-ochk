// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PostKmsKeyIDRevokeReader is a Reader for the PostKmsKeyIDRevoke structure.
type PostKmsKeyIDRevokeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKmsKeyIDRevokeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKmsKeyIDRevokeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKmsKeyIDRevokeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKmsKeyIDRevokeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKmsKeyIDRevokeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKmsKeyIDRevokeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kms/key/{id}/revoke] PostKmsKeyIDRevoke", response, response.Code())
	}
}

// NewPostKmsKeyIDRevokeOK creates a PostKmsKeyIDRevokeOK with default headers values
func NewPostKmsKeyIDRevokeOK() *PostKmsKeyIDRevokeOK {
	return &PostKmsKeyIDRevokeOK{}
}

/*
PostKmsKeyIDRevokeOK describes a response with status code 200, with default header values.

OK
*/
type PostKmsKeyIDRevokeOK struct {
	Payload *models.RevokeKmsKeyResponse
}

// IsSuccess returns true when this post kms key Id revoke o k response has a 2xx status code
func (o *PostKmsKeyIDRevokeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post kms key Id revoke o k response has a 3xx status code
func (o *PostKmsKeyIDRevokeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id revoke o k response has a 4xx status code
func (o *PostKmsKeyIDRevokeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post kms key Id revoke o k response has a 5xx status code
func (o *PostKmsKeyIDRevokeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id revoke o k response a status code equal to that given
func (o *PostKmsKeyIDRevokeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post kms key Id revoke o k response
func (o *PostKmsKeyIDRevokeOK) Code() int {
	return 200
}

func (o *PostKmsKeyIDRevokeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeOK %s", 200, payload)
}

func (o *PostKmsKeyIDRevokeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeOK %s", 200, payload)
}

func (o *PostKmsKeyIDRevokeOK) GetPayload() *models.RevokeKmsKeyResponse {
	return o.Payload
}

func (o *PostKmsKeyIDRevokeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RevokeKmsKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDRevokeBadRequest creates a PostKmsKeyIDRevokeBadRequest with default headers values
func NewPostKmsKeyIDRevokeBadRequest() *PostKmsKeyIDRevokeBadRequest {
	return &PostKmsKeyIDRevokeBadRequest{}
}

/*
PostKmsKeyIDRevokeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostKmsKeyIDRevokeBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id revoke bad request response has a 2xx status code
func (o *PostKmsKeyIDRevokeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id revoke bad request response has a 3xx status code
func (o *PostKmsKeyIDRevokeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id revoke bad request response has a 4xx status code
func (o *PostKmsKeyIDRevokeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id revoke bad request response has a 5xx status code
func (o *PostKmsKeyIDRevokeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id revoke bad request response a status code equal to that given
func (o *PostKmsKeyIDRevokeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post kms key Id revoke bad request response
func (o *PostKmsKeyIDRevokeBadRequest) Code() int {
	return 400
}

func (o *PostKmsKeyIDRevokeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeBadRequest %s", 400, payload)
}

func (o *PostKmsKeyIDRevokeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeBadRequest %s", 400, payload)
}

func (o *PostKmsKeyIDRevokeBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDRevokeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDRevokeUnauthorized creates a PostKmsKeyIDRevokeUnauthorized with default headers values
func NewPostKmsKeyIDRevokeUnauthorized() *PostKmsKeyIDRevokeUnauthorized {
	return &PostKmsKeyIDRevokeUnauthorized{}
}

/*
PostKmsKeyIDRevokeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostKmsKeyIDRevokeUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id revoke unauthorized response has a 2xx status code
func (o *PostKmsKeyIDRevokeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id revoke unauthorized response has a 3xx status code
func (o *PostKmsKeyIDRevokeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id revoke unauthorized response has a 4xx status code
func (o *PostKmsKeyIDRevokeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id revoke unauthorized response has a 5xx status code
func (o *PostKmsKeyIDRevokeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id revoke unauthorized response a status code equal to that given
func (o *PostKmsKeyIDRevokeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post kms key Id revoke unauthorized response
func (o *PostKmsKeyIDRevokeUnauthorized) Code() int {
	return 401
}

func (o *PostKmsKeyIDRevokeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeUnauthorized %s", 401, payload)
}

func (o *PostKmsKeyIDRevokeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeUnauthorized %s", 401, payload)
}

func (o *PostKmsKeyIDRevokeUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDRevokeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDRevokeForbidden creates a PostKmsKeyIDRevokeForbidden with default headers values
func NewPostKmsKeyIDRevokeForbidden() *PostKmsKeyIDRevokeForbidden {
	return &PostKmsKeyIDRevokeForbidden{}
}

/*
PostKmsKeyIDRevokeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostKmsKeyIDRevokeForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id revoke forbidden response has a 2xx status code
func (o *PostKmsKeyIDRevokeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id revoke forbidden response has a 3xx status code
func (o *PostKmsKeyIDRevokeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id revoke forbidden response has a 4xx status code
func (o *PostKmsKeyIDRevokeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id revoke forbidden response has a 5xx status code
func (o *PostKmsKeyIDRevokeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id revoke forbidden response a status code equal to that given
func (o *PostKmsKeyIDRevokeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post kms key Id revoke forbidden response
func (o *PostKmsKeyIDRevokeForbidden) Code() int {
	return 403
}

func (o *PostKmsKeyIDRevokeForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeForbidden %s", 403, payload)
}

func (o *PostKmsKeyIDRevokeForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeForbidden %s", 403, payload)
}

func (o *PostKmsKeyIDRevokeForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDRevokeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDRevokeNotFound creates a PostKmsKeyIDRevokeNotFound with default headers values
func NewPostKmsKeyIDRevokeNotFound() *PostKmsKeyIDRevokeNotFound {
	return &PostKmsKeyIDRevokeNotFound{}
}

/*
PostKmsKeyIDRevokeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostKmsKeyIDRevokeNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id revoke not found response has a 2xx status code
func (o *PostKmsKeyIDRevokeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id revoke not found response has a 3xx status code
func (o *PostKmsKeyIDRevokeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id revoke not found response has a 4xx status code
func (o *PostKmsKeyIDRevokeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id revoke not found response has a 5xx status code
func (o *PostKmsKeyIDRevokeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id revoke not found response a status code equal to that given
func (o *PostKmsKeyIDRevokeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post kms key Id revoke not found response
func (o *PostKmsKeyIDRevokeNotFound) Code() int {
	return 404
}

func (o *PostKmsKeyIDRevokeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeNotFound %s", 404, payload)
}

func (o *PostKmsKeyIDRevokeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/revoke][%d] postKmsKeyIdRevokeNotFound %s", 404, payload)
}

func (o *PostKmsKeyIDRevokeNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDRevokeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
