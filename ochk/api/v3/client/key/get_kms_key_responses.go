// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetKmsKeyReader is a Reader for the GetKmsKey structure.
type GetKmsKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKmsKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKmsKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKmsKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKmsKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKmsKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kms/key] GetKmsKey", response, response.Code())
	}
}

// NewGetKmsKeyOK creates a GetKmsKeyOK with default headers values
func NewGetKmsKeyOK() *GetKmsKeyOK {
	return &GetKmsKeyOK{}
}

/*
GetKmsKeyOK describes a response with status code 200, with default header values.

OK
*/
type GetKmsKeyOK struct {
	Payload *models.KeyListResponse
}

// IsSuccess returns true when this get kms key o k response has a 2xx status code
func (o *GetKmsKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kms key o k response has a 3xx status code
func (o *GetKmsKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key o k response has a 4xx status code
func (o *GetKmsKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kms key o k response has a 5xx status code
func (o *GetKmsKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key o k response a status code equal to that given
func (o *GetKmsKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kms key o k response
func (o *GetKmsKeyOK) Code() int {
	return 200
}

func (o *GetKmsKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyOK %s", 200, payload)
}

func (o *GetKmsKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyOK %s", 200, payload)
}

func (o *GetKmsKeyOK) GetPayload() *models.KeyListResponse {
	return o.Payload
}

func (o *GetKmsKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyBadRequest creates a GetKmsKeyBadRequest with default headers values
func NewGetKmsKeyBadRequest() *GetKmsKeyBadRequest {
	return &GetKmsKeyBadRequest{}
}

/*
GetKmsKeyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetKmsKeyBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key bad request response has a 2xx status code
func (o *GetKmsKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key bad request response has a 3xx status code
func (o *GetKmsKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key bad request response has a 4xx status code
func (o *GetKmsKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key bad request response has a 5xx status code
func (o *GetKmsKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key bad request response a status code equal to that given
func (o *GetKmsKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kms key bad request response
func (o *GetKmsKeyBadRequest) Code() int {
	return 400
}

func (o *GetKmsKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyBadRequest %s", 400, payload)
}

func (o *GetKmsKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyBadRequest %s", 400, payload)
}

func (o *GetKmsKeyBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyUnauthorized creates a GetKmsKeyUnauthorized with default headers values
func NewGetKmsKeyUnauthorized() *GetKmsKeyUnauthorized {
	return &GetKmsKeyUnauthorized{}
}

/*
GetKmsKeyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetKmsKeyUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key unauthorized response has a 2xx status code
func (o *GetKmsKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key unauthorized response has a 3xx status code
func (o *GetKmsKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key unauthorized response has a 4xx status code
func (o *GetKmsKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key unauthorized response has a 5xx status code
func (o *GetKmsKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key unauthorized response a status code equal to that given
func (o *GetKmsKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kms key unauthorized response
func (o *GetKmsKeyUnauthorized) Code() int {
	return 401
}

func (o *GetKmsKeyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyUnauthorized %s", 401, payload)
}

func (o *GetKmsKeyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyUnauthorized %s", 401, payload)
}

func (o *GetKmsKeyUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKmsKeyForbidden creates a GetKmsKeyForbidden with default headers values
func NewGetKmsKeyForbidden() *GetKmsKeyForbidden {
	return &GetKmsKeyForbidden{}
}

/*
GetKmsKeyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetKmsKeyForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get kms key forbidden response has a 2xx status code
func (o *GetKmsKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kms key forbidden response has a 3xx status code
func (o *GetKmsKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kms key forbidden response has a 4xx status code
func (o *GetKmsKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kms key forbidden response has a 5xx status code
func (o *GetKmsKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kms key forbidden response a status code equal to that given
func (o *GetKmsKeyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kms key forbidden response
func (o *GetKmsKeyForbidden) Code() int {
	return 403
}

func (o *GetKmsKeyForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyForbidden %s", 403, payload)
}

func (o *GetKmsKeyForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kms/key][%d] getKmsKeyForbidden %s", 403, payload)
}

func (o *GetKmsKeyForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKmsKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
