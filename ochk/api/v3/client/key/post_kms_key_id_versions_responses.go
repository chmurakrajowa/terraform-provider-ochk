// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PostKmsKeyIDVersionsReader is a Reader for the PostKmsKeyIDVersions structure.
type PostKmsKeyIDVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKmsKeyIDVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKmsKeyIDVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKmsKeyIDVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKmsKeyIDVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKmsKeyIDVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKmsKeyIDVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kms/key/{id}/versions] PostKmsKeyIDVersions", response, response.Code())
	}
}

// NewPostKmsKeyIDVersionsOK creates a PostKmsKeyIDVersionsOK with default headers values
func NewPostKmsKeyIDVersionsOK() *PostKmsKeyIDVersionsOK {
	return &PostKmsKeyIDVersionsOK{}
}

/*
PostKmsKeyIDVersionsOK describes a response with status code 200, with default header values.

OK
*/
type PostKmsKeyIDVersionsOK struct {
	Payload *models.CreateNewKmsKeyVersionResponse
}

// IsSuccess returns true when this post kms key Id versions o k response has a 2xx status code
func (o *PostKmsKeyIDVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post kms key Id versions o k response has a 3xx status code
func (o *PostKmsKeyIDVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id versions o k response has a 4xx status code
func (o *PostKmsKeyIDVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post kms key Id versions o k response has a 5xx status code
func (o *PostKmsKeyIDVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id versions o k response a status code equal to that given
func (o *PostKmsKeyIDVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post kms key Id versions o k response
func (o *PostKmsKeyIDVersionsOK) Code() int {
	return 200
}

func (o *PostKmsKeyIDVersionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsOK %s", 200, payload)
}

func (o *PostKmsKeyIDVersionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsOK %s", 200, payload)
}

func (o *PostKmsKeyIDVersionsOK) GetPayload() *models.CreateNewKmsKeyVersionResponse {
	return o.Payload
}

func (o *PostKmsKeyIDVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateNewKmsKeyVersionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDVersionsBadRequest creates a PostKmsKeyIDVersionsBadRequest with default headers values
func NewPostKmsKeyIDVersionsBadRequest() *PostKmsKeyIDVersionsBadRequest {
	return &PostKmsKeyIDVersionsBadRequest{}
}

/*
PostKmsKeyIDVersionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostKmsKeyIDVersionsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id versions bad request response has a 2xx status code
func (o *PostKmsKeyIDVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id versions bad request response has a 3xx status code
func (o *PostKmsKeyIDVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id versions bad request response has a 4xx status code
func (o *PostKmsKeyIDVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id versions bad request response has a 5xx status code
func (o *PostKmsKeyIDVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id versions bad request response a status code equal to that given
func (o *PostKmsKeyIDVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post kms key Id versions bad request response
func (o *PostKmsKeyIDVersionsBadRequest) Code() int {
	return 400
}

func (o *PostKmsKeyIDVersionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsBadRequest %s", 400, payload)
}

func (o *PostKmsKeyIDVersionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsBadRequest %s", 400, payload)
}

func (o *PostKmsKeyIDVersionsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDVersionsUnauthorized creates a PostKmsKeyIDVersionsUnauthorized with default headers values
func NewPostKmsKeyIDVersionsUnauthorized() *PostKmsKeyIDVersionsUnauthorized {
	return &PostKmsKeyIDVersionsUnauthorized{}
}

/*
PostKmsKeyIDVersionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostKmsKeyIDVersionsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id versions unauthorized response has a 2xx status code
func (o *PostKmsKeyIDVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id versions unauthorized response has a 3xx status code
func (o *PostKmsKeyIDVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id versions unauthorized response has a 4xx status code
func (o *PostKmsKeyIDVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id versions unauthorized response has a 5xx status code
func (o *PostKmsKeyIDVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id versions unauthorized response a status code equal to that given
func (o *PostKmsKeyIDVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post kms key Id versions unauthorized response
func (o *PostKmsKeyIDVersionsUnauthorized) Code() int {
	return 401
}

func (o *PostKmsKeyIDVersionsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsUnauthorized %s", 401, payload)
}

func (o *PostKmsKeyIDVersionsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsUnauthorized %s", 401, payload)
}

func (o *PostKmsKeyIDVersionsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDVersionsForbidden creates a PostKmsKeyIDVersionsForbidden with default headers values
func NewPostKmsKeyIDVersionsForbidden() *PostKmsKeyIDVersionsForbidden {
	return &PostKmsKeyIDVersionsForbidden{}
}

/*
PostKmsKeyIDVersionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostKmsKeyIDVersionsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id versions forbidden response has a 2xx status code
func (o *PostKmsKeyIDVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id versions forbidden response has a 3xx status code
func (o *PostKmsKeyIDVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id versions forbidden response has a 4xx status code
func (o *PostKmsKeyIDVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id versions forbidden response has a 5xx status code
func (o *PostKmsKeyIDVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id versions forbidden response a status code equal to that given
func (o *PostKmsKeyIDVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post kms key Id versions forbidden response
func (o *PostKmsKeyIDVersionsForbidden) Code() int {
	return 403
}

func (o *PostKmsKeyIDVersionsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsForbidden %s", 403, payload)
}

func (o *PostKmsKeyIDVersionsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsForbidden %s", 403, payload)
}

func (o *PostKmsKeyIDVersionsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKmsKeyIDVersionsNotFound creates a PostKmsKeyIDVersionsNotFound with default headers values
func NewPostKmsKeyIDVersionsNotFound() *PostKmsKeyIDVersionsNotFound {
	return &PostKmsKeyIDVersionsNotFound{}
}

/*
PostKmsKeyIDVersionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostKmsKeyIDVersionsNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post kms key Id versions not found response has a 2xx status code
func (o *PostKmsKeyIDVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post kms key Id versions not found response has a 3xx status code
func (o *PostKmsKeyIDVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post kms key Id versions not found response has a 4xx status code
func (o *PostKmsKeyIDVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post kms key Id versions not found response has a 5xx status code
func (o *PostKmsKeyIDVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post kms key Id versions not found response a status code equal to that given
func (o *PostKmsKeyIDVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post kms key Id versions not found response
func (o *PostKmsKeyIDVersionsNotFound) Code() int {
	return 404
}

func (o *PostKmsKeyIDVersionsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsNotFound %s", 404, payload)
}

func (o *PostKmsKeyIDVersionsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kms/key/{id}/versions][%d] postKmsKeyIdVersionsNotFound %s", 404, payload)
}

func (o *PostKmsKeyIDVersionsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostKmsKeyIDVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
