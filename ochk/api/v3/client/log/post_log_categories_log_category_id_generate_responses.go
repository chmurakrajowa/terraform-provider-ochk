// Code generated by go-swagger; DO NOT EDIT.

package log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PostLogCategoriesLogCategoryIDGenerateReader is a Reader for the PostLogCategoriesLogCategoryIDGenerate structure.
type PostLogCategoriesLogCategoryIDGenerateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLogCategoriesLogCategoryIDGenerateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLogCategoriesLogCategoryIDGenerateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLogCategoriesLogCategoryIDGenerateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLogCategoriesLogCategoryIDGenerateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLogCategoriesLogCategoryIDGenerateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /log/categories/{logCategoryId}/generate] PostLogCategoriesLogCategoryIDGenerate", response, response.Code())
	}
}

// NewPostLogCategoriesLogCategoryIDGenerateOK creates a PostLogCategoriesLogCategoryIDGenerateOK with default headers values
func NewPostLogCategoriesLogCategoryIDGenerateOK() *PostLogCategoriesLogCategoryIDGenerateOK {
	return &PostLogCategoriesLogCategoryIDGenerateOK{}
}

/*
PostLogCategoriesLogCategoryIDGenerateOK describes a response with status code 200, with default header values.

OK
*/
type PostLogCategoriesLogCategoryIDGenerateOK struct {
	Payload *models.GetLogsResponse
}

// IsSuccess returns true when this post log categories log category Id generate o k response has a 2xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post log categories log category Id generate o k response has a 3xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log categories log category Id generate o k response has a 4xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post log categories log category Id generate o k response has a 5xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post log categories log category Id generate o k response a status code equal to that given
func (o *PostLogCategoriesLogCategoryIDGenerateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post log categories log category Id generate o k response
func (o *PostLogCategoriesLogCategoryIDGenerateOK) Code() int {
	return 200
}

func (o *PostLogCategoriesLogCategoryIDGenerateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateOK %s", 200, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateOK %s", 200, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateOK) GetPayload() *models.GetLogsResponse {
	return o.Payload
}

func (o *PostLogCategoriesLogCategoryIDGenerateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetLogsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogCategoriesLogCategoryIDGenerateBadRequest creates a PostLogCategoriesLogCategoryIDGenerateBadRequest with default headers values
func NewPostLogCategoriesLogCategoryIDGenerateBadRequest() *PostLogCategoriesLogCategoryIDGenerateBadRequest {
	return &PostLogCategoriesLogCategoryIDGenerateBadRequest{}
}

/*
PostLogCategoriesLogCategoryIDGenerateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostLogCategoriesLogCategoryIDGenerateBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log categories log category Id generate bad request response has a 2xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log categories log category Id generate bad request response has a 3xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log categories log category Id generate bad request response has a 4xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log categories log category Id generate bad request response has a 5xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post log categories log category Id generate bad request response a status code equal to that given
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post log categories log category Id generate bad request response
func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) Code() int {
	return 400
}

func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateBadRequest %s", 400, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateBadRequest %s", 400, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogCategoriesLogCategoryIDGenerateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogCategoriesLogCategoryIDGenerateUnauthorized creates a PostLogCategoriesLogCategoryIDGenerateUnauthorized with default headers values
func NewPostLogCategoriesLogCategoryIDGenerateUnauthorized() *PostLogCategoriesLogCategoryIDGenerateUnauthorized {
	return &PostLogCategoriesLogCategoryIDGenerateUnauthorized{}
}

/*
PostLogCategoriesLogCategoryIDGenerateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostLogCategoriesLogCategoryIDGenerateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log categories log category Id generate unauthorized response has a 2xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log categories log category Id generate unauthorized response has a 3xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log categories log category Id generate unauthorized response has a 4xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log categories log category Id generate unauthorized response has a 5xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post log categories log category Id generate unauthorized response a status code equal to that given
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post log categories log category Id generate unauthorized response
func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) Code() int {
	return 401
}

func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateUnauthorized %s", 401, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateUnauthorized %s", 401, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogCategoriesLogCategoryIDGenerateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogCategoriesLogCategoryIDGenerateForbidden creates a PostLogCategoriesLogCategoryIDGenerateForbidden with default headers values
func NewPostLogCategoriesLogCategoryIDGenerateForbidden() *PostLogCategoriesLogCategoryIDGenerateForbidden {
	return &PostLogCategoriesLogCategoryIDGenerateForbidden{}
}

/*
PostLogCategoriesLogCategoryIDGenerateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostLogCategoriesLogCategoryIDGenerateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log categories log category Id generate forbidden response has a 2xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log categories log category Id generate forbidden response has a 3xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log categories log category Id generate forbidden response has a 4xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log categories log category Id generate forbidden response has a 5xx status code
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post log categories log category Id generate forbidden response a status code equal to that given
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post log categories log category Id generate forbidden response
func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) Code() int {
	return 403
}

func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateForbidden %s", 403, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/categories/{logCategoryId}/generate][%d] postLogCategoriesLogCategoryIdGenerateForbidden %s", 403, payload)
}

func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogCategoriesLogCategoryIDGenerateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
