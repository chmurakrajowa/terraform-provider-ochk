// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetProjectsReader is a Reader for the GetProjects structure.
type GetProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /projects] GetProjects", response, response.Code())
	}
}

// NewGetProjectsOK creates a GetProjectsOK with default headers values
func NewGetProjectsOK() *GetProjectsOK {
	return &GetProjectsOK{}
}

/*
GetProjectsOK describes a response with status code 200, with default header values.

OK
*/
type GetProjectsOK struct {
	Payload *models.ListProjectResponse
}

// IsSuccess returns true when this get projects o k response has a 2xx status code
func (o *GetProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get projects o k response has a 3xx status code
func (o *GetProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects o k response has a 4xx status code
func (o *GetProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get projects o k response has a 5xx status code
func (o *GetProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects o k response a status code equal to that given
func (o *GetProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get projects o k response
func (o *GetProjectsOK) Code() int {
	return 200
}

func (o *GetProjectsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsOK %s", 200, payload)
}

func (o *GetProjectsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsOK %s", 200, payload)
}

func (o *GetProjectsOK) GetPayload() *models.ListProjectResponse {
	return o.Payload
}

func (o *GetProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectsBadRequest creates a GetProjectsBadRequest with default headers values
func NewGetProjectsBadRequest() *GetProjectsBadRequest {
	return &GetProjectsBadRequest{}
}

/*
GetProjectsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetProjectsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get projects bad request response has a 2xx status code
func (o *GetProjectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects bad request response has a 3xx status code
func (o *GetProjectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects bad request response has a 4xx status code
func (o *GetProjectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects bad request response has a 5xx status code
func (o *GetProjectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects bad request response a status code equal to that given
func (o *GetProjectsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get projects bad request response
func (o *GetProjectsBadRequest) Code() int {
	return 400
}

func (o *GetProjectsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsBadRequest %s", 400, payload)
}

func (o *GetProjectsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsBadRequest %s", 400, payload)
}

func (o *GetProjectsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectsUnauthorized creates a GetProjectsUnauthorized with default headers values
func NewGetProjectsUnauthorized() *GetProjectsUnauthorized {
	return &GetProjectsUnauthorized{}
}

/*
GetProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get projects unauthorized response has a 2xx status code
func (o *GetProjectsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects unauthorized response has a 3xx status code
func (o *GetProjectsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects unauthorized response has a 4xx status code
func (o *GetProjectsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects unauthorized response has a 5xx status code
func (o *GetProjectsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects unauthorized response a status code equal to that given
func (o *GetProjectsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get projects unauthorized response
func (o *GetProjectsUnauthorized) Code() int {
	return 401
}

func (o *GetProjectsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsUnauthorized %s", 401, payload)
}

func (o *GetProjectsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsUnauthorized %s", 401, payload)
}

func (o *GetProjectsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectsForbidden creates a GetProjectsForbidden with default headers values
func NewGetProjectsForbidden() *GetProjectsForbidden {
	return &GetProjectsForbidden{}
}

/*
GetProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProjectsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get projects forbidden response has a 2xx status code
func (o *GetProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects forbidden response has a 3xx status code
func (o *GetProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects forbidden response has a 4xx status code
func (o *GetProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects forbidden response has a 5xx status code
func (o *GetProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects forbidden response a status code equal to that given
func (o *GetProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get projects forbidden response
func (o *GetProjectsForbidden) Code() int {
	return 403
}

func (o *GetProjectsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsForbidden %s", 403, payload)
}

func (o *GetProjectsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects][%d] getProjectsForbidden %s", 403, payload)
}

func (o *GetProjectsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
