// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutProjectsReader is a Reader for the PutProjects structure.
type PutProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects] PutProjects", response, response.Code())
	}
}

// NewPutProjectsOK creates a PutProjectsOK with default headers values
func NewPutProjectsOK() *PutProjectsOK {
	return &PutProjectsOK{}
}

/*
PutProjectsOK describes a response with status code 200, with default header values.

OK
*/
type PutProjectsOK struct {
	Payload *models.CreateProjectResponse
}

// IsSuccess returns true when this put projects o k response has a 2xx status code
func (o *PutProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put projects o k response has a 3xx status code
func (o *PutProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects o k response has a 4xx status code
func (o *PutProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put projects o k response has a 5xx status code
func (o *PutProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects o k response a status code equal to that given
func (o *PutProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put projects o k response
func (o *PutProjectsOK) Code() int {
	return 200
}

func (o *PutProjectsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsOK %s", 200, payload)
}

func (o *PutProjectsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsOK %s", 200, payload)
}

func (o *PutProjectsOK) GetPayload() *models.CreateProjectResponse {
	return o.Payload
}

func (o *PutProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsBadRequest creates a PutProjectsBadRequest with default headers values
func NewPutProjectsBadRequest() *PutProjectsBadRequest {
	return &PutProjectsBadRequest{}
}

/*
PutProjectsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutProjectsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects bad request response has a 2xx status code
func (o *PutProjectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects bad request response has a 3xx status code
func (o *PutProjectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects bad request response has a 4xx status code
func (o *PutProjectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects bad request response has a 5xx status code
func (o *PutProjectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects bad request response a status code equal to that given
func (o *PutProjectsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put projects bad request response
func (o *PutProjectsBadRequest) Code() int {
	return 400
}

func (o *PutProjectsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsBadRequest %s", 400, payload)
}

func (o *PutProjectsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsBadRequest %s", 400, payload)
}

func (o *PutProjectsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsUnauthorized creates a PutProjectsUnauthorized with default headers values
func NewPutProjectsUnauthorized() *PutProjectsUnauthorized {
	return &PutProjectsUnauthorized{}
}

/*
PutProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutProjectsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects unauthorized response has a 2xx status code
func (o *PutProjectsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects unauthorized response has a 3xx status code
func (o *PutProjectsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects unauthorized response has a 4xx status code
func (o *PutProjectsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects unauthorized response has a 5xx status code
func (o *PutProjectsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects unauthorized response a status code equal to that given
func (o *PutProjectsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put projects unauthorized response
func (o *PutProjectsUnauthorized) Code() int {
	return 401
}

func (o *PutProjectsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsUnauthorized %s", 401, payload)
}

func (o *PutProjectsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsUnauthorized %s", 401, payload)
}

func (o *PutProjectsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsForbidden creates a PutProjectsForbidden with default headers values
func NewPutProjectsForbidden() *PutProjectsForbidden {
	return &PutProjectsForbidden{}
}

/*
PutProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutProjectsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects forbidden response has a 2xx status code
func (o *PutProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects forbidden response has a 3xx status code
func (o *PutProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects forbidden response has a 4xx status code
func (o *PutProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects forbidden response has a 5xx status code
func (o *PutProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects forbidden response a status code equal to that given
func (o *PutProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put projects forbidden response
func (o *PutProjectsForbidden) Code() int {
	return 403
}

func (o *PutProjectsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsForbidden %s", 403, payload)
}

func (o *PutProjectsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects][%d] putProjectsForbidden %s", 403, payload)
}

func (o *PutProjectsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
