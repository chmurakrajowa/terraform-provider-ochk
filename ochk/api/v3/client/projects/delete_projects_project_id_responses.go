// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteProjectsProjectIDReader is a Reader for the DeleteProjectsProjectID structure.
type DeleteProjectsProjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectsProjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectsProjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectsProjectIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectsProjectIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectsProjectIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectsProjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /projects/{projectId}] DeleteProjectsProjectID", response, response.Code())
	}
}

// NewDeleteProjectsProjectIDOK creates a DeleteProjectsProjectIDOK with default headers values
func NewDeleteProjectsProjectIDOK() *DeleteProjectsProjectIDOK {
	return &DeleteProjectsProjectIDOK{}
}

/*
DeleteProjectsProjectIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteProjectsProjectIDOK struct {
	Payload *models.DeleteProjectResponse
}

// IsSuccess returns true when this delete projects project Id o k response has a 2xx status code
func (o *DeleteProjectsProjectIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete projects project Id o k response has a 3xx status code
func (o *DeleteProjectsProjectIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id o k response has a 4xx status code
func (o *DeleteProjectsProjectIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete projects project Id o k response has a 5xx status code
func (o *DeleteProjectsProjectIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id o k response a status code equal to that given
func (o *DeleteProjectsProjectIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete projects project Id o k response
func (o *DeleteProjectsProjectIDOK) Code() int {
	return 200
}

func (o *DeleteProjectsProjectIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDOK) GetPayload() *models.DeleteProjectResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDBadRequest creates a DeleteProjectsProjectIDBadRequest with default headers values
func NewDeleteProjectsProjectIDBadRequest() *DeleteProjectsProjectIDBadRequest {
	return &DeleteProjectsProjectIDBadRequest{}
}

/*
DeleteProjectsProjectIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProjectsProjectIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id bad request response has a 2xx status code
func (o *DeleteProjectsProjectIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id bad request response has a 3xx status code
func (o *DeleteProjectsProjectIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id bad request response has a 4xx status code
func (o *DeleteProjectsProjectIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id bad request response has a 5xx status code
func (o *DeleteProjectsProjectIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id bad request response a status code equal to that given
func (o *DeleteProjectsProjectIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete projects project Id bad request response
func (o *DeleteProjectsProjectIDBadRequest) Code() int {
	return 400
}

func (o *DeleteProjectsProjectIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDUnauthorized creates a DeleteProjectsProjectIDUnauthorized with default headers values
func NewDeleteProjectsProjectIDUnauthorized() *DeleteProjectsProjectIDUnauthorized {
	return &DeleteProjectsProjectIDUnauthorized{}
}

/*
DeleteProjectsProjectIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteProjectsProjectIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id unauthorized response has a 2xx status code
func (o *DeleteProjectsProjectIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id unauthorized response has a 3xx status code
func (o *DeleteProjectsProjectIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id unauthorized response has a 4xx status code
func (o *DeleteProjectsProjectIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id unauthorized response has a 5xx status code
func (o *DeleteProjectsProjectIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id unauthorized response a status code equal to that given
func (o *DeleteProjectsProjectIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete projects project Id unauthorized response
func (o *DeleteProjectsProjectIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteProjectsProjectIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDForbidden creates a DeleteProjectsProjectIDForbidden with default headers values
func NewDeleteProjectsProjectIDForbidden() *DeleteProjectsProjectIDForbidden {
	return &DeleteProjectsProjectIDForbidden{}
}

/*
DeleteProjectsProjectIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectsProjectIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id forbidden response has a 2xx status code
func (o *DeleteProjectsProjectIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id forbidden response has a 3xx status code
func (o *DeleteProjectsProjectIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id forbidden response has a 4xx status code
func (o *DeleteProjectsProjectIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id forbidden response has a 5xx status code
func (o *DeleteProjectsProjectIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id forbidden response a status code equal to that given
func (o *DeleteProjectsProjectIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete projects project Id forbidden response
func (o *DeleteProjectsProjectIDForbidden) Code() int {
	return 403
}

func (o *DeleteProjectsProjectIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDNotFound creates a DeleteProjectsProjectIDNotFound with default headers values
func NewDeleteProjectsProjectIDNotFound() *DeleteProjectsProjectIDNotFound {
	return &DeleteProjectsProjectIDNotFound{}
}

/*
DeleteProjectsProjectIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProjectsProjectIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id not found response has a 2xx status code
func (o *DeleteProjectsProjectIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id not found response has a 3xx status code
func (o *DeleteProjectsProjectIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id not found response has a 4xx status code
func (o *DeleteProjectsProjectIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id not found response has a 5xx status code
func (o *DeleteProjectsProjectIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id not found response a status code equal to that given
func (o *DeleteProjectsProjectIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete projects project Id not found response
func (o *DeleteProjectsProjectIDNotFound) Code() int {
	return 404
}

func (o *DeleteProjectsProjectIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdNotFound %s", 404, payload)
}

func (o *DeleteProjectsProjectIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectsProjectIdNotFound %s", 404, payload)
}

func (o *DeleteProjectsProjectIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
