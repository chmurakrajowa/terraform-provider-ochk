// Code generated by go-swagger; DO NOT EDIT.

package key_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutKmsScheduleReader is a Reader for the PutKmsSchedule structure.
type PutKmsScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutKmsScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutKmsScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutKmsScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutKmsScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutKmsScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kms/schedule] PutKmsSchedule", response, response.Code())
	}
}

// NewPutKmsScheduleOK creates a PutKmsScheduleOK with default headers values
func NewPutKmsScheduleOK() *PutKmsScheduleOK {
	return &PutKmsScheduleOK{}
}

/*
PutKmsScheduleOK describes a response with status code 200, with default header values.

OK
*/
type PutKmsScheduleOK struct {
	Payload *models.CreateKeyRotationScheduleResponse
}

// IsSuccess returns true when this put kms schedule o k response has a 2xx status code
func (o *PutKmsScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put kms schedule o k response has a 3xx status code
func (o *PutKmsScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms schedule o k response has a 4xx status code
func (o *PutKmsScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put kms schedule o k response has a 5xx status code
func (o *PutKmsScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms schedule o k response a status code equal to that given
func (o *PutKmsScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put kms schedule o k response
func (o *PutKmsScheduleOK) Code() int {
	return 200
}

func (o *PutKmsScheduleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleOK %s", 200, payload)
}

func (o *PutKmsScheduleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleOK %s", 200, payload)
}

func (o *PutKmsScheduleOK) GetPayload() *models.CreateKeyRotationScheduleResponse {
	return o.Payload
}

func (o *PutKmsScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateKeyRotationScheduleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsScheduleBadRequest creates a PutKmsScheduleBadRequest with default headers values
func NewPutKmsScheduleBadRequest() *PutKmsScheduleBadRequest {
	return &PutKmsScheduleBadRequest{}
}

/*
PutKmsScheduleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutKmsScheduleBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms schedule bad request response has a 2xx status code
func (o *PutKmsScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms schedule bad request response has a 3xx status code
func (o *PutKmsScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms schedule bad request response has a 4xx status code
func (o *PutKmsScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms schedule bad request response has a 5xx status code
func (o *PutKmsScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms schedule bad request response a status code equal to that given
func (o *PutKmsScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put kms schedule bad request response
func (o *PutKmsScheduleBadRequest) Code() int {
	return 400
}

func (o *PutKmsScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleBadRequest %s", 400, payload)
}

func (o *PutKmsScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleBadRequest %s", 400, payload)
}

func (o *PutKmsScheduleBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsScheduleUnauthorized creates a PutKmsScheduleUnauthorized with default headers values
func NewPutKmsScheduleUnauthorized() *PutKmsScheduleUnauthorized {
	return &PutKmsScheduleUnauthorized{}
}

/*
PutKmsScheduleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutKmsScheduleUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms schedule unauthorized response has a 2xx status code
func (o *PutKmsScheduleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms schedule unauthorized response has a 3xx status code
func (o *PutKmsScheduleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms schedule unauthorized response has a 4xx status code
func (o *PutKmsScheduleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms schedule unauthorized response has a 5xx status code
func (o *PutKmsScheduleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms schedule unauthorized response a status code equal to that given
func (o *PutKmsScheduleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put kms schedule unauthorized response
func (o *PutKmsScheduleUnauthorized) Code() int {
	return 401
}

func (o *PutKmsScheduleUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleUnauthorized %s", 401, payload)
}

func (o *PutKmsScheduleUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleUnauthorized %s", 401, payload)
}

func (o *PutKmsScheduleUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutKmsScheduleForbidden creates a PutKmsScheduleForbidden with default headers values
func NewPutKmsScheduleForbidden() *PutKmsScheduleForbidden {
	return &PutKmsScheduleForbidden{}
}

/*
PutKmsScheduleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutKmsScheduleForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put kms schedule forbidden response has a 2xx status code
func (o *PutKmsScheduleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put kms schedule forbidden response has a 3xx status code
func (o *PutKmsScheduleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put kms schedule forbidden response has a 4xx status code
func (o *PutKmsScheduleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put kms schedule forbidden response has a 5xx status code
func (o *PutKmsScheduleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put kms schedule forbidden response a status code equal to that given
func (o *PutKmsScheduleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put kms schedule forbidden response
func (o *PutKmsScheduleForbidden) Code() int {
	return 403
}

func (o *PutKmsScheduleForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleForbidden %s", 403, payload)
}

func (o *PutKmsScheduleForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kms/schedule][%d] putKmsScheduleForbidden %s", 403, payload)
}

func (o *PutKmsScheduleForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutKmsScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
