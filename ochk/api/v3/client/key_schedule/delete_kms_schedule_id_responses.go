// Code generated by go-swagger; DO NOT EDIT.

package key_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteKmsScheduleIDReader is a Reader for the DeleteKmsScheduleID structure.
type DeleteKmsScheduleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKmsScheduleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteKmsScheduleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteKmsScheduleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteKmsScheduleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteKmsScheduleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /kms/schedule/{id}] DeleteKmsScheduleID", response, response.Code())
	}
}

// NewDeleteKmsScheduleIDOK creates a DeleteKmsScheduleIDOK with default headers values
func NewDeleteKmsScheduleIDOK() *DeleteKmsScheduleIDOK {
	return &DeleteKmsScheduleIDOK{}
}

/*
DeleteKmsScheduleIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteKmsScheduleIDOK struct {
	Payload *models.DeleteKeyRotationScheduleResponse
}

// IsSuccess returns true when this delete kms schedule Id o k response has a 2xx status code
func (o *DeleteKmsScheduleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete kms schedule Id o k response has a 3xx status code
func (o *DeleteKmsScheduleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete kms schedule Id o k response has a 4xx status code
func (o *DeleteKmsScheduleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete kms schedule Id o k response has a 5xx status code
func (o *DeleteKmsScheduleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete kms schedule Id o k response a status code equal to that given
func (o *DeleteKmsScheduleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete kms schedule Id o k response
func (o *DeleteKmsScheduleIDOK) Code() int {
	return 200
}

func (o *DeleteKmsScheduleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdOK %s", 200, payload)
}

func (o *DeleteKmsScheduleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdOK %s", 200, payload)
}

func (o *DeleteKmsScheduleIDOK) GetPayload() *models.DeleteKeyRotationScheduleResponse {
	return o.Payload
}

func (o *DeleteKmsScheduleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteKeyRotationScheduleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKmsScheduleIDBadRequest creates a DeleteKmsScheduleIDBadRequest with default headers values
func NewDeleteKmsScheduleIDBadRequest() *DeleteKmsScheduleIDBadRequest {
	return &DeleteKmsScheduleIDBadRequest{}
}

/*
DeleteKmsScheduleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteKmsScheduleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete kms schedule Id bad request response has a 2xx status code
func (o *DeleteKmsScheduleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete kms schedule Id bad request response has a 3xx status code
func (o *DeleteKmsScheduleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete kms schedule Id bad request response has a 4xx status code
func (o *DeleteKmsScheduleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete kms schedule Id bad request response has a 5xx status code
func (o *DeleteKmsScheduleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete kms schedule Id bad request response a status code equal to that given
func (o *DeleteKmsScheduleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete kms schedule Id bad request response
func (o *DeleteKmsScheduleIDBadRequest) Code() int {
	return 400
}

func (o *DeleteKmsScheduleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdBadRequest %s", 400, payload)
}

func (o *DeleteKmsScheduleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdBadRequest %s", 400, payload)
}

func (o *DeleteKmsScheduleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteKmsScheduleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKmsScheduleIDUnauthorized creates a DeleteKmsScheduleIDUnauthorized with default headers values
func NewDeleteKmsScheduleIDUnauthorized() *DeleteKmsScheduleIDUnauthorized {
	return &DeleteKmsScheduleIDUnauthorized{}
}

/*
DeleteKmsScheduleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteKmsScheduleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete kms schedule Id unauthorized response has a 2xx status code
func (o *DeleteKmsScheduleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete kms schedule Id unauthorized response has a 3xx status code
func (o *DeleteKmsScheduleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete kms schedule Id unauthorized response has a 4xx status code
func (o *DeleteKmsScheduleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete kms schedule Id unauthorized response has a 5xx status code
func (o *DeleteKmsScheduleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete kms schedule Id unauthorized response a status code equal to that given
func (o *DeleteKmsScheduleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete kms schedule Id unauthorized response
func (o *DeleteKmsScheduleIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteKmsScheduleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdUnauthorized %s", 401, payload)
}

func (o *DeleteKmsScheduleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdUnauthorized %s", 401, payload)
}

func (o *DeleteKmsScheduleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteKmsScheduleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKmsScheduleIDForbidden creates a DeleteKmsScheduleIDForbidden with default headers values
func NewDeleteKmsScheduleIDForbidden() *DeleteKmsScheduleIDForbidden {
	return &DeleteKmsScheduleIDForbidden{}
}

/*
DeleteKmsScheduleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteKmsScheduleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete kms schedule Id forbidden response has a 2xx status code
func (o *DeleteKmsScheduleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete kms schedule Id forbidden response has a 3xx status code
func (o *DeleteKmsScheduleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete kms schedule Id forbidden response has a 4xx status code
func (o *DeleteKmsScheduleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete kms schedule Id forbidden response has a 5xx status code
func (o *DeleteKmsScheduleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete kms schedule Id forbidden response a status code equal to that given
func (o *DeleteKmsScheduleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete kms schedule Id forbidden response
func (o *DeleteKmsScheduleIDForbidden) Code() int {
	return 403
}

func (o *DeleteKmsScheduleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdForbidden %s", 403, payload)
}

func (o *DeleteKmsScheduleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /kms/schedule/{id}][%d] deleteKmsScheduleIdForbidden %s", 403, payload)
}

func (o *DeleteKmsScheduleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteKmsScheduleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
