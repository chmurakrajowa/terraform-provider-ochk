// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteNetworkSecurityGroupsGroupIDReader is a Reader for the DeleteNetworkSecurityGroupsGroupID structure.
type DeleteNetworkSecurityGroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetworkSecurityGroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetworkSecurityGroupsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNetworkSecurityGroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNetworkSecurityGroupsGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteNetworkSecurityGroupsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNetworkSecurityGroupsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /network/security-groups/{groupId}] DeleteNetworkSecurityGroupsGroupID", response, response.Code())
	}
}

// NewDeleteNetworkSecurityGroupsGroupIDOK creates a DeleteNetworkSecurityGroupsGroupIDOK with default headers values
func NewDeleteNetworkSecurityGroupsGroupIDOK() *DeleteNetworkSecurityGroupsGroupIDOK {
	return &DeleteNetworkSecurityGroupsGroupIDOK{}
}

/*
DeleteNetworkSecurityGroupsGroupIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteNetworkSecurityGroupsGroupIDOK struct {
	Payload *models.DeleteSecurityGroupResponse
}

// IsSuccess returns true when this delete network security groups group Id o k response has a 2xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete network security groups group Id o k response has a 3xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network security groups group Id o k response has a 4xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete network security groups group Id o k response has a 5xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network security groups group Id o k response a status code equal to that given
func (o *DeleteNetworkSecurityGroupsGroupIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete network security groups group Id o k response
func (o *DeleteNetworkSecurityGroupsGroupIDOK) Code() int {
	return 200
}

func (o *DeleteNetworkSecurityGroupsGroupIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdOK %s", 200, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdOK %s", 200, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDOK) GetPayload() *models.DeleteSecurityGroupResponse {
	return o.Payload
}

func (o *DeleteNetworkSecurityGroupsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteSecurityGroupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkSecurityGroupsGroupIDBadRequest creates a DeleteNetworkSecurityGroupsGroupIDBadRequest with default headers values
func NewDeleteNetworkSecurityGroupsGroupIDBadRequest() *DeleteNetworkSecurityGroupsGroupIDBadRequest {
	return &DeleteNetworkSecurityGroupsGroupIDBadRequest{}
}

/*
DeleteNetworkSecurityGroupsGroupIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteNetworkSecurityGroupsGroupIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network security groups group Id bad request response has a 2xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network security groups group Id bad request response has a 3xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network security groups group Id bad request response has a 4xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network security groups group Id bad request response has a 5xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network security groups group Id bad request response a status code equal to that given
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete network security groups group Id bad request response
func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) Code() int {
	return 400
}

func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkSecurityGroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkSecurityGroupsGroupIDUnauthorized creates a DeleteNetworkSecurityGroupsGroupIDUnauthorized with default headers values
func NewDeleteNetworkSecurityGroupsGroupIDUnauthorized() *DeleteNetworkSecurityGroupsGroupIDUnauthorized {
	return &DeleteNetworkSecurityGroupsGroupIDUnauthorized{}
}

/*
DeleteNetworkSecurityGroupsGroupIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteNetworkSecurityGroupsGroupIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network security groups group Id unauthorized response has a 2xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network security groups group Id unauthorized response has a 3xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network security groups group Id unauthorized response has a 4xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network security groups group Id unauthorized response has a 5xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network security groups group Id unauthorized response a status code equal to that given
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete network security groups group Id unauthorized response
func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkSecurityGroupsGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkSecurityGroupsGroupIDForbidden creates a DeleteNetworkSecurityGroupsGroupIDForbidden with default headers values
func NewDeleteNetworkSecurityGroupsGroupIDForbidden() *DeleteNetworkSecurityGroupsGroupIDForbidden {
	return &DeleteNetworkSecurityGroupsGroupIDForbidden{}
}

/*
DeleteNetworkSecurityGroupsGroupIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteNetworkSecurityGroupsGroupIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network security groups group Id forbidden response has a 2xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network security groups group Id forbidden response has a 3xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network security groups group Id forbidden response has a 4xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network security groups group Id forbidden response has a 5xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network security groups group Id forbidden response a status code equal to that given
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete network security groups group Id forbidden response
func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) Code() int {
	return 403
}

func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkSecurityGroupsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkSecurityGroupsGroupIDNotFound creates a DeleteNetworkSecurityGroupsGroupIDNotFound with default headers values
func NewDeleteNetworkSecurityGroupsGroupIDNotFound() *DeleteNetworkSecurityGroupsGroupIDNotFound {
	return &DeleteNetworkSecurityGroupsGroupIDNotFound{}
}

/*
DeleteNetworkSecurityGroupsGroupIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteNetworkSecurityGroupsGroupIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network security groups group Id not found response has a 2xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network security groups group Id not found response has a 3xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network security groups group Id not found response has a 4xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network security groups group Id not found response has a 5xx status code
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network security groups group Id not found response a status code equal to that given
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete network security groups group Id not found response
func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) Code() int {
	return 404
}

func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdNotFound %s", 404, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/security-groups/{groupId}][%d] deleteNetworkSecurityGroupsGroupIdNotFound %s", 404, payload)
}

func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkSecurityGroupsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
