// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworkSecurityGroupsReader is a Reader for the PutNetworkSecurityGroups structure.
type PutNetworkSecurityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworkSecurityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworkSecurityGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworkSecurityGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworkSecurityGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworkSecurityGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /network/security-groups] PutNetworkSecurityGroups", response, response.Code())
	}
}

// NewPutNetworkSecurityGroupsOK creates a PutNetworkSecurityGroupsOK with default headers values
func NewPutNetworkSecurityGroupsOK() *PutNetworkSecurityGroupsOK {
	return &PutNetworkSecurityGroupsOK{}
}

/*
PutNetworkSecurityGroupsOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworkSecurityGroupsOK struct {
	Payload *models.CreateSecurityGroupResponse
}

// IsSuccess returns true when this put network security groups o k response has a 2xx status code
func (o *PutNetworkSecurityGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put network security groups o k response has a 3xx status code
func (o *PutNetworkSecurityGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups o k response has a 4xx status code
func (o *PutNetworkSecurityGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put network security groups o k response has a 5xx status code
func (o *PutNetworkSecurityGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups o k response a status code equal to that given
func (o *PutNetworkSecurityGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put network security groups o k response
func (o *PutNetworkSecurityGroupsOK) Code() int {
	return 200
}

func (o *PutNetworkSecurityGroupsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsOK %s", 200, payload)
}

func (o *PutNetworkSecurityGroupsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsOK %s", 200, payload)
}

func (o *PutNetworkSecurityGroupsOK) GetPayload() *models.CreateSecurityGroupResponse {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateSecurityGroupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsBadRequest creates a PutNetworkSecurityGroupsBadRequest with default headers values
func NewPutNetworkSecurityGroupsBadRequest() *PutNetworkSecurityGroupsBadRequest {
	return &PutNetworkSecurityGroupsBadRequest{}
}

/*
PutNetworkSecurityGroupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworkSecurityGroupsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups bad request response has a 2xx status code
func (o *PutNetworkSecurityGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups bad request response has a 3xx status code
func (o *PutNetworkSecurityGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups bad request response has a 4xx status code
func (o *PutNetworkSecurityGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups bad request response has a 5xx status code
func (o *PutNetworkSecurityGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups bad request response a status code equal to that given
func (o *PutNetworkSecurityGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put network security groups bad request response
func (o *PutNetworkSecurityGroupsBadRequest) Code() int {
	return 400
}

func (o *PutNetworkSecurityGroupsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsBadRequest %s", 400, payload)
}

func (o *PutNetworkSecurityGroupsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsBadRequest %s", 400, payload)
}

func (o *PutNetworkSecurityGroupsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsUnauthorized creates a PutNetworkSecurityGroupsUnauthorized with default headers values
func NewPutNetworkSecurityGroupsUnauthorized() *PutNetworkSecurityGroupsUnauthorized {
	return &PutNetworkSecurityGroupsUnauthorized{}
}

/*
PutNetworkSecurityGroupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworkSecurityGroupsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups unauthorized response has a 2xx status code
func (o *PutNetworkSecurityGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups unauthorized response has a 3xx status code
func (o *PutNetworkSecurityGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups unauthorized response has a 4xx status code
func (o *PutNetworkSecurityGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups unauthorized response has a 5xx status code
func (o *PutNetworkSecurityGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups unauthorized response a status code equal to that given
func (o *PutNetworkSecurityGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put network security groups unauthorized response
func (o *PutNetworkSecurityGroupsUnauthorized) Code() int {
	return 401
}

func (o *PutNetworkSecurityGroupsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsUnauthorized %s", 401, payload)
}

func (o *PutNetworkSecurityGroupsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsUnauthorized %s", 401, payload)
}

func (o *PutNetworkSecurityGroupsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsForbidden creates a PutNetworkSecurityGroupsForbidden with default headers values
func NewPutNetworkSecurityGroupsForbidden() *PutNetworkSecurityGroupsForbidden {
	return &PutNetworkSecurityGroupsForbidden{}
}

/*
PutNetworkSecurityGroupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworkSecurityGroupsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups forbidden response has a 2xx status code
func (o *PutNetworkSecurityGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups forbidden response has a 3xx status code
func (o *PutNetworkSecurityGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups forbidden response has a 4xx status code
func (o *PutNetworkSecurityGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups forbidden response has a 5xx status code
func (o *PutNetworkSecurityGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups forbidden response a status code equal to that given
func (o *PutNetworkSecurityGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put network security groups forbidden response
func (o *PutNetworkSecurityGroupsForbidden) Code() int {
	return 403
}

func (o *PutNetworkSecurityGroupsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsForbidden %s", 403, payload)
}

func (o *PutNetworkSecurityGroupsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups][%d] putNetworkSecurityGroupsForbidden %s", 403, payload)
}

func (o *PutNetworkSecurityGroupsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
