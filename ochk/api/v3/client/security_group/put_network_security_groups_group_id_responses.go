// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworkSecurityGroupsGroupIDReader is a Reader for the PutNetworkSecurityGroupsGroupID structure.
type PutNetworkSecurityGroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworkSecurityGroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworkSecurityGroupsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworkSecurityGroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworkSecurityGroupsGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworkSecurityGroupsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutNetworkSecurityGroupsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /network/security-groups/{groupId}] PutNetworkSecurityGroupsGroupID", response, response.Code())
	}
}

// NewPutNetworkSecurityGroupsGroupIDOK creates a PutNetworkSecurityGroupsGroupIDOK with default headers values
func NewPutNetworkSecurityGroupsGroupIDOK() *PutNetworkSecurityGroupsGroupIDOK {
	return &PutNetworkSecurityGroupsGroupIDOK{}
}

/*
PutNetworkSecurityGroupsGroupIDOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworkSecurityGroupsGroupIDOK struct {
	Payload *models.UpdateSecurityGroupResponse
}

// IsSuccess returns true when this put network security groups group Id o k response has a 2xx status code
func (o *PutNetworkSecurityGroupsGroupIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put network security groups group Id o k response has a 3xx status code
func (o *PutNetworkSecurityGroupsGroupIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups group Id o k response has a 4xx status code
func (o *PutNetworkSecurityGroupsGroupIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put network security groups group Id o k response has a 5xx status code
func (o *PutNetworkSecurityGroupsGroupIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups group Id o k response a status code equal to that given
func (o *PutNetworkSecurityGroupsGroupIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put network security groups group Id o k response
func (o *PutNetworkSecurityGroupsGroupIDOK) Code() int {
	return 200
}

func (o *PutNetworkSecurityGroupsGroupIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdOK %s", 200, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdOK %s", 200, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDOK) GetPayload() *models.UpdateSecurityGroupResponse {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateSecurityGroupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsGroupIDBadRequest creates a PutNetworkSecurityGroupsGroupIDBadRequest with default headers values
func NewPutNetworkSecurityGroupsGroupIDBadRequest() *PutNetworkSecurityGroupsGroupIDBadRequest {
	return &PutNetworkSecurityGroupsGroupIDBadRequest{}
}

/*
PutNetworkSecurityGroupsGroupIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworkSecurityGroupsGroupIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups group Id bad request response has a 2xx status code
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups group Id bad request response has a 3xx status code
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups group Id bad request response has a 4xx status code
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups group Id bad request response has a 5xx status code
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups group Id bad request response a status code equal to that given
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put network security groups group Id bad request response
func (o *PutNetworkSecurityGroupsGroupIDBadRequest) Code() int {
	return 400
}

func (o *PutNetworkSecurityGroupsGroupIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdBadRequest %s", 400, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdBadRequest %s", 400, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsGroupIDUnauthorized creates a PutNetworkSecurityGroupsGroupIDUnauthorized with default headers values
func NewPutNetworkSecurityGroupsGroupIDUnauthorized() *PutNetworkSecurityGroupsGroupIDUnauthorized {
	return &PutNetworkSecurityGroupsGroupIDUnauthorized{}
}

/*
PutNetworkSecurityGroupsGroupIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworkSecurityGroupsGroupIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups group Id unauthorized response has a 2xx status code
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups group Id unauthorized response has a 3xx status code
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups group Id unauthorized response has a 4xx status code
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups group Id unauthorized response has a 5xx status code
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups group Id unauthorized response a status code equal to that given
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put network security groups group Id unauthorized response
func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) Code() int {
	return 401
}

func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsGroupIDForbidden creates a PutNetworkSecurityGroupsGroupIDForbidden with default headers values
func NewPutNetworkSecurityGroupsGroupIDForbidden() *PutNetworkSecurityGroupsGroupIDForbidden {
	return &PutNetworkSecurityGroupsGroupIDForbidden{}
}

/*
PutNetworkSecurityGroupsGroupIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworkSecurityGroupsGroupIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups group Id forbidden response has a 2xx status code
func (o *PutNetworkSecurityGroupsGroupIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups group Id forbidden response has a 3xx status code
func (o *PutNetworkSecurityGroupsGroupIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups group Id forbidden response has a 4xx status code
func (o *PutNetworkSecurityGroupsGroupIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups group Id forbidden response has a 5xx status code
func (o *PutNetworkSecurityGroupsGroupIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups group Id forbidden response a status code equal to that given
func (o *PutNetworkSecurityGroupsGroupIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put network security groups group Id forbidden response
func (o *PutNetworkSecurityGroupsGroupIDForbidden) Code() int {
	return 403
}

func (o *PutNetworkSecurityGroupsGroupIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdForbidden %s", 403, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdForbidden %s", 403, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkSecurityGroupsGroupIDNotFound creates a PutNetworkSecurityGroupsGroupIDNotFound with default headers values
func NewPutNetworkSecurityGroupsGroupIDNotFound() *PutNetworkSecurityGroupsGroupIDNotFound {
	return &PutNetworkSecurityGroupsGroupIDNotFound{}
}

/*
PutNetworkSecurityGroupsGroupIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutNetworkSecurityGroupsGroupIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network security groups group Id not found response has a 2xx status code
func (o *PutNetworkSecurityGroupsGroupIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network security groups group Id not found response has a 3xx status code
func (o *PutNetworkSecurityGroupsGroupIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network security groups group Id not found response has a 4xx status code
func (o *PutNetworkSecurityGroupsGroupIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network security groups group Id not found response has a 5xx status code
func (o *PutNetworkSecurityGroupsGroupIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put network security groups group Id not found response a status code equal to that given
func (o *PutNetworkSecurityGroupsGroupIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put network security groups group Id not found response
func (o *PutNetworkSecurityGroupsGroupIDNotFound) Code() int {
	return 404
}

func (o *PutNetworkSecurityGroupsGroupIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdNotFound %s", 404, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/security-groups/{groupId}][%d] putNetworkSecurityGroupsGroupIdNotFound %s", 404, payload)
}

func (o *PutNetworkSecurityGroupsGroupIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkSecurityGroupsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
