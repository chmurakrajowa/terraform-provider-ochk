// Code generated by go-swagger; DO NOT EDIT.

package identification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIdentificationPlatformTypeReader is a Reader for the GetIdentificationPlatformType structure.
type GetIdentificationPlatformTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentificationPlatformTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentificationPlatformTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentificationPlatformTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentificationPlatformTypeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentificationPlatformTypeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /identification/platform-type] GetIdentificationPlatformType", response, response.Code())
	}
}

// NewGetIdentificationPlatformTypeOK creates a GetIdentificationPlatformTypeOK with default headers values
func NewGetIdentificationPlatformTypeOK() *GetIdentificationPlatformTypeOK {
	return &GetIdentificationPlatformTypeOK{}
}

/*
GetIdentificationPlatformTypeOK describes a response with status code 200, with default header values.

OK
*/
type GetIdentificationPlatformTypeOK struct {
	Payload *models.GetPlatformTypeResponse
}

// IsSuccess returns true when this get identification platform type o k response has a 2xx status code
func (o *GetIdentificationPlatformTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identification platform type o k response has a 3xx status code
func (o *GetIdentificationPlatformTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identification platform type o k response has a 4xx status code
func (o *GetIdentificationPlatformTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identification platform type o k response has a 5xx status code
func (o *GetIdentificationPlatformTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identification platform type o k response a status code equal to that given
func (o *GetIdentificationPlatformTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get identification platform type o k response
func (o *GetIdentificationPlatformTypeOK) Code() int {
	return 200
}

func (o *GetIdentificationPlatformTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeOK %s", 200, payload)
}

func (o *GetIdentificationPlatformTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeOK %s", 200, payload)
}

func (o *GetIdentificationPlatformTypeOK) GetPayload() *models.GetPlatformTypeResponse {
	return o.Payload
}

func (o *GetIdentificationPlatformTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetPlatformTypeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentificationPlatformTypeBadRequest creates a GetIdentificationPlatformTypeBadRequest with default headers values
func NewGetIdentificationPlatformTypeBadRequest() *GetIdentificationPlatformTypeBadRequest {
	return &GetIdentificationPlatformTypeBadRequest{}
}

/*
GetIdentificationPlatformTypeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIdentificationPlatformTypeBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get identification platform type bad request response has a 2xx status code
func (o *GetIdentificationPlatformTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identification platform type bad request response has a 3xx status code
func (o *GetIdentificationPlatformTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identification platform type bad request response has a 4xx status code
func (o *GetIdentificationPlatformTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identification platform type bad request response has a 5xx status code
func (o *GetIdentificationPlatformTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identification platform type bad request response a status code equal to that given
func (o *GetIdentificationPlatformTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get identification platform type bad request response
func (o *GetIdentificationPlatformTypeBadRequest) Code() int {
	return 400
}

func (o *GetIdentificationPlatformTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeBadRequest %s", 400, payload)
}

func (o *GetIdentificationPlatformTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeBadRequest %s", 400, payload)
}

func (o *GetIdentificationPlatformTypeBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIdentificationPlatformTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentificationPlatformTypeUnauthorized creates a GetIdentificationPlatformTypeUnauthorized with default headers values
func NewGetIdentificationPlatformTypeUnauthorized() *GetIdentificationPlatformTypeUnauthorized {
	return &GetIdentificationPlatformTypeUnauthorized{}
}

/*
GetIdentificationPlatformTypeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIdentificationPlatformTypeUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get identification platform type unauthorized response has a 2xx status code
func (o *GetIdentificationPlatformTypeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identification platform type unauthorized response has a 3xx status code
func (o *GetIdentificationPlatformTypeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identification platform type unauthorized response has a 4xx status code
func (o *GetIdentificationPlatformTypeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identification platform type unauthorized response has a 5xx status code
func (o *GetIdentificationPlatformTypeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identification platform type unauthorized response a status code equal to that given
func (o *GetIdentificationPlatformTypeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get identification platform type unauthorized response
func (o *GetIdentificationPlatformTypeUnauthorized) Code() int {
	return 401
}

func (o *GetIdentificationPlatformTypeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeUnauthorized %s", 401, payload)
}

func (o *GetIdentificationPlatformTypeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeUnauthorized %s", 401, payload)
}

func (o *GetIdentificationPlatformTypeUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIdentificationPlatformTypeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentificationPlatformTypeForbidden creates a GetIdentificationPlatformTypeForbidden with default headers values
func NewGetIdentificationPlatformTypeForbidden() *GetIdentificationPlatformTypeForbidden {
	return &GetIdentificationPlatformTypeForbidden{}
}

/*
GetIdentificationPlatformTypeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIdentificationPlatformTypeForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get identification platform type forbidden response has a 2xx status code
func (o *GetIdentificationPlatformTypeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identification platform type forbidden response has a 3xx status code
func (o *GetIdentificationPlatformTypeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identification platform type forbidden response has a 4xx status code
func (o *GetIdentificationPlatformTypeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identification platform type forbidden response has a 5xx status code
func (o *GetIdentificationPlatformTypeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identification platform type forbidden response a status code equal to that given
func (o *GetIdentificationPlatformTypeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get identification platform type forbidden response
func (o *GetIdentificationPlatformTypeForbidden) Code() int {
	return 403
}

func (o *GetIdentificationPlatformTypeForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeForbidden %s", 403, payload)
}

func (o *GetIdentificationPlatformTypeForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identification/platform-type][%d] getIdentificationPlatformTypeForbidden %s", 403, payload)
}

func (o *GetIdentificationPlatformTypeForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIdentificationPlatformTypeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
