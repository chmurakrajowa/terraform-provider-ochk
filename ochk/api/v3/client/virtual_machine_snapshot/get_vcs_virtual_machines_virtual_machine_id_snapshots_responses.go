// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetVcsVirtualMachinesVirtualMachineIDSnapshotsReader is a Reader for the GetVcsVirtualMachinesVirtualMachineIDSnapshots structure.
type GetVcsVirtualMachinesVirtualMachineIDSnapshotsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots] GetVcsVirtualMachinesVirtualMachineIDSnapshots", response, response.Code())
	}
}

// NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsOK creates a GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsOK() *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK {
	return &GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK describes a response with status code 200, with default header values.

OK
*/
type GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK struct {
	Payload *models.ListSnapshotsResponse
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id snapshots o k response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id snapshots o k response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id snapshots o k response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id snapshots o k response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id snapshots o k response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vcs virtual machines virtual machine Id snapshots o k response
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) Code() int {
	return 200
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsOK %s", 200, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsOK %s", 200, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) GetPayload() *models.ListSnapshotsResponse {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListSnapshotsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest creates a GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest() *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest {
	return &GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id snapshots bad request response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id snapshots bad request response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id snapshots bad request response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id snapshots bad request response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id snapshots bad request response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vcs virtual machines virtual machine Id snapshots bad request response
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) Code() int {
	return 400
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsBadRequest %s", 400, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsBadRequest %s", 400, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized creates a GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized() *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized {
	return &GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id snapshots unauthorized response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id snapshots unauthorized response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id snapshots unauthorized response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id snapshots unauthorized response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id snapshots unauthorized response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get vcs virtual machines virtual machine Id snapshots unauthorized response
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) Code() int {
	return 401
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsUnauthorized %s", 401, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsUnauthorized %s", 401, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden creates a GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden() *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden {
	return &GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id snapshots forbidden response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id snapshots forbidden response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id snapshots forbidden response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id snapshots forbidden response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id snapshots forbidden response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get vcs virtual machines virtual machine Id snapshots forbidden response
func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) Code() int {
	return 403
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsForbidden %s", 403, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] getVcsVirtualMachinesVirtualMachineIdSnapshotsForbidden %s", 403, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
