// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader is a Reader for the PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotID structure.
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}] PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotID", response, response.Code())
	}
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK describes a response with status code 200, with default header values.

OK
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK struct {
	Payload *models.UpdateSnapshotResponse
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id o k response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots snapshot Id o k response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) Code() int {
	return 200
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) GetPayload() *models.UpdateSnapshotResponse {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateSnapshotResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots snapshot Id bad request response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) Code() int {
	return 400
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) Code() int {
	return 401
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) Code() int {
	return 403
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots snapshot Id not found response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots snapshot Id not found response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) Code() int {
	return 404
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdNotFound %s", 404, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdNotFound %s", 404, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
