// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertReader is a Reader for the PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevert structure.
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert] PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevert", response, response.Code())
	}
}

// NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK creates a PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK with default headers values
func NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK() *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK {
	return &PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK{}
}

/*
PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK describes a response with status code 200, with default header values.

OK
*/
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK struct {
	Payload *models.RevertSnapshotResponse
}

// IsSuccess returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response has a 2xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response has a 3xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response has a 4xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response has a 5xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response a status code equal to that given
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post vcs virtual machines virtual machine Id snapshots snapshot Id revert o k response
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) Code() int {
	return 200
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertOK %s", 200, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertOK %s", 200, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) GetPayload() *models.RevertSnapshotResponse {
	return o.Payload
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RevertSnapshotResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest creates a PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest with default headers values
func NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest() *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest {
	return &PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest{}
}

/*
PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response has a 2xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response has a 3xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response has a 4xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response has a 5xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response a status code equal to that given
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post vcs virtual machines virtual machine Id snapshots snapshot Id revert bad request response
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) Code() int {
	return 400
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertBadRequest %s", 400, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertBadRequest %s", 400, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized creates a PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized with default headers values
func NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized() *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized {
	return &PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized{}
}

/*
PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response has a 2xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response has a 3xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response has a 4xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response has a 5xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response a status code equal to that given
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post vcs virtual machines virtual machine Id snapshots snapshot Id revert unauthorized response
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) Code() int {
	return 401
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertUnauthorized %s", 401, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertUnauthorized %s", 401, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden creates a PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden with default headers values
func NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden() *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden {
	return &PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden{}
}

/*
PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response has a 2xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response has a 3xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response has a 4xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response has a 5xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response a status code equal to that given
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post vcs virtual machines virtual machine Id snapshots snapshot Id revert forbidden response
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) Code() int {
	return 403
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertForbidden %s", 403, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertForbidden %s", 403, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound creates a PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound with default headers values
func NewPostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound() *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound {
	return &PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound{}
}

/*
PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response has a 2xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response has a 3xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response has a 4xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response has a 5xx status code
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response a status code equal to that given
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post vcs virtual machines virtual machine Id snapshots snapshot Id revert not found response
func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) Code() int {
	return 404
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertNotFound %s", 404, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert][%d] postVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdRevertNotFound %s", 404, payload)
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDRevertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
