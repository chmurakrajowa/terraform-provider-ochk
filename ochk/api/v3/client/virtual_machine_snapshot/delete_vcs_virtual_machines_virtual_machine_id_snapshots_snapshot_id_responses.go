// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader is a Reader for the DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotID structure.
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}] DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotID", response, response.Code())
	}
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK creates a DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK() *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK {
	return &DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK struct {
	Payload *models.DeleteSnapshotResponse
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id snapshots snapshot Id o k response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) Code() int {
	return 200
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdOK %s", 200, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdOK %s", 200, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) GetPayload() *models.DeleteSnapshotResponse {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteSnapshotResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest creates a DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest() *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest {
	return &DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id snapshots snapshot Id bad request response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) Code() int {
	return 400
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdBadRequest %s", 400, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdBadRequest %s", 400, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized creates a DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized() *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized {
	return &DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id snapshots snapshot Id unauthorized response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdUnauthorized %s", 401, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdUnauthorized %s", 401, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden creates a DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden() *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden {
	return &DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id snapshots snapshot Id forbidden response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) Code() int {
	return 403
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdForbidden %s", 403, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdForbidden %s", 403, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound creates a DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound() *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound {
	return &DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id snapshots snapshot Id not found response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) Code() int {
	return 404
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdNotFound %s", 404, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}][%d] deleteVcsVirtualMachinesVirtualMachineIdSnapshotsSnapshotIdNotFound %s", 404, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDSnapshotsSnapshotIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
