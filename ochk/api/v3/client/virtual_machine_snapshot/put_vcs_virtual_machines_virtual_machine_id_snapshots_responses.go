// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutVcsVirtualMachinesVirtualMachineIDSnapshotsReader is a Reader for the PutVcsVirtualMachinesVirtualMachineIDSnapshots structure.
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots] PutVcsVirtualMachinesVirtualMachineIDSnapshots", response, response.Code())
	}
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsOK creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsOK() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK describes a response with status code 200, with default header values.

OK
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK struct {
	Payload *models.CreateSnapshotResponse
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots o k response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots o k response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots o k response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots o k response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots o k response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots o k response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) Code() int {
	return 200
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) GetPayload() *models.CreateSnapshotResponse {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateSnapshotResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots bad request response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots bad request response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots bad request response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots bad request response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots bad request response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots bad request response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) Code() int {
	return 400
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots unauthorized response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots unauthorized response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots unauthorized response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots unauthorized response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots unauthorized response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots unauthorized response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) Code() int {
	return 401
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden creates a PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden() *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden {
	return &PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id snapshots forbidden response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id snapshots forbidden response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id snapshots forbidden response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id snapshots forbidden response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id snapshots forbidden response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put vcs virtual machines virtual machine Id snapshots forbidden response
func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) Code() int {
	return 403
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}/snapshots][%d] putVcsVirtualMachinesVirtualMachineIdSnapshotsForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDSnapshotsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
