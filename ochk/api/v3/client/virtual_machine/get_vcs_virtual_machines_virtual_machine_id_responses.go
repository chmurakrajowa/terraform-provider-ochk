// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetVcsVirtualMachinesVirtualMachineIDReader is a Reader for the GetVcsVirtualMachinesVirtualMachineID structure.
type GetVcsVirtualMachinesVirtualMachineIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcsVirtualMachinesVirtualMachineIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcsVirtualMachinesVirtualMachineIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVcsVirtualMachinesVirtualMachineIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVcsVirtualMachinesVirtualMachineIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVcsVirtualMachinesVirtualMachineIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVcsVirtualMachinesVirtualMachineIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /vcs/virtual-machines/{virtualMachineId}] GetVcsVirtualMachinesVirtualMachineID", response, response.Code())
	}
}

// NewGetVcsVirtualMachinesVirtualMachineIDOK creates a GetVcsVirtualMachinesVirtualMachineIDOK with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDOK() *GetVcsVirtualMachinesVirtualMachineIDOK {
	return &GetVcsVirtualMachinesVirtualMachineIDOK{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDOK describes a response with status code 200, with default header values.

OK
*/
type GetVcsVirtualMachinesVirtualMachineIDOK struct {
	Payload *models.GetVirtualMachineResponse
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id o k response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id o k response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id o k response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id o k response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id o k response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vcs virtual machines virtual machine Id o k response
func (o *GetVcsVirtualMachinesVirtualMachineIDOK) Code() int {
	return 200
}

func (o *GetVcsVirtualMachinesVirtualMachineIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDOK) GetPayload() *models.GetVirtualMachineResponse {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetVirtualMachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDBadRequest creates a GetVcsVirtualMachinesVirtualMachineIDBadRequest with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDBadRequest() *GetVcsVirtualMachinesVirtualMachineIDBadRequest {
	return &GetVcsVirtualMachinesVirtualMachineIDBadRequest{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVcsVirtualMachinesVirtualMachineIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id bad request response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id bad request response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id bad request response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id bad request response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id bad request response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vcs virtual machines virtual machine Id bad request response
func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) Code() int {
	return 400
}

func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDUnauthorized creates a GetVcsVirtualMachinesVirtualMachineIDUnauthorized with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDUnauthorized() *GetVcsVirtualMachinesVirtualMachineIDUnauthorized {
	return &GetVcsVirtualMachinesVirtualMachineIDUnauthorized{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetVcsVirtualMachinesVirtualMachineIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id unauthorized response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id unauthorized response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id unauthorized response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id unauthorized response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id unauthorized response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get vcs virtual machines virtual machine Id unauthorized response
func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) Code() int {
	return 401
}

func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDForbidden creates a GetVcsVirtualMachinesVirtualMachineIDForbidden with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDForbidden() *GetVcsVirtualMachinesVirtualMachineIDForbidden {
	return &GetVcsVirtualMachinesVirtualMachineIDForbidden{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVcsVirtualMachinesVirtualMachineIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id forbidden response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id forbidden response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id forbidden response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id forbidden response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id forbidden response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get vcs virtual machines virtual machine Id forbidden response
func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) Code() int {
	return 403
}

func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsVirtualMachinesVirtualMachineIDNotFound creates a GetVcsVirtualMachinesVirtualMachineIDNotFound with default headers values
func NewGetVcsVirtualMachinesVirtualMachineIDNotFound() *GetVcsVirtualMachinesVirtualMachineIDNotFound {
	return &GetVcsVirtualMachinesVirtualMachineIDNotFound{}
}

/*
GetVcsVirtualMachinesVirtualMachineIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVcsVirtualMachinesVirtualMachineIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get vcs virtual machines virtual machine Id not found response has a 2xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs virtual machines virtual machine Id not found response has a 3xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs virtual machines virtual machine Id not found response has a 4xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs virtual machines virtual machine Id not found response has a 5xx status code
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs virtual machines virtual machine Id not found response a status code equal to that given
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vcs virtual machines virtual machine Id not found response
func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) Code() int {
	return 404
}

func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /vcs/virtual-machines/{virtualMachineId}][%d] getVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetVcsVirtualMachinesVirtualMachineIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
