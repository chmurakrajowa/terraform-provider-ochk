// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteVcsVirtualMachinesVirtualMachineIDReader is a Reader for the DeleteVcsVirtualMachinesVirtualMachineID structure.
type DeleteVcsVirtualMachinesVirtualMachineIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVcsVirtualMachinesVirtualMachineIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVcsVirtualMachinesVirtualMachineIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /vcs/virtual-machines/{virtualMachineId}] DeleteVcsVirtualMachinesVirtualMachineID", response, response.Code())
	}
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDOK creates a DeleteVcsVirtualMachinesVirtualMachineIDOK with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDOK() *DeleteVcsVirtualMachinesVirtualMachineIDOK {
	return &DeleteVcsVirtualMachinesVirtualMachineIDOK{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteVcsVirtualMachinesVirtualMachineIDOK struct {
	Payload *models.DeleteVirtualMachineResponse
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id o k response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id o k response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id o k response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id o k response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id o k response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id o k response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) Code() int {
	return 200
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) GetPayload() *models.DeleteVirtualMachineResponse {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteVirtualMachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDBadRequest creates a DeleteVcsVirtualMachinesVirtualMachineIDBadRequest with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDBadRequest() *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest {
	return &DeleteVcsVirtualMachinesVirtualMachineIDBadRequest{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteVcsVirtualMachinesVirtualMachineIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id bad request response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id bad request response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id bad request response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id bad request response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id bad request response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id bad request response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) Code() int {
	return 400
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDUnauthorized creates a DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDUnauthorized() *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized {
	return &DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id unauthorized response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id unauthorized response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id unauthorized response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id unauthorized response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id unauthorized response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id unauthorized response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDForbidden creates a DeleteVcsVirtualMachinesVirtualMachineIDForbidden with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDForbidden() *DeleteVcsVirtualMachinesVirtualMachineIDForbidden {
	return &DeleteVcsVirtualMachinesVirtualMachineIDForbidden{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteVcsVirtualMachinesVirtualMachineIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id forbidden response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id forbidden response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id forbidden response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id forbidden response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id forbidden response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id forbidden response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) Code() int {
	return 403
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVcsVirtualMachinesVirtualMachineIDNotFound creates a DeleteVcsVirtualMachinesVirtualMachineIDNotFound with default headers values
func NewDeleteVcsVirtualMachinesVirtualMachineIDNotFound() *DeleteVcsVirtualMachinesVirtualMachineIDNotFound {
	return &DeleteVcsVirtualMachinesVirtualMachineIDNotFound{}
}

/*
DeleteVcsVirtualMachinesVirtualMachineIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteVcsVirtualMachinesVirtualMachineIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete vcs virtual machines virtual machine Id not found response has a 2xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vcs virtual machines virtual machine Id not found response has a 3xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vcs virtual machines virtual machine Id not found response has a 4xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vcs virtual machines virtual machine Id not found response has a 5xx status code
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vcs virtual machines virtual machine Id not found response a status code equal to that given
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete vcs virtual machines virtual machine Id not found response
func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) Code() int {
	return 404
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /vcs/virtual-machines/{virtualMachineId}][%d] deleteVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteVcsVirtualMachinesVirtualMachineIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
