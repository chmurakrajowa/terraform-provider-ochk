// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutVcsVirtualMachinesVirtualMachineIDReader is a Reader for the PutVcsVirtualMachinesVirtualMachineID structure.
type PutVcsVirtualMachinesVirtualMachineIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutVcsVirtualMachinesVirtualMachineIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutVcsVirtualMachinesVirtualMachineIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutVcsVirtualMachinesVirtualMachineIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutVcsVirtualMachinesVirtualMachineIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutVcsVirtualMachinesVirtualMachineIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutVcsVirtualMachinesVirtualMachineIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /vcs/virtual-machines/{virtualMachineId}] PutVcsVirtualMachinesVirtualMachineID", response, response.Code())
	}
}

// NewPutVcsVirtualMachinesVirtualMachineIDOK creates a PutVcsVirtualMachinesVirtualMachineIDOK with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDOK() *PutVcsVirtualMachinesVirtualMachineIDOK {
	return &PutVcsVirtualMachinesVirtualMachineIDOK{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDOK describes a response with status code 200, with default header values.

OK
*/
type PutVcsVirtualMachinesVirtualMachineIDOK struct {
	Payload *models.UpdateVirtualMachineResponse
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id o k response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id o k response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id o k response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id o k response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id o k response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put vcs virtual machines virtual machine Id o k response
func (o *PutVcsVirtualMachinesVirtualMachineIDOK) Code() int {
	return 200
}

func (o *PutVcsVirtualMachinesVirtualMachineIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdOK %s", 200, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDOK) GetPayload() *models.UpdateVirtualMachineResponse {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateVirtualMachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDBadRequest creates a PutVcsVirtualMachinesVirtualMachineIDBadRequest with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDBadRequest() *PutVcsVirtualMachinesVirtualMachineIDBadRequest {
	return &PutVcsVirtualMachinesVirtualMachineIDBadRequest{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutVcsVirtualMachinesVirtualMachineIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id bad request response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id bad request response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id bad request response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id bad request response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id bad request response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put vcs virtual machines virtual machine Id bad request response
func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) Code() int {
	return 400
}

func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdBadRequest %s", 400, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDUnauthorized creates a PutVcsVirtualMachinesVirtualMachineIDUnauthorized with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDUnauthorized() *PutVcsVirtualMachinesVirtualMachineIDUnauthorized {
	return &PutVcsVirtualMachinesVirtualMachineIDUnauthorized{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutVcsVirtualMachinesVirtualMachineIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id unauthorized response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id unauthorized response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id unauthorized response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id unauthorized response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id unauthorized response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put vcs virtual machines virtual machine Id unauthorized response
func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) Code() int {
	return 401
}

func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdUnauthorized %s", 401, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDForbidden creates a PutVcsVirtualMachinesVirtualMachineIDForbidden with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDForbidden() *PutVcsVirtualMachinesVirtualMachineIDForbidden {
	return &PutVcsVirtualMachinesVirtualMachineIDForbidden{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutVcsVirtualMachinesVirtualMachineIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id forbidden response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id forbidden response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id forbidden response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id forbidden response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id forbidden response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put vcs virtual machines virtual machine Id forbidden response
func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) Code() int {
	return 403
}

func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdForbidden %s", 403, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVcsVirtualMachinesVirtualMachineIDNotFound creates a PutVcsVirtualMachinesVirtualMachineIDNotFound with default headers values
func NewPutVcsVirtualMachinesVirtualMachineIDNotFound() *PutVcsVirtualMachinesVirtualMachineIDNotFound {
	return &PutVcsVirtualMachinesVirtualMachineIDNotFound{}
}

/*
PutVcsVirtualMachinesVirtualMachineIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutVcsVirtualMachinesVirtualMachineIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put vcs virtual machines virtual machine Id not found response has a 2xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put vcs virtual machines virtual machine Id not found response has a 3xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put vcs virtual machines virtual machine Id not found response has a 4xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put vcs virtual machines virtual machine Id not found response has a 5xx status code
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put vcs virtual machines virtual machine Id not found response a status code equal to that given
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put vcs virtual machines virtual machine Id not found response
func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) Code() int {
	return 404
}

func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /vcs/virtual-machines/{virtualMachineId}][%d] putVcsVirtualMachinesVirtualMachineIdNotFound %s", 404, payload)
}

func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutVcsVirtualMachinesVirtualMachineIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
