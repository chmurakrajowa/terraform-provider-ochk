// Code generated by go-swagger; DO NOT EDIT.

package billing_period

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetBillingAccountsBillingPeriodsBillingPeriodIDReader is a Reader for the GetBillingAccountsBillingPeriodsBillingPeriodID structure.
type GetBillingAccountsBillingPeriodsBillingPeriodIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillingAccountsBillingPeriodsBillingPeriodIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillingAccountsBillingPeriodsBillingPeriodIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /billing/accounts/billing-periods/{billingPeriodId}] GetBillingAccountsBillingPeriodsBillingPeriodID", response, response.Code())
	}
}

// NewGetBillingAccountsBillingPeriodsBillingPeriodIDOK creates a GetBillingAccountsBillingPeriodsBillingPeriodIDOK with default headers values
func NewGetBillingAccountsBillingPeriodsBillingPeriodIDOK() *GetBillingAccountsBillingPeriodsBillingPeriodIDOK {
	return &GetBillingAccountsBillingPeriodsBillingPeriodIDOK{}
}

/*
GetBillingAccountsBillingPeriodsBillingPeriodIDOK describes a response with status code 200, with default header values.

OK
*/
type GetBillingAccountsBillingPeriodsBillingPeriodIDOK struct {
	Payload *models.GetBillingPeriodResponse
}

// IsSuccess returns true when this get billing accounts billing periods billing period Id o k response has a 2xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get billing accounts billing periods billing period Id o k response has a 3xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts billing periods billing period Id o k response has a 4xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing accounts billing periods billing period Id o k response has a 5xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts billing periods billing period Id o k response a status code equal to that given
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get billing accounts billing periods billing period Id o k response
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) Code() int {
	return 200
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdOK %s", 200, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdOK %s", 200, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) GetPayload() *models.GetBillingPeriodResponse {
	return o.Payload
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetBillingPeriodResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest creates a GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest with default headers values
func NewGetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest() *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest {
	return &GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest{}
}

/*
GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts billing periods billing period Id bad request response has a 2xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts billing periods billing period Id bad request response has a 3xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts billing periods billing period Id bad request response has a 4xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts billing periods billing period Id bad request response has a 5xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts billing periods billing period Id bad request response a status code equal to that given
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get billing accounts billing periods billing period Id bad request response
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) Code() int {
	return 400
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized creates a GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized with default headers values
func NewGetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized() *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized {
	return &GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized{}
}

/*
GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts billing periods billing period Id unauthorized response has a 2xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts billing periods billing period Id unauthorized response has a 3xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts billing periods billing period Id unauthorized response has a 4xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts billing periods billing period Id unauthorized response has a 5xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts billing periods billing period Id unauthorized response a status code equal to that given
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get billing accounts billing periods billing period Id unauthorized response
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) Code() int {
	return 401
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsBillingPeriodsBillingPeriodIDForbidden creates a GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden with default headers values
func NewGetBillingAccountsBillingPeriodsBillingPeriodIDForbidden() *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden {
	return &GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden{}
}

/*
GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts billing periods billing period Id forbidden response has a 2xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts billing periods billing period Id forbidden response has a 3xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts billing periods billing period Id forbidden response has a 4xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts billing periods billing period Id forbidden response has a 5xx status code
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts billing periods billing period Id forbidden response a status code equal to that given
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get billing accounts billing periods billing period Id forbidden response
func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) Code() int {
	return 403
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdForbidden %s", 403, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/billing-periods/{billingPeriodId}][%d] getBillingAccountsBillingPeriodsBillingPeriodIdForbidden %s", 403, payload)
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsBillingPeriodsBillingPeriodIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
