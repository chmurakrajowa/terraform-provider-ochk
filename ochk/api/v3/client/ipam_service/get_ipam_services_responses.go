// Code generated by go-swagger; DO NOT EDIT.

package ipam_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIpamServicesReader is a Reader for the GetIpamServices structure.
type GetIpamServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpamServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpamServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIpamServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIpamServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIpamServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipam/services] GetIpamServices", response, response.Code())
	}
}

// NewGetIpamServicesOK creates a GetIpamServicesOK with default headers values
func NewGetIpamServicesOK() *GetIpamServicesOK {
	return &GetIpamServicesOK{}
}

/*
GetIpamServicesOK describes a response with status code 200, with default header values.

OK
*/
type GetIpamServicesOK struct {
	Payload *models.ListIPAMServicesResponse
}

// IsSuccess returns true when this get ipam services o k response has a 2xx status code
func (o *GetIpamServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ipam services o k response has a 3xx status code
func (o *GetIpamServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services o k response has a 4xx status code
func (o *GetIpamServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ipam services o k response has a 5xx status code
func (o *GetIpamServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services o k response a status code equal to that given
func (o *GetIpamServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ipam services o k response
func (o *GetIpamServicesOK) Code() int {
	return 200
}

func (o *GetIpamServicesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesOK %s", 200, payload)
}

func (o *GetIpamServicesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesOK %s", 200, payload)
}

func (o *GetIpamServicesOK) GetPayload() *models.ListIPAMServicesResponse {
	return o.Payload
}

func (o *GetIpamServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListIPAMServicesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesBadRequest creates a GetIpamServicesBadRequest with default headers values
func NewGetIpamServicesBadRequest() *GetIpamServicesBadRequest {
	return &GetIpamServicesBadRequest{}
}

/*
GetIpamServicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIpamServicesBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services bad request response has a 2xx status code
func (o *GetIpamServicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services bad request response has a 3xx status code
func (o *GetIpamServicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services bad request response has a 4xx status code
func (o *GetIpamServicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services bad request response has a 5xx status code
func (o *GetIpamServicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services bad request response a status code equal to that given
func (o *GetIpamServicesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ipam services bad request response
func (o *GetIpamServicesBadRequest) Code() int {
	return 400
}

func (o *GetIpamServicesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesBadRequest %s", 400, payload)
}

func (o *GetIpamServicesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesBadRequest %s", 400, payload)
}

func (o *GetIpamServicesBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesUnauthorized creates a GetIpamServicesUnauthorized with default headers values
func NewGetIpamServicesUnauthorized() *GetIpamServicesUnauthorized {
	return &GetIpamServicesUnauthorized{}
}

/*
GetIpamServicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIpamServicesUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services unauthorized response has a 2xx status code
func (o *GetIpamServicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services unauthorized response has a 3xx status code
func (o *GetIpamServicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services unauthorized response has a 4xx status code
func (o *GetIpamServicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services unauthorized response has a 5xx status code
func (o *GetIpamServicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services unauthorized response a status code equal to that given
func (o *GetIpamServicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ipam services unauthorized response
func (o *GetIpamServicesUnauthorized) Code() int {
	return 401
}

func (o *GetIpamServicesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesUnauthorized %s", 401, payload)
}

func (o *GetIpamServicesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesUnauthorized %s", 401, payload)
}

func (o *GetIpamServicesUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesForbidden creates a GetIpamServicesForbidden with default headers values
func NewGetIpamServicesForbidden() *GetIpamServicesForbidden {
	return &GetIpamServicesForbidden{}
}

/*
GetIpamServicesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIpamServicesForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services forbidden response has a 2xx status code
func (o *GetIpamServicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services forbidden response has a 3xx status code
func (o *GetIpamServicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services forbidden response has a 4xx status code
func (o *GetIpamServicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services forbidden response has a 5xx status code
func (o *GetIpamServicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services forbidden response a status code equal to that given
func (o *GetIpamServicesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ipam services forbidden response
func (o *GetIpamServicesForbidden) Code() int {
	return 403
}

func (o *GetIpamServicesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesForbidden %s", 403, payload)
}

func (o *GetIpamServicesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services][%d] getIpamServicesForbidden %s", 403, payload)
}

func (o *GetIpamServicesForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
