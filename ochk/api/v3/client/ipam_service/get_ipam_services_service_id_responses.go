// Code generated by go-swagger; DO NOT EDIT.

package ipam_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIpamServicesServiceIDReader is a Reader for the GetIpamServicesServiceID structure.
type GetIpamServicesServiceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpamServicesServiceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpamServicesServiceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIpamServicesServiceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIpamServicesServiceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIpamServicesServiceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipam/services/{serviceId}] GetIpamServicesServiceID", response, response.Code())
	}
}

// NewGetIpamServicesServiceIDOK creates a GetIpamServicesServiceIDOK with default headers values
func NewGetIpamServicesServiceIDOK() *GetIpamServicesServiceIDOK {
	return &GetIpamServicesServiceIDOK{}
}

/*
GetIpamServicesServiceIDOK describes a response with status code 200, with default header values.

OK
*/
type GetIpamServicesServiceIDOK struct {
	Payload *models.GetIPAMServiceResponse
}

// IsSuccess returns true when this get ipam services service Id o k response has a 2xx status code
func (o *GetIpamServicesServiceIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ipam services service Id o k response has a 3xx status code
func (o *GetIpamServicesServiceIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services service Id o k response has a 4xx status code
func (o *GetIpamServicesServiceIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ipam services service Id o k response has a 5xx status code
func (o *GetIpamServicesServiceIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services service Id o k response a status code equal to that given
func (o *GetIpamServicesServiceIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ipam services service Id o k response
func (o *GetIpamServicesServiceIDOK) Code() int {
	return 200
}

func (o *GetIpamServicesServiceIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdOK %s", 200, payload)
}

func (o *GetIpamServicesServiceIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdOK %s", 200, payload)
}

func (o *GetIpamServicesServiceIDOK) GetPayload() *models.GetIPAMServiceResponse {
	return o.Payload
}

func (o *GetIpamServicesServiceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetIPAMServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesServiceIDBadRequest creates a GetIpamServicesServiceIDBadRequest with default headers values
func NewGetIpamServicesServiceIDBadRequest() *GetIpamServicesServiceIDBadRequest {
	return &GetIpamServicesServiceIDBadRequest{}
}

/*
GetIpamServicesServiceIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIpamServicesServiceIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services service Id bad request response has a 2xx status code
func (o *GetIpamServicesServiceIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services service Id bad request response has a 3xx status code
func (o *GetIpamServicesServiceIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services service Id bad request response has a 4xx status code
func (o *GetIpamServicesServiceIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services service Id bad request response has a 5xx status code
func (o *GetIpamServicesServiceIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services service Id bad request response a status code equal to that given
func (o *GetIpamServicesServiceIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ipam services service Id bad request response
func (o *GetIpamServicesServiceIDBadRequest) Code() int {
	return 400
}

func (o *GetIpamServicesServiceIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdBadRequest %s", 400, payload)
}

func (o *GetIpamServicesServiceIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdBadRequest %s", 400, payload)
}

func (o *GetIpamServicesServiceIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesServiceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesServiceIDUnauthorized creates a GetIpamServicesServiceIDUnauthorized with default headers values
func NewGetIpamServicesServiceIDUnauthorized() *GetIpamServicesServiceIDUnauthorized {
	return &GetIpamServicesServiceIDUnauthorized{}
}

/*
GetIpamServicesServiceIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIpamServicesServiceIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services service Id unauthorized response has a 2xx status code
func (o *GetIpamServicesServiceIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services service Id unauthorized response has a 3xx status code
func (o *GetIpamServicesServiceIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services service Id unauthorized response has a 4xx status code
func (o *GetIpamServicesServiceIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services service Id unauthorized response has a 5xx status code
func (o *GetIpamServicesServiceIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services service Id unauthorized response a status code equal to that given
func (o *GetIpamServicesServiceIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ipam services service Id unauthorized response
func (o *GetIpamServicesServiceIDUnauthorized) Code() int {
	return 401
}

func (o *GetIpamServicesServiceIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdUnauthorized %s", 401, payload)
}

func (o *GetIpamServicesServiceIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdUnauthorized %s", 401, payload)
}

func (o *GetIpamServicesServiceIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesServiceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamServicesServiceIDForbidden creates a GetIpamServicesServiceIDForbidden with default headers values
func NewGetIpamServicesServiceIDForbidden() *GetIpamServicesServiceIDForbidden {
	return &GetIpamServicesServiceIDForbidden{}
}

/*
GetIpamServicesServiceIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIpamServicesServiceIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam services service Id forbidden response has a 2xx status code
func (o *GetIpamServicesServiceIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam services service Id forbidden response has a 3xx status code
func (o *GetIpamServicesServiceIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam services service Id forbidden response has a 4xx status code
func (o *GetIpamServicesServiceIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam services service Id forbidden response has a 5xx status code
func (o *GetIpamServicesServiceIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam services service Id forbidden response a status code equal to that given
func (o *GetIpamServicesServiceIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ipam services service Id forbidden response
func (o *GetIpamServicesServiceIDForbidden) Code() int {
	return 403
}

func (o *GetIpamServicesServiceIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdForbidden %s", 403, payload)
}

func (o *GetIpamServicesServiceIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] getIpamServicesServiceIdForbidden %s", 403, payload)
}

func (o *GetIpamServicesServiceIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamServicesServiceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
