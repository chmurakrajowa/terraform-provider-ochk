// Code generated by go-swagger; DO NOT EDIT.

package billing_alarm_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutBillingAlarmDefinitionReader is a Reader for the PutBillingAlarmDefinition structure.
type PutBillingAlarmDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutBillingAlarmDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutBillingAlarmDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutBillingAlarmDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutBillingAlarmDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutBillingAlarmDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /billing/alarm-definition] PutBillingAlarmDefinition", response, response.Code())
	}
}

// NewPutBillingAlarmDefinitionOK creates a PutBillingAlarmDefinitionOK with default headers values
func NewPutBillingAlarmDefinitionOK() *PutBillingAlarmDefinitionOK {
	return &PutBillingAlarmDefinitionOK{}
}

/*
PutBillingAlarmDefinitionOK describes a response with status code 200, with default header values.

OK
*/
type PutBillingAlarmDefinitionOK struct {
	Payload *models.CreateBillingAlarmDefinitionResponse
}

// IsSuccess returns true when this put billing alarm definition o k response has a 2xx status code
func (o *PutBillingAlarmDefinitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put billing alarm definition o k response has a 3xx status code
func (o *PutBillingAlarmDefinitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put billing alarm definition o k response has a 4xx status code
func (o *PutBillingAlarmDefinitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put billing alarm definition o k response has a 5xx status code
func (o *PutBillingAlarmDefinitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put billing alarm definition o k response a status code equal to that given
func (o *PutBillingAlarmDefinitionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put billing alarm definition o k response
func (o *PutBillingAlarmDefinitionOK) Code() int {
	return 200
}

func (o *PutBillingAlarmDefinitionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionOK %s", 200, payload)
}

func (o *PutBillingAlarmDefinitionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionOK %s", 200, payload)
}

func (o *PutBillingAlarmDefinitionOK) GetPayload() *models.CreateBillingAlarmDefinitionResponse {
	return o.Payload
}

func (o *PutBillingAlarmDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateBillingAlarmDefinitionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBillingAlarmDefinitionBadRequest creates a PutBillingAlarmDefinitionBadRequest with default headers values
func NewPutBillingAlarmDefinitionBadRequest() *PutBillingAlarmDefinitionBadRequest {
	return &PutBillingAlarmDefinitionBadRequest{}
}

/*
PutBillingAlarmDefinitionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutBillingAlarmDefinitionBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put billing alarm definition bad request response has a 2xx status code
func (o *PutBillingAlarmDefinitionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put billing alarm definition bad request response has a 3xx status code
func (o *PutBillingAlarmDefinitionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put billing alarm definition bad request response has a 4xx status code
func (o *PutBillingAlarmDefinitionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put billing alarm definition bad request response has a 5xx status code
func (o *PutBillingAlarmDefinitionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put billing alarm definition bad request response a status code equal to that given
func (o *PutBillingAlarmDefinitionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put billing alarm definition bad request response
func (o *PutBillingAlarmDefinitionBadRequest) Code() int {
	return 400
}

func (o *PutBillingAlarmDefinitionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionBadRequest %s", 400, payload)
}

func (o *PutBillingAlarmDefinitionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionBadRequest %s", 400, payload)
}

func (o *PutBillingAlarmDefinitionBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutBillingAlarmDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBillingAlarmDefinitionUnauthorized creates a PutBillingAlarmDefinitionUnauthorized with default headers values
func NewPutBillingAlarmDefinitionUnauthorized() *PutBillingAlarmDefinitionUnauthorized {
	return &PutBillingAlarmDefinitionUnauthorized{}
}

/*
PutBillingAlarmDefinitionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutBillingAlarmDefinitionUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put billing alarm definition unauthorized response has a 2xx status code
func (o *PutBillingAlarmDefinitionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put billing alarm definition unauthorized response has a 3xx status code
func (o *PutBillingAlarmDefinitionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put billing alarm definition unauthorized response has a 4xx status code
func (o *PutBillingAlarmDefinitionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put billing alarm definition unauthorized response has a 5xx status code
func (o *PutBillingAlarmDefinitionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put billing alarm definition unauthorized response a status code equal to that given
func (o *PutBillingAlarmDefinitionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put billing alarm definition unauthorized response
func (o *PutBillingAlarmDefinitionUnauthorized) Code() int {
	return 401
}

func (o *PutBillingAlarmDefinitionUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionUnauthorized %s", 401, payload)
}

func (o *PutBillingAlarmDefinitionUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionUnauthorized %s", 401, payload)
}

func (o *PutBillingAlarmDefinitionUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutBillingAlarmDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBillingAlarmDefinitionForbidden creates a PutBillingAlarmDefinitionForbidden with default headers values
func NewPutBillingAlarmDefinitionForbidden() *PutBillingAlarmDefinitionForbidden {
	return &PutBillingAlarmDefinitionForbidden{}
}

/*
PutBillingAlarmDefinitionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutBillingAlarmDefinitionForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put billing alarm definition forbidden response has a 2xx status code
func (o *PutBillingAlarmDefinitionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put billing alarm definition forbidden response has a 3xx status code
func (o *PutBillingAlarmDefinitionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put billing alarm definition forbidden response has a 4xx status code
func (o *PutBillingAlarmDefinitionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put billing alarm definition forbidden response has a 5xx status code
func (o *PutBillingAlarmDefinitionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put billing alarm definition forbidden response a status code equal to that given
func (o *PutBillingAlarmDefinitionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put billing alarm definition forbidden response
func (o *PutBillingAlarmDefinitionForbidden) Code() int {
	return 403
}

func (o *PutBillingAlarmDefinitionForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionForbidden %s", 403, payload)
}

func (o *PutBillingAlarmDefinitionForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /billing/alarm-definition][%d] putBillingAlarmDefinitionForbidden %s", 403, payload)
}

func (o *PutBillingAlarmDefinitionForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutBillingAlarmDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
