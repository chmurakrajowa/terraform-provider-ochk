// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworksVirtualNetworkIDReader is a Reader for the PutNetworksVirtualNetworkID structure.
type PutNetworksVirtualNetworkIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworksVirtualNetworkIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworksVirtualNetworkIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworksVirtualNetworkIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworksVirtualNetworkIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworksVirtualNetworkIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /networks/{virtualNetworkId}] PutNetworksVirtualNetworkID", response, response.Code())
	}
}

// NewPutNetworksVirtualNetworkIDOK creates a PutNetworksVirtualNetworkIDOK with default headers values
func NewPutNetworksVirtualNetworkIDOK() *PutNetworksVirtualNetworkIDOK {
	return &PutNetworksVirtualNetworkIDOK{}
}

/*
PutNetworksVirtualNetworkIDOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworksVirtualNetworkIDOK struct {
	Payload *models.UpdateVirtualNetworkResponse
}

// IsSuccess returns true when this put networks virtual network Id o k response has a 2xx status code
func (o *PutNetworksVirtualNetworkIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put networks virtual network Id o k response has a 3xx status code
func (o *PutNetworksVirtualNetworkIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put networks virtual network Id o k response has a 4xx status code
func (o *PutNetworksVirtualNetworkIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put networks virtual network Id o k response has a 5xx status code
func (o *PutNetworksVirtualNetworkIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put networks virtual network Id o k response a status code equal to that given
func (o *PutNetworksVirtualNetworkIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put networks virtual network Id o k response
func (o *PutNetworksVirtualNetworkIDOK) Code() int {
	return 200
}

func (o *PutNetworksVirtualNetworkIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdOK %s", 200, payload)
}

func (o *PutNetworksVirtualNetworkIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdOK %s", 200, payload)
}

func (o *PutNetworksVirtualNetworkIDOK) GetPayload() *models.UpdateVirtualNetworkResponse {
	return o.Payload
}

func (o *PutNetworksVirtualNetworkIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateVirtualNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworksVirtualNetworkIDBadRequest creates a PutNetworksVirtualNetworkIDBadRequest with default headers values
func NewPutNetworksVirtualNetworkIDBadRequest() *PutNetworksVirtualNetworkIDBadRequest {
	return &PutNetworksVirtualNetworkIDBadRequest{}
}

/*
PutNetworksVirtualNetworkIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworksVirtualNetworkIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put networks virtual network Id bad request response has a 2xx status code
func (o *PutNetworksVirtualNetworkIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put networks virtual network Id bad request response has a 3xx status code
func (o *PutNetworksVirtualNetworkIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put networks virtual network Id bad request response has a 4xx status code
func (o *PutNetworksVirtualNetworkIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put networks virtual network Id bad request response has a 5xx status code
func (o *PutNetworksVirtualNetworkIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put networks virtual network Id bad request response a status code equal to that given
func (o *PutNetworksVirtualNetworkIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put networks virtual network Id bad request response
func (o *PutNetworksVirtualNetworkIDBadRequest) Code() int {
	return 400
}

func (o *PutNetworksVirtualNetworkIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdBadRequest %s", 400, payload)
}

func (o *PutNetworksVirtualNetworkIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdBadRequest %s", 400, payload)
}

func (o *PutNetworksVirtualNetworkIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworksVirtualNetworkIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworksVirtualNetworkIDUnauthorized creates a PutNetworksVirtualNetworkIDUnauthorized with default headers values
func NewPutNetworksVirtualNetworkIDUnauthorized() *PutNetworksVirtualNetworkIDUnauthorized {
	return &PutNetworksVirtualNetworkIDUnauthorized{}
}

/*
PutNetworksVirtualNetworkIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworksVirtualNetworkIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put networks virtual network Id unauthorized response has a 2xx status code
func (o *PutNetworksVirtualNetworkIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put networks virtual network Id unauthorized response has a 3xx status code
func (o *PutNetworksVirtualNetworkIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put networks virtual network Id unauthorized response has a 4xx status code
func (o *PutNetworksVirtualNetworkIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put networks virtual network Id unauthorized response has a 5xx status code
func (o *PutNetworksVirtualNetworkIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put networks virtual network Id unauthorized response a status code equal to that given
func (o *PutNetworksVirtualNetworkIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put networks virtual network Id unauthorized response
func (o *PutNetworksVirtualNetworkIDUnauthorized) Code() int {
	return 401
}

func (o *PutNetworksVirtualNetworkIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdUnauthorized %s", 401, payload)
}

func (o *PutNetworksVirtualNetworkIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdUnauthorized %s", 401, payload)
}

func (o *PutNetworksVirtualNetworkIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworksVirtualNetworkIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworksVirtualNetworkIDForbidden creates a PutNetworksVirtualNetworkIDForbidden with default headers values
func NewPutNetworksVirtualNetworkIDForbidden() *PutNetworksVirtualNetworkIDForbidden {
	return &PutNetworksVirtualNetworkIDForbidden{}
}

/*
PutNetworksVirtualNetworkIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworksVirtualNetworkIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put networks virtual network Id forbidden response has a 2xx status code
func (o *PutNetworksVirtualNetworkIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put networks virtual network Id forbidden response has a 3xx status code
func (o *PutNetworksVirtualNetworkIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put networks virtual network Id forbidden response has a 4xx status code
func (o *PutNetworksVirtualNetworkIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put networks virtual network Id forbidden response has a 5xx status code
func (o *PutNetworksVirtualNetworkIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put networks virtual network Id forbidden response a status code equal to that given
func (o *PutNetworksVirtualNetworkIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put networks virtual network Id forbidden response
func (o *PutNetworksVirtualNetworkIDForbidden) Code() int {
	return 403
}

func (o *PutNetworksVirtualNetworkIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdForbidden %s", 403, payload)
}

func (o *PutNetworksVirtualNetworkIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] putNetworksVirtualNetworkIdForbidden %s", 403, payload)
}

func (o *PutNetworksVirtualNetworkIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworksVirtualNetworkIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
