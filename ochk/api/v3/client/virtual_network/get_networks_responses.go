// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetNetworksReader is a Reader for the GetNetworks structure.
type GetNetworksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNetworksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks] GetNetworks", response, response.Code())
	}
}

// NewGetNetworksOK creates a GetNetworksOK with default headers values
func NewGetNetworksOK() *GetNetworksOK {
	return &GetNetworksOK{}
}

/*
GetNetworksOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworksOK struct {
	Payload *models.ListVirtualNetworksResponse
}

// IsSuccess returns true when this get networks o k response has a 2xx status code
func (o *GetNetworksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get networks o k response has a 3xx status code
func (o *GetNetworksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get networks o k response has a 4xx status code
func (o *GetNetworksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get networks o k response has a 5xx status code
func (o *GetNetworksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get networks o k response a status code equal to that given
func (o *GetNetworksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get networks o k response
func (o *GetNetworksOK) Code() int {
	return 200
}

func (o *GetNetworksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksOK %s", 200, payload)
}

func (o *GetNetworksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksOK %s", 200, payload)
}

func (o *GetNetworksOK) GetPayload() *models.ListVirtualNetworksResponse {
	return o.Payload
}

func (o *GetNetworksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListVirtualNetworksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksBadRequest creates a GetNetworksBadRequest with default headers values
func NewGetNetworksBadRequest() *GetNetworksBadRequest {
	return &GetNetworksBadRequest{}
}

/*
GetNetworksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworksBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get networks bad request response has a 2xx status code
func (o *GetNetworksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get networks bad request response has a 3xx status code
func (o *GetNetworksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get networks bad request response has a 4xx status code
func (o *GetNetworksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get networks bad request response has a 5xx status code
func (o *GetNetworksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get networks bad request response a status code equal to that given
func (o *GetNetworksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get networks bad request response
func (o *GetNetworksBadRequest) Code() int {
	return 400
}

func (o *GetNetworksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksBadRequest %s", 400, payload)
}

func (o *GetNetworksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksBadRequest %s", 400, payload)
}

func (o *GetNetworksBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksUnauthorized creates a GetNetworksUnauthorized with default headers values
func NewGetNetworksUnauthorized() *GetNetworksUnauthorized {
	return &GetNetworksUnauthorized{}
}

/*
GetNetworksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNetworksUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get networks unauthorized response has a 2xx status code
func (o *GetNetworksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get networks unauthorized response has a 3xx status code
func (o *GetNetworksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get networks unauthorized response has a 4xx status code
func (o *GetNetworksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get networks unauthorized response has a 5xx status code
func (o *GetNetworksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get networks unauthorized response a status code equal to that given
func (o *GetNetworksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get networks unauthorized response
func (o *GetNetworksUnauthorized) Code() int {
	return 401
}

func (o *GetNetworksUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksUnauthorized %s", 401, payload)
}

func (o *GetNetworksUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksUnauthorized %s", 401, payload)
}

func (o *GetNetworksUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksForbidden creates a GetNetworksForbidden with default headers values
func NewGetNetworksForbidden() *GetNetworksForbidden {
	return &GetNetworksForbidden{}
}

/*
GetNetworksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworksForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get networks forbidden response has a 2xx status code
func (o *GetNetworksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get networks forbidden response has a 3xx status code
func (o *GetNetworksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get networks forbidden response has a 4xx status code
func (o *GetNetworksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get networks forbidden response has a 5xx status code
func (o *GetNetworksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get networks forbidden response a status code equal to that given
func (o *GetNetworksForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get networks forbidden response
func (o *GetNetworksForbidden) Code() int {
	return 403
}

func (o *GetNetworksForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksForbidden %s", 403, payload)
}

func (o *GetNetworksForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks][%d] getNetworksForbidden %s", 403, payload)
}

func (o *GetNetworksForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
