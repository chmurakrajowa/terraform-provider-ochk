// Code generated by go-swagger; DO NOT EDIT.

package dfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworkRoutersRouterIDRulesEWRuleIDReader is a Reader for the PutNetworkRoutersRouterIDRulesEWRuleID structure.
type PutNetworkRoutersRouterIDRulesEWRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworkRoutersRouterIDRulesEWRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworkRoutersRouterIDRulesEWRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworkRoutersRouterIDRulesEWRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}] PutNetworkRoutersRouterIDRulesEWRuleID", response, response.Code())
	}
}

// NewPutNetworkRoutersRouterIDRulesEWRuleIDOK creates a PutNetworkRoutersRouterIDRulesEWRuleIDOK with default headers values
func NewPutNetworkRoutersRouterIDRulesEWRuleIDOK() *PutNetworkRoutersRouterIDRulesEWRuleIDOK {
	return &PutNetworkRoutersRouterIDRulesEWRuleIDOK{}
}

/*
PutNetworkRoutersRouterIDRulesEWRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworkRoutersRouterIDRulesEWRuleIDOK struct {
	Payload *models.UpdateDfwRuleResponse
}

// IsSuccess returns true when this put network routers router Id rules e w rule Id o k response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put network routers router Id rules e w rule Id o k response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules e w rule Id o k response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put network routers router Id rules e w rule Id o k response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules e w rule Id o k response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put network routers router Id rules e w rule Id o k response
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) Code() int {
	return 200
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) GetPayload() *models.UpdateDfwRuleResponse {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateDfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesEWRuleIDBadRequest creates a PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest with default headers values
func NewPutNetworkRoutersRouterIDRulesEWRuleIDBadRequest() *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest {
	return &PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest{}
}

/*
PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules e w rule Id bad request response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules e w rule Id bad request response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules e w rule Id bad request response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules e w rule Id bad request response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules e w rule Id bad request response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put network routers router Id rules e w rule Id bad request response
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Code() int {
	return 400
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized creates a PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized with default headers values
func NewPutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized() *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized {
	return &PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized{}
}

/*
PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules e w rule Id unauthorized response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules e w rule Id unauthorized response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules e w rule Id unauthorized response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules e w rule Id unauthorized response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules e w rule Id unauthorized response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put network routers router Id rules e w rule Id unauthorized response
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Code() int {
	return 401
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesEWRuleIDForbidden creates a PutNetworkRoutersRouterIDRulesEWRuleIDForbidden with default headers values
func NewPutNetworkRoutersRouterIDRulesEWRuleIDForbidden() *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden {
	return &PutNetworkRoutersRouterIDRulesEWRuleIDForbidden{}
}

/*
PutNetworkRoutersRouterIDRulesEWRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworkRoutersRouterIDRulesEWRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules e w rule Id forbidden response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules e w rule Id forbidden response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules e w rule Id forbidden response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules e w rule Id forbidden response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules e w rule Id forbidden response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put network routers router Id rules e w rule Id forbidden response
func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) Code() int {
	return 403
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/e-w/{ruleId}][%d] putNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesEWRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
