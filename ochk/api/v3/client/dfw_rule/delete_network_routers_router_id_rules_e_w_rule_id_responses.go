// Code generated by go-swagger; DO NOT EDIT.

package dfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteNetworkRoutersRouterIDRulesEWRuleIDReader is a Reader for the DeleteNetworkRoutersRouterIDRulesEWRuleID structure.
type DeleteNetworkRoutersRouterIDRulesEWRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetworkRoutersRouterIDRulesEWRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}] DeleteNetworkRoutersRouterIDRulesEWRuleID", response, response.Code())
	}
}

// NewDeleteNetworkRoutersRouterIDRulesEWRuleIDOK creates a DeleteNetworkRoutersRouterIDRulesEWRuleIDOK with default headers values
func NewDeleteNetworkRoutersRouterIDRulesEWRuleIDOK() *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK {
	return &DeleteNetworkRoutersRouterIDRulesEWRuleIDOK{}
}

/*
DeleteNetworkRoutersRouterIDRulesEWRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteNetworkRoutersRouterIDRulesEWRuleIDOK struct {
	Payload *models.DeleteDfwRuleResponse
}

// IsSuccess returns true when this delete network routers router Id rules e w rule Id o k response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete network routers router Id rules e w rule Id o k response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules e w rule Id o k response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete network routers router Id rules e w rule Id o k response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules e w rule Id o k response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete network routers router Id rules e w rule Id o k response
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) Code() int {
	return 200
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) GetPayload() *models.DeleteDfwRuleResponse {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteDfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest creates a DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest with default headers values
func NewDeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest() *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest {
	return &DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest{}
}

/*
DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules e w rule Id bad request response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules e w rule Id bad request response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules e w rule Id bad request response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules e w rule Id bad request response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules e w rule Id bad request response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete network routers router Id rules e w rule Id bad request response
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Code() int {
	return 400
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized creates a DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized with default headers values
func NewDeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized() *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized {
	return &DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized{}
}

/*
DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules e w rule Id unauthorized response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules e w rule Id unauthorized response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules e w rule Id unauthorized response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules e w rule Id unauthorized response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules e w rule Id unauthorized response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete network routers router Id rules e w rule Id unauthorized response
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden creates a DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden with default headers values
func NewDeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden() *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden {
	return &DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden{}
}

/*
DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules e w rule Id forbidden response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules e w rule Id forbidden response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules e w rule Id forbidden response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules e w rule Id forbidden response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules e w rule Id forbidden response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete network routers router Id rules e w rule Id forbidden response
func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) Code() int {
	return 403
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/e-w/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesEWRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
