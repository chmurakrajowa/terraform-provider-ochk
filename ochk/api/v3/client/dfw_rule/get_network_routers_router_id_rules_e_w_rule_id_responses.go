// Code generated by go-swagger; DO NOT EDIT.

package dfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetNetworkRoutersRouterIDRulesEWRuleIDReader is a Reader for the GetNetworkRoutersRouterIDRulesEWRuleID structure.
type GetNetworkRoutersRouterIDRulesEWRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkRoutersRouterIDRulesEWRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkRoutersRouterIDRulesEWRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworkRoutersRouterIDRulesEWRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /network/routers/{routerId}/rules/e-w/{ruleId}] GetNetworkRoutersRouterIDRulesEWRuleID", response, response.Code())
	}
}

// NewGetNetworkRoutersRouterIDRulesEWRuleIDOK creates a GetNetworkRoutersRouterIDRulesEWRuleIDOK with default headers values
func NewGetNetworkRoutersRouterIDRulesEWRuleIDOK() *GetNetworkRoutersRouterIDRulesEWRuleIDOK {
	return &GetNetworkRoutersRouterIDRulesEWRuleIDOK{}
}

/*
GetNetworkRoutersRouterIDRulesEWRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworkRoutersRouterIDRulesEWRuleIDOK struct {
	Payload *models.GetDfwRuleResponse
}

// IsSuccess returns true when this get network routers router Id rules e w rule Id o k response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network routers router Id rules e w rule Id o k response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules e w rule Id o k response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network routers router Id rules e w rule Id o k response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules e w rule Id o k response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network routers router Id rules e w rule Id o k response
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) Code() int {
	return 200
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) GetPayload() *models.GetDfwRuleResponse {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesEWRuleIDBadRequest creates a GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest with default headers values
func NewGetNetworkRoutersRouterIDRulesEWRuleIDBadRequest() *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest {
	return &GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest{}
}

/*
GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules e w rule Id bad request response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules e w rule Id bad request response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules e w rule Id bad request response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules e w rule Id bad request response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules e w rule Id bad request response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get network routers router Id rules e w rule Id bad request response
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Code() int {
	return 400
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized creates a GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized with default headers values
func NewGetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized() *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized {
	return &GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized{}
}

/*
GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules e w rule Id unauthorized response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules e w rule Id unauthorized response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules e w rule Id unauthorized response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules e w rule Id unauthorized response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules e w rule Id unauthorized response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get network routers router Id rules e w rule Id unauthorized response
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Code() int {
	return 401
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesEWRuleIDForbidden creates a GetNetworkRoutersRouterIDRulesEWRuleIDForbidden with default headers values
func NewGetNetworkRoutersRouterIDRulesEWRuleIDForbidden() *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden {
	return &GetNetworkRoutersRouterIDRulesEWRuleIDForbidden{}
}

/*
GetNetworkRoutersRouterIDRulesEWRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkRoutersRouterIDRulesEWRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules e w rule Id forbidden response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules e w rule Id forbidden response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules e w rule Id forbidden response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules e w rule Id forbidden response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules e w rule Id forbidden response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get network routers router Id rules e w rule Id forbidden response
func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) Code() int {
	return 403
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/e-w/{ruleId}][%d] getNetworkRoutersRouterIdRulesEWRuleIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesEWRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
