// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetDeploymentsDeploymentIDReader is a Reader for the GetDeploymentsDeploymentID structure.
type GetDeploymentsDeploymentIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentsDeploymentIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentsDeploymentIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeploymentsDeploymentIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDeploymentsDeploymentIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeploymentsDeploymentIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentsDeploymentIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /deployments/{deploymentId}] GetDeploymentsDeploymentID", response, response.Code())
	}
}

// NewGetDeploymentsDeploymentIDOK creates a GetDeploymentsDeploymentIDOK with default headers values
func NewGetDeploymentsDeploymentIDOK() *GetDeploymentsDeploymentIDOK {
	return &GetDeploymentsDeploymentIDOK{}
}

/*
GetDeploymentsDeploymentIDOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentsDeploymentIDOK struct {
	Payload *models.GetDeploymentResponse
}

// IsSuccess returns true when this get deployments deployment Id o k response has a 2xx status code
func (o *GetDeploymentsDeploymentIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployments deployment Id o k response has a 3xx status code
func (o *GetDeploymentsDeploymentIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments deployment Id o k response has a 4xx status code
func (o *GetDeploymentsDeploymentIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployments deployment Id o k response has a 5xx status code
func (o *GetDeploymentsDeploymentIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments deployment Id o k response a status code equal to that given
func (o *GetDeploymentsDeploymentIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployments deployment Id o k response
func (o *GetDeploymentsDeploymentIDOK) Code() int {
	return 200
}

func (o *GetDeploymentsDeploymentIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdOK %s", 200, payload)
}

func (o *GetDeploymentsDeploymentIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdOK %s", 200, payload)
}

func (o *GetDeploymentsDeploymentIDOK) GetPayload() *models.GetDeploymentResponse {
	return o.Payload
}

func (o *GetDeploymentsDeploymentIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDeploymentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsDeploymentIDBadRequest creates a GetDeploymentsDeploymentIDBadRequest with default headers values
func NewGetDeploymentsDeploymentIDBadRequest() *GetDeploymentsDeploymentIDBadRequest {
	return &GetDeploymentsDeploymentIDBadRequest{}
}

/*
GetDeploymentsDeploymentIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDeploymentsDeploymentIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get deployments deployment Id bad request response has a 2xx status code
func (o *GetDeploymentsDeploymentIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments deployment Id bad request response has a 3xx status code
func (o *GetDeploymentsDeploymentIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments deployment Id bad request response has a 4xx status code
func (o *GetDeploymentsDeploymentIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments deployment Id bad request response has a 5xx status code
func (o *GetDeploymentsDeploymentIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments deployment Id bad request response a status code equal to that given
func (o *GetDeploymentsDeploymentIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get deployments deployment Id bad request response
func (o *GetDeploymentsDeploymentIDBadRequest) Code() int {
	return 400
}

func (o *GetDeploymentsDeploymentIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdBadRequest %s", 400, payload)
}

func (o *GetDeploymentsDeploymentIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdBadRequest %s", 400, payload)
}

func (o *GetDeploymentsDeploymentIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetDeploymentsDeploymentIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsDeploymentIDUnauthorized creates a GetDeploymentsDeploymentIDUnauthorized with default headers values
func NewGetDeploymentsDeploymentIDUnauthorized() *GetDeploymentsDeploymentIDUnauthorized {
	return &GetDeploymentsDeploymentIDUnauthorized{}
}

/*
GetDeploymentsDeploymentIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDeploymentsDeploymentIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get deployments deployment Id unauthorized response has a 2xx status code
func (o *GetDeploymentsDeploymentIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments deployment Id unauthorized response has a 3xx status code
func (o *GetDeploymentsDeploymentIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments deployment Id unauthorized response has a 4xx status code
func (o *GetDeploymentsDeploymentIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments deployment Id unauthorized response has a 5xx status code
func (o *GetDeploymentsDeploymentIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments deployment Id unauthorized response a status code equal to that given
func (o *GetDeploymentsDeploymentIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get deployments deployment Id unauthorized response
func (o *GetDeploymentsDeploymentIDUnauthorized) Code() int {
	return 401
}

func (o *GetDeploymentsDeploymentIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdUnauthorized %s", 401, payload)
}

func (o *GetDeploymentsDeploymentIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdUnauthorized %s", 401, payload)
}

func (o *GetDeploymentsDeploymentIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetDeploymentsDeploymentIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsDeploymentIDForbidden creates a GetDeploymentsDeploymentIDForbidden with default headers values
func NewGetDeploymentsDeploymentIDForbidden() *GetDeploymentsDeploymentIDForbidden {
	return &GetDeploymentsDeploymentIDForbidden{}
}

/*
GetDeploymentsDeploymentIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDeploymentsDeploymentIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get deployments deployment Id forbidden response has a 2xx status code
func (o *GetDeploymentsDeploymentIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments deployment Id forbidden response has a 3xx status code
func (o *GetDeploymentsDeploymentIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments deployment Id forbidden response has a 4xx status code
func (o *GetDeploymentsDeploymentIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments deployment Id forbidden response has a 5xx status code
func (o *GetDeploymentsDeploymentIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments deployment Id forbidden response a status code equal to that given
func (o *GetDeploymentsDeploymentIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get deployments deployment Id forbidden response
func (o *GetDeploymentsDeploymentIDForbidden) Code() int {
	return 403
}

func (o *GetDeploymentsDeploymentIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdForbidden %s", 403, payload)
}

func (o *GetDeploymentsDeploymentIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdForbidden %s", 403, payload)
}

func (o *GetDeploymentsDeploymentIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetDeploymentsDeploymentIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsDeploymentIDNotFound creates a GetDeploymentsDeploymentIDNotFound with default headers values
func NewGetDeploymentsDeploymentIDNotFound() *GetDeploymentsDeploymentIDNotFound {
	return &GetDeploymentsDeploymentIDNotFound{}
}

/*
GetDeploymentsDeploymentIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentsDeploymentIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get deployments deployment Id not found response has a 2xx status code
func (o *GetDeploymentsDeploymentIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments deployment Id not found response has a 3xx status code
func (o *GetDeploymentsDeploymentIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments deployment Id not found response has a 4xx status code
func (o *GetDeploymentsDeploymentIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments deployment Id not found response has a 5xx status code
func (o *GetDeploymentsDeploymentIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments deployment Id not found response a status code equal to that given
func (o *GetDeploymentsDeploymentIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployments deployment Id not found response
func (o *GetDeploymentsDeploymentIDNotFound) Code() int {
	return 404
}

func (o *GetDeploymentsDeploymentIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdNotFound %s", 404, payload)
}

func (o *GetDeploymentsDeploymentIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deployments/{deploymentId}][%d] getDeploymentsDeploymentIdNotFound %s", 404, payload)
}

func (o *GetDeploymentsDeploymentIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetDeploymentsDeploymentIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
