// Code generated by go-swagger; DO NOT EDIT.

package gfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteNetworkRoutersRouterIDRulesSNRuleIDReader is a Reader for the DeleteNetworkRoutersRouterIDRulesSNRuleID structure.
type DeleteNetworkRoutersRouterIDRulesSNRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetworkRoutersRouterIDRulesSNRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}] DeleteNetworkRoutersRouterIDRulesSNRuleID", response, response.Code())
	}
}

// NewDeleteNetworkRoutersRouterIDRulesSNRuleIDOK creates a DeleteNetworkRoutersRouterIDRulesSNRuleIDOK with default headers values
func NewDeleteNetworkRoutersRouterIDRulesSNRuleIDOK() *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK {
	return &DeleteNetworkRoutersRouterIDRulesSNRuleIDOK{}
}

/*
DeleteNetworkRoutersRouterIDRulesSNRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteNetworkRoutersRouterIDRulesSNRuleIDOK struct {
	Payload *models.DeleteGfwRuleResponse
}

// IsSuccess returns true when this delete network routers router Id rules s n rule Id o k response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete network routers router Id rules s n rule Id o k response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules s n rule Id o k response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete network routers router Id rules s n rule Id o k response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules s n rule Id o k response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete network routers router Id rules s n rule Id o k response
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) Code() int {
	return 200
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) GetPayload() *models.DeleteGfwRuleResponse {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteGfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest creates a DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest with default headers values
func NewDeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest() *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest {
	return &DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest{}
}

/*
DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules s n rule Id bad request response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules s n rule Id bad request response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules s n rule Id bad request response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules s n rule Id bad request response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules s n rule Id bad request response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete network routers router Id rules s n rule Id bad request response
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Code() int {
	return 400
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized creates a DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized with default headers values
func NewDeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized() *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized {
	return &DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized{}
}

/*
DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules s n rule Id unauthorized response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules s n rule Id unauthorized response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules s n rule Id unauthorized response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules s n rule Id unauthorized response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules s n rule Id unauthorized response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete network routers router Id rules s n rule Id unauthorized response
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden creates a DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden with default headers values
func NewDeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden() *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden {
	return &DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden{}
}

/*
DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete network routers router Id rules s n rule Id forbidden response has a 2xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete network routers router Id rules s n rule Id forbidden response has a 3xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete network routers router Id rules s n rule Id forbidden response has a 4xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete network routers router Id rules s n rule Id forbidden response has a 5xx status code
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete network routers router Id rules s n rule Id forbidden response a status code equal to that given
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete network routers router Id rules s n rule Id forbidden response
func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) Code() int {
	return 403
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /network/routers/{routerId}/rules/s-n/{ruleId}][%d] deleteNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteNetworkRoutersRouterIDRulesSNRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
