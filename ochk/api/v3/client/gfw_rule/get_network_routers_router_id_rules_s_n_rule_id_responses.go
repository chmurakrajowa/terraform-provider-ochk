// Code generated by go-swagger; DO NOT EDIT.

package gfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetNetworkRoutersRouterIDRulesSNRuleIDReader is a Reader for the GetNetworkRoutersRouterIDRulesSNRuleID structure.
type GetNetworkRoutersRouterIDRulesSNRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkRoutersRouterIDRulesSNRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkRoutersRouterIDRulesSNRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworkRoutersRouterIDRulesSNRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /network/routers/{routerId}/rules/s-n/{ruleId}] GetNetworkRoutersRouterIDRulesSNRuleID", response, response.Code())
	}
}

// NewGetNetworkRoutersRouterIDRulesSNRuleIDOK creates a GetNetworkRoutersRouterIDRulesSNRuleIDOK with default headers values
func NewGetNetworkRoutersRouterIDRulesSNRuleIDOK() *GetNetworkRoutersRouterIDRulesSNRuleIDOK {
	return &GetNetworkRoutersRouterIDRulesSNRuleIDOK{}
}

/*
GetNetworkRoutersRouterIDRulesSNRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworkRoutersRouterIDRulesSNRuleIDOK struct {
	Payload *models.GetGfwRuleResponse
}

// IsSuccess returns true when this get network routers router Id rules s n rule Id o k response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network routers router Id rules s n rule Id o k response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules s n rule Id o k response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network routers router Id rules s n rule Id o k response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules s n rule Id o k response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network routers router Id rules s n rule Id o k response
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) Code() int {
	return 200
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) GetPayload() *models.GetGfwRuleResponse {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetGfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesSNRuleIDBadRequest creates a GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest with default headers values
func NewGetNetworkRoutersRouterIDRulesSNRuleIDBadRequest() *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest {
	return &GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest{}
}

/*
GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules s n rule Id bad request response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules s n rule Id bad request response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules s n rule Id bad request response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules s n rule Id bad request response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules s n rule Id bad request response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get network routers router Id rules s n rule Id bad request response
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Code() int {
	return 400
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized creates a GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized with default headers values
func NewGetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized() *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized {
	return &GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized{}
}

/*
GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules s n rule Id unauthorized response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules s n rule Id unauthorized response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules s n rule Id unauthorized response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules s n rule Id unauthorized response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules s n rule Id unauthorized response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get network routers router Id rules s n rule Id unauthorized response
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Code() int {
	return 401
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDRulesSNRuleIDForbidden creates a GetNetworkRoutersRouterIDRulesSNRuleIDForbidden with default headers values
func NewGetNetworkRoutersRouterIDRulesSNRuleIDForbidden() *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden {
	return &GetNetworkRoutersRouterIDRulesSNRuleIDForbidden{}
}

/*
GetNetworkRoutersRouterIDRulesSNRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkRoutersRouterIDRulesSNRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id rules s n rule Id forbidden response has a 2xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id rules s n rule Id forbidden response has a 3xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id rules s n rule Id forbidden response has a 4xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id rules s n rule Id forbidden response has a 5xx status code
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id rules s n rule Id forbidden response a status code equal to that given
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get network routers router Id rules s n rule Id forbidden response
func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) Code() int {
	return 403
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] getNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDRulesSNRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
