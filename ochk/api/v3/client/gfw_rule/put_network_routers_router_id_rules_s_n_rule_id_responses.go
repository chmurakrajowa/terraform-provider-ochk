// Code generated by go-swagger; DO NOT EDIT.

package gfw_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworkRoutersRouterIDRulesSNRuleIDReader is a Reader for the PutNetworkRoutersRouterIDRulesSNRuleID structure.
type PutNetworkRoutersRouterIDRulesSNRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworkRoutersRouterIDRulesSNRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworkRoutersRouterIDRulesSNRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworkRoutersRouterIDRulesSNRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}] PutNetworkRoutersRouterIDRulesSNRuleID", response, response.Code())
	}
}

// NewPutNetworkRoutersRouterIDRulesSNRuleIDOK creates a PutNetworkRoutersRouterIDRulesSNRuleIDOK with default headers values
func NewPutNetworkRoutersRouterIDRulesSNRuleIDOK() *PutNetworkRoutersRouterIDRulesSNRuleIDOK {
	return &PutNetworkRoutersRouterIDRulesSNRuleIDOK{}
}

/*
PutNetworkRoutersRouterIDRulesSNRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworkRoutersRouterIDRulesSNRuleIDOK struct {
	Payload *models.UpdateGfwRuleResponse
}

// IsSuccess returns true when this put network routers router Id rules s n rule Id o k response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put network routers router Id rules s n rule Id o k response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules s n rule Id o k response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put network routers router Id rules s n rule Id o k response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules s n rule Id o k response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put network routers router Id rules s n rule Id o k response
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) Code() int {
	return 200
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) GetPayload() *models.UpdateGfwRuleResponse {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateGfwRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesSNRuleIDBadRequest creates a PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest with default headers values
func NewPutNetworkRoutersRouterIDRulesSNRuleIDBadRequest() *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest {
	return &PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest{}
}

/*
PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules s n rule Id bad request response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules s n rule Id bad request response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules s n rule Id bad request response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules s n rule Id bad request response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules s n rule Id bad request response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put network routers router Id rules s n rule Id bad request response
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Code() int {
	return 400
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized creates a PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized with default headers values
func NewPutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized() *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized {
	return &PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized{}
}

/*
PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules s n rule Id unauthorized response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules s n rule Id unauthorized response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules s n rule Id unauthorized response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules s n rule Id unauthorized response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules s n rule Id unauthorized response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put network routers router Id rules s n rule Id unauthorized response
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Code() int {
	return 401
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDRulesSNRuleIDForbidden creates a PutNetworkRoutersRouterIDRulesSNRuleIDForbidden with default headers values
func NewPutNetworkRoutersRouterIDRulesSNRuleIDForbidden() *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden {
	return &PutNetworkRoutersRouterIDRulesSNRuleIDForbidden{}
}

/*
PutNetworkRoutersRouterIDRulesSNRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworkRoutersRouterIDRulesSNRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id rules s n rule Id forbidden response has a 2xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id rules s n rule Id forbidden response has a 3xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id rules s n rule Id forbidden response has a 4xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id rules s n rule Id forbidden response has a 5xx status code
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id rules s n rule Id forbidden response a status code equal to that given
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put network routers router Id rules s n rule Id forbidden response
func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) Code() int {
	return 403
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}/rules/s-n/{ruleId}][%d] putNetworkRoutersRouterIdRulesSNRuleIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDRulesSNRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
