// Code generated by go-swagger; DO NOT EDIT.

package log_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PostLogUserCategoriesLogCategoryIDGenerateReader is a Reader for the PostLogUserCategoriesLogCategoryIDGenerate structure.
type PostLogUserCategoriesLogCategoryIDGenerateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLogUserCategoriesLogCategoryIDGenerateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLogUserCategoriesLogCategoryIDGenerateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLogUserCategoriesLogCategoryIDGenerateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLogUserCategoriesLogCategoryIDGenerateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLogUserCategoriesLogCategoryIDGenerateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /log/user/categories/{logCategoryId}/generate] PostLogUserCategoriesLogCategoryIDGenerate", response, response.Code())
	}
}

// NewPostLogUserCategoriesLogCategoryIDGenerateOK creates a PostLogUserCategoriesLogCategoryIDGenerateOK with default headers values
func NewPostLogUserCategoriesLogCategoryIDGenerateOK() *PostLogUserCategoriesLogCategoryIDGenerateOK {
	return &PostLogUserCategoriesLogCategoryIDGenerateOK{}
}

/*
PostLogUserCategoriesLogCategoryIDGenerateOK describes a response with status code 200, with default header values.

OK
*/
type PostLogUserCategoriesLogCategoryIDGenerateOK struct {
	Payload *models.GetLogsResponse
}

// IsSuccess returns true when this post log user categories log category Id generate o k response has a 2xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post log user categories log category Id generate o k response has a 3xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log user categories log category Id generate o k response has a 4xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post log user categories log category Id generate o k response has a 5xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post log user categories log category Id generate o k response a status code equal to that given
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post log user categories log category Id generate o k response
func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) Code() int {
	return 200
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateOK %s", 200, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateOK %s", 200, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) GetPayload() *models.GetLogsResponse {
	return o.Payload
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetLogsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogUserCategoriesLogCategoryIDGenerateBadRequest creates a PostLogUserCategoriesLogCategoryIDGenerateBadRequest with default headers values
func NewPostLogUserCategoriesLogCategoryIDGenerateBadRequest() *PostLogUserCategoriesLogCategoryIDGenerateBadRequest {
	return &PostLogUserCategoriesLogCategoryIDGenerateBadRequest{}
}

/*
PostLogUserCategoriesLogCategoryIDGenerateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostLogUserCategoriesLogCategoryIDGenerateBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log user categories log category Id generate bad request response has a 2xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log user categories log category Id generate bad request response has a 3xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log user categories log category Id generate bad request response has a 4xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log user categories log category Id generate bad request response has a 5xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post log user categories log category Id generate bad request response a status code equal to that given
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post log user categories log category Id generate bad request response
func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) Code() int {
	return 400
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateBadRequest %s", 400, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateBadRequest %s", 400, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogUserCategoriesLogCategoryIDGenerateUnauthorized creates a PostLogUserCategoriesLogCategoryIDGenerateUnauthorized with default headers values
func NewPostLogUserCategoriesLogCategoryIDGenerateUnauthorized() *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized {
	return &PostLogUserCategoriesLogCategoryIDGenerateUnauthorized{}
}

/*
PostLogUserCategoriesLogCategoryIDGenerateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostLogUserCategoriesLogCategoryIDGenerateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log user categories log category Id generate unauthorized response has a 2xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log user categories log category Id generate unauthorized response has a 3xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log user categories log category Id generate unauthorized response has a 4xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log user categories log category Id generate unauthorized response has a 5xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post log user categories log category Id generate unauthorized response a status code equal to that given
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post log user categories log category Id generate unauthorized response
func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) Code() int {
	return 401
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateUnauthorized %s", 401, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateUnauthorized %s", 401, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLogUserCategoriesLogCategoryIDGenerateForbidden creates a PostLogUserCategoriesLogCategoryIDGenerateForbidden with default headers values
func NewPostLogUserCategoriesLogCategoryIDGenerateForbidden() *PostLogUserCategoriesLogCategoryIDGenerateForbidden {
	return &PostLogUserCategoriesLogCategoryIDGenerateForbidden{}
}

/*
PostLogUserCategoriesLogCategoryIDGenerateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostLogUserCategoriesLogCategoryIDGenerateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this post log user categories log category Id generate forbidden response has a 2xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post log user categories log category Id generate forbidden response has a 3xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post log user categories log category Id generate forbidden response has a 4xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post log user categories log category Id generate forbidden response has a 5xx status code
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post log user categories log category Id generate forbidden response a status code equal to that given
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post log user categories log category Id generate forbidden response
func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) Code() int {
	return 403
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateForbidden %s", 403, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /log/user/categories/{logCategoryId}/generate][%d] postLogUserCategoriesLogCategoryIdGenerateForbidden %s", 403, payload)
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PostLogUserCategoriesLogCategoryIDGenerateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
