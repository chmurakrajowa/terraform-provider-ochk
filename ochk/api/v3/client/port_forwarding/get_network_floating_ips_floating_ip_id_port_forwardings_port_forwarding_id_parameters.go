// Code generated by go-swagger; DO NOT EDIT.

package port_forwarding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams creates a new GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams() *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithTimeout creates a new GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a timeout on a request.
func NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithTimeout(timeout time.Duration) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		timeout: timeout,
	}
}

// NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithContext creates a new GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a context for a request.
func NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithContext(ctx context.Context) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		Context: ctx,
	}
}

// NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithHTTPClient creates a new GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithHTTPClient(client *http.Client) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		HTTPClient: client,
	}
}

/*
GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams contains all the parameters to send to the API endpoint

	for the get network floating ips floating IP ID port forwardings port forwarding ID operation.

	Typically these are written to a http.Request.
*/
type GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams struct {

	// FloatingIPID.
	//
	// Format: uuid
	FloatingIPID strfmt.UUID

	// PortForwardingID.
	//
	// Format: uuid
	PortForwardingID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get network floating ips floating IP ID port forwardings port forwarding ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithDefaults() *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get network floating ips floating IP ID port forwardings port forwarding ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithTimeout(timeout time.Duration) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithContext(ctx context.Context) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithHTTPClient(client *http.Client) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFloatingIPID adds the floatingIPID to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithFloatingIPID(floatingIPID strfmt.UUID) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetFloatingIPID(floatingIPID)
	return o
}

// SetFloatingIPID adds the floatingIpId to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetFloatingIPID(floatingIPID strfmt.UUID) {
	o.FloatingIPID = floatingIPID
}

// WithPortForwardingID adds the portForwardingID to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithPortForwardingID(portForwardingID strfmt.UUID) *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetPortForwardingID(portForwardingID)
	return o
}

// SetPortForwardingID adds the portForwardingId to the get network floating ips floating IP ID port forwardings port forwarding ID params
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetPortForwardingID(portForwardingID strfmt.UUID) {
	o.PortForwardingID = portForwardingID
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param floatingIpId
	if err := r.SetPathParam("floatingIpId", o.FloatingIPID.String()); err != nil {
		return err
	}

	// path param portForwardingId
	if err := r.SetPathParam("portForwardingId", o.PortForwardingID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
