// Code generated by go-swagger; DO NOT EDIT.

package port_forwarding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams creates a new PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams() *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithTimeout creates a new PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a timeout on a request.
func NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithTimeout(timeout time.Duration) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		timeout: timeout,
	}
}

// NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithContext creates a new PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a context for a request.
func NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithContext(ctx context.Context) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		Context: ctx,
	}
}

// NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithHTTPClient creates a new PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParamsWithHTTPClient(client *http.Client) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	return &PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams{
		HTTPClient: client,
	}
}

/*
PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams contains all the parameters to send to the API endpoint

	for the put network floating ips floating IP ID port forwardings port forwarding ID operation.

	Typically these are written to a http.Request.
*/
type PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams struct {

	// Body.
	Body *models.PortForwarding

	// FloatingIPID.
	//
	// Format: uuid
	FloatingIPID strfmt.UUID

	// PortForwardingID.
	//
	// Format: uuid
	PortForwardingID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put network floating ips floating IP ID port forwardings port forwarding ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithDefaults() *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put network floating ips floating IP ID port forwardings port forwarding ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithTimeout(timeout time.Duration) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithContext(ctx context.Context) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithHTTPClient(client *http.Client) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithBody(body *models.PortForwarding) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetBody(body *models.PortForwarding) {
	o.Body = body
}

// WithFloatingIPID adds the floatingIPID to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithFloatingIPID(floatingIPID strfmt.UUID) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetFloatingIPID(floatingIPID)
	return o
}

// SetFloatingIPID adds the floatingIpId to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetFloatingIPID(floatingIPID strfmt.UUID) {
	o.FloatingIPID = floatingIPID
}

// WithPortForwardingID adds the portForwardingID to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WithPortForwardingID(portForwardingID strfmt.UUID) *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams {
	o.SetPortForwardingID(portForwardingID)
	return o
}

// SetPortForwardingID adds the portForwardingId to the put network floating ips floating IP ID port forwardings port forwarding ID params
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) SetPortForwardingID(portForwardingID strfmt.UUID) {
	o.PortForwardingID = portForwardingID
}

// WriteToRequest writes these params to a swagger request
func (o *PutNetworkFloatingIpsFloatingIPIDPortForwardingsPortForwardingIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param floatingIpId
	if err := r.SetPathParam("floatingIpId", o.FloatingIPID.String()); err != nil {
		return err
	}

	// path param portForwardingId
	if err := r.SetPathParam("portForwardingId", o.PortForwardingID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
