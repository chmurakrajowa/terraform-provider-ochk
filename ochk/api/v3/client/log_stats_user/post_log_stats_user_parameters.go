// Code generated by go-swagger; DO NOT EDIT.

package log_stats_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// NewPostLogStatsUserParams creates a new PostLogStatsUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostLogStatsUserParams() *PostLogStatsUserParams {
	return &PostLogStatsUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostLogStatsUserParamsWithTimeout creates a new PostLogStatsUserParams object
// with the ability to set a timeout on a request.
func NewPostLogStatsUserParamsWithTimeout(timeout time.Duration) *PostLogStatsUserParams {
	return &PostLogStatsUserParams{
		timeout: timeout,
	}
}

// NewPostLogStatsUserParamsWithContext creates a new PostLogStatsUserParams object
// with the ability to set a context for a request.
func NewPostLogStatsUserParamsWithContext(ctx context.Context) *PostLogStatsUserParams {
	return &PostLogStatsUserParams{
		Context: ctx,
	}
}

// NewPostLogStatsUserParamsWithHTTPClient creates a new PostLogStatsUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostLogStatsUserParamsWithHTTPClient(client *http.Client) *PostLogStatsUserParams {
	return &PostLogStatsUserParams{
		HTTPClient: client,
	}
}

/*
PostLogStatsUserParams contains all the parameters to send to the API endpoint

	for the post log stats user operation.

	Typically these are written to a http.Request.
*/
type PostLogStatsUserParams struct {

	// Body.
	Body *models.QueryFilter

	// UserID.
	//
	// Format: uuid
	UserID *strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post log stats user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostLogStatsUserParams) WithDefaults() *PostLogStatsUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post log stats user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostLogStatsUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post log stats user params
func (o *PostLogStatsUserParams) WithTimeout(timeout time.Duration) *PostLogStatsUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post log stats user params
func (o *PostLogStatsUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post log stats user params
func (o *PostLogStatsUserParams) WithContext(ctx context.Context) *PostLogStatsUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post log stats user params
func (o *PostLogStatsUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post log stats user params
func (o *PostLogStatsUserParams) WithHTTPClient(client *http.Client) *PostLogStatsUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post log stats user params
func (o *PostLogStatsUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post log stats user params
func (o *PostLogStatsUserParams) WithBody(body *models.QueryFilter) *PostLogStatsUserParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post log stats user params
func (o *PostLogStatsUserParams) SetBody(body *models.QueryFilter) {
	o.Body = body
}

// WithUserID adds the userID to the post log stats user params
func (o *PostLogStatsUserParams) WithUserID(userID *strfmt.UUID) *PostLogStatsUserParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the post log stats user params
func (o *PostLogStatsUserParams) SetUserID(userID *strfmt.UUID) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLogStatsUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.UserID != nil {

		// query param userId
		var qrUserID strfmt.UUID

		if o.UserID != nil {
			qrUserID = *o.UserID
		}
		qUserID := qrUserID.String()
		if qUserID != "" {

			if err := r.SetQueryParam("userId", qUserID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
