// Code generated by go-swagger; DO NOT EDIT.

package billing_vrf

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetBillingAccountsAccountIDReportsBillingPeriodIDVrfReader is a Reader for the GetBillingAccountsAccountIDReportsBillingPeriodIDVrf structure.
type GetBillingAccountsAccountIDReportsBillingPeriodIDVrfReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf] GetBillingAccountsAccountIDReportsBillingPeriodIDVrf", response, response.Code())
	}
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK() *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK describes a response with status code 200, with default header values.

OK
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK struct {
	Payload *models.GenerateVRFBillingReportResponse
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id vrf o k response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id vrf o k response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id vrf o k response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id vrf o k response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id vrf o k response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get billing accounts account Id reports billing period Id vrf o k response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) Code() int {
	return 200
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfOK %s", 200, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfOK %s", 200, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) GetPayload() *models.GenerateVRFBillingReportResponse {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenerateVRFBillingReportResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest() *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id vrf bad request response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id vrf bad request response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id vrf bad request response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id vrf bad request response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id vrf bad request response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get billing accounts account Id reports billing period Id vrf bad request response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) Code() int {
	return 400
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized() *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id vrf unauthorized response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id vrf unauthorized response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id vrf unauthorized response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id vrf unauthorized response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id vrf unauthorized response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get billing accounts account Id reports billing period Id vrf unauthorized response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) Code() int {
	return 401
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden() *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id vrf forbidden response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id vrf forbidden response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id vrf forbidden response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id vrf forbidden response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id vrf forbidden response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get billing accounts account Id reports billing period Id vrf forbidden response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) Code() int {
	return 403
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfForbidden %s", 403, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vrf][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVrfForbidden %s", 403, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVrfForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
