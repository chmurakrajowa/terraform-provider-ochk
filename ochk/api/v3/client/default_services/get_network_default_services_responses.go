// Code generated by go-swagger; DO NOT EDIT.

package default_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetNetworkDefaultServicesReader is a Reader for the GetNetworkDefaultServices structure.
type GetNetworkDefaultServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkDefaultServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkDefaultServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkDefaultServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNetworkDefaultServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworkDefaultServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /network/default-services] GetNetworkDefaultServices", response, response.Code())
	}
}

// NewGetNetworkDefaultServicesOK creates a GetNetworkDefaultServicesOK with default headers values
func NewGetNetworkDefaultServicesOK() *GetNetworkDefaultServicesOK {
	return &GetNetworkDefaultServicesOK{}
}

/*
GetNetworkDefaultServicesOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworkDefaultServicesOK struct {
	Payload *models.ListServicesResponse
}

// IsSuccess returns true when this get network default services o k response has a 2xx status code
func (o *GetNetworkDefaultServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network default services o k response has a 3xx status code
func (o *GetNetworkDefaultServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network default services o k response has a 4xx status code
func (o *GetNetworkDefaultServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network default services o k response has a 5xx status code
func (o *GetNetworkDefaultServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network default services o k response a status code equal to that given
func (o *GetNetworkDefaultServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network default services o k response
func (o *GetNetworkDefaultServicesOK) Code() int {
	return 200
}

func (o *GetNetworkDefaultServicesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesOK %s", 200, payload)
}

func (o *GetNetworkDefaultServicesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesOK %s", 200, payload)
}

func (o *GetNetworkDefaultServicesOK) GetPayload() *models.ListServicesResponse {
	return o.Payload
}

func (o *GetNetworkDefaultServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListServicesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkDefaultServicesBadRequest creates a GetNetworkDefaultServicesBadRequest with default headers values
func NewGetNetworkDefaultServicesBadRequest() *GetNetworkDefaultServicesBadRequest {
	return &GetNetworkDefaultServicesBadRequest{}
}

/*
GetNetworkDefaultServicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworkDefaultServicesBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network default services bad request response has a 2xx status code
func (o *GetNetworkDefaultServicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network default services bad request response has a 3xx status code
func (o *GetNetworkDefaultServicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network default services bad request response has a 4xx status code
func (o *GetNetworkDefaultServicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network default services bad request response has a 5xx status code
func (o *GetNetworkDefaultServicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get network default services bad request response a status code equal to that given
func (o *GetNetworkDefaultServicesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get network default services bad request response
func (o *GetNetworkDefaultServicesBadRequest) Code() int {
	return 400
}

func (o *GetNetworkDefaultServicesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesBadRequest %s", 400, payload)
}

func (o *GetNetworkDefaultServicesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesBadRequest %s", 400, payload)
}

func (o *GetNetworkDefaultServicesBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkDefaultServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkDefaultServicesUnauthorized creates a GetNetworkDefaultServicesUnauthorized with default headers values
func NewGetNetworkDefaultServicesUnauthorized() *GetNetworkDefaultServicesUnauthorized {
	return &GetNetworkDefaultServicesUnauthorized{}
}

/*
GetNetworkDefaultServicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNetworkDefaultServicesUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network default services unauthorized response has a 2xx status code
func (o *GetNetworkDefaultServicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network default services unauthorized response has a 3xx status code
func (o *GetNetworkDefaultServicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network default services unauthorized response has a 4xx status code
func (o *GetNetworkDefaultServicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network default services unauthorized response has a 5xx status code
func (o *GetNetworkDefaultServicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get network default services unauthorized response a status code equal to that given
func (o *GetNetworkDefaultServicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get network default services unauthorized response
func (o *GetNetworkDefaultServicesUnauthorized) Code() int {
	return 401
}

func (o *GetNetworkDefaultServicesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesUnauthorized %s", 401, payload)
}

func (o *GetNetworkDefaultServicesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesUnauthorized %s", 401, payload)
}

func (o *GetNetworkDefaultServicesUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkDefaultServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkDefaultServicesForbidden creates a GetNetworkDefaultServicesForbidden with default headers values
func NewGetNetworkDefaultServicesForbidden() *GetNetworkDefaultServicesForbidden {
	return &GetNetworkDefaultServicesForbidden{}
}

/*
GetNetworkDefaultServicesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkDefaultServicesForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network default services forbidden response has a 2xx status code
func (o *GetNetworkDefaultServicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network default services forbidden response has a 3xx status code
func (o *GetNetworkDefaultServicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network default services forbidden response has a 4xx status code
func (o *GetNetworkDefaultServicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network default services forbidden response has a 5xx status code
func (o *GetNetworkDefaultServicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get network default services forbidden response a status code equal to that given
func (o *GetNetworkDefaultServicesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get network default services forbidden response
func (o *GetNetworkDefaultServicesForbidden) Code() int {
	return 403
}

func (o *GetNetworkDefaultServicesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesForbidden %s", 403, payload)
}

func (o *GetNetworkDefaultServicesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/default-services][%d] getNetworkDefaultServicesForbidden %s", 403, payload)
}

func (o *GetNetworkDefaultServicesForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkDefaultServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
