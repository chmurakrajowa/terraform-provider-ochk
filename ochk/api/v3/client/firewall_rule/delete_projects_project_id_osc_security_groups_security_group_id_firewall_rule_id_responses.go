// Code generated by go-swagger; DO NOT EDIT.

package firewall_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDReader is a Reader for the DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleID structure.
type DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}] DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleID", response, response.Code())
	}
}

// NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK creates a DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK with default headers values
func NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK() *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK {
	return &DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK{}
}

/*
DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK struct {
	Payload *models.DeleteFirewallRuleResponse
}

// IsSuccess returns true when this delete projects project Id osc security groups security group Id firewall rule Id o k response has a 2xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete projects project Id osc security groups security group Id firewall rule Id o k response has a 3xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id osc security groups security group Id firewall rule Id o k response has a 4xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete projects project Id osc security groups security group Id firewall rule Id o k response has a 5xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id osc security groups security group Id firewall rule Id o k response a status code equal to that given
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete projects project Id osc security groups security group Id firewall rule Id o k response
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) Code() int {
	return 200
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) GetPayload() *models.DeleteFirewallRuleResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteFirewallRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest creates a DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest with default headers values
func NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest() *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest {
	return &DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest{}
}

/*
DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id osc security groups security group Id firewall rule Id bad request response has a 2xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id osc security groups security group Id firewall rule Id bad request response has a 3xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id osc security groups security group Id firewall rule Id bad request response has a 4xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id osc security groups security group Id firewall rule Id bad request response has a 5xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id osc security groups security group Id firewall rule Id bad request response a status code equal to that given
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete projects project Id osc security groups security group Id firewall rule Id bad request response
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) Code() int {
	return 400
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized creates a DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized with default headers values
func NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized() *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized {
	return &DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized{}
}

/*
DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id osc security groups security group Id firewall rule Id unauthorized response has a 2xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id osc security groups security group Id firewall rule Id unauthorized response has a 3xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id osc security groups security group Id firewall rule Id unauthorized response has a 4xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id osc security groups security group Id firewall rule Id unauthorized response has a 5xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id osc security groups security group Id firewall rule Id unauthorized response a status code equal to that given
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete projects project Id osc security groups security group Id firewall rule Id unauthorized response
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden creates a DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden with default headers values
func NewDeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden() *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden {
	return &DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden{}
}

/*
DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete projects project Id osc security groups security group Id firewall rule Id forbidden response has a 2xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id osc security groups security group Id firewall rule Id forbidden response has a 3xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id osc security groups security group Id firewall rule Id forbidden response has a 4xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id osc security groups security group Id firewall rule Id forbidden response has a 5xx status code
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id osc security groups security group Id firewall rule Id forbidden response a status code equal to that given
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete projects project Id osc security groups security group Id firewall rule Id forbidden response
func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) Code() int {
	return 403
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}][%d] deleteProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallRuleIdForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
