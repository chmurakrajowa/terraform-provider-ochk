// Code generated by go-swagger; DO NOT EDIT.

package firewall_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams creates a new GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams() *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	return &GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithTimeout creates a new GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams object
// with the ability to set a timeout on a request.
func NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithTimeout(timeout time.Duration) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	return &GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams{
		timeout: timeout,
	}
}

// NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithContext creates a new GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams object
// with the ability to set a context for a request.
func NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithContext(ctx context.Context) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	return &GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams{
		Context: ctx,
	}
}

// NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithHTTPClient creates a new GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParamsWithHTTPClient(client *http.Client) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	return &GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams{
		HTTPClient: client,
	}
}

/*
GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams contains all the parameters to send to the API endpoint

	for the get projects project ID osc security groups security group ID firewall rule ID operation.

	Typically these are written to a http.Request.
*/
type GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams struct {

	// ProjectID.
	//
	// Format: uuid
	ProjectID strfmt.UUID

	// RuleID.
	//
	// Format: uuid
	RuleID strfmt.UUID

	// SecurityGroupID.
	//
	// Format: uuid
	SecurityGroupID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get projects project ID osc security groups security group ID firewall rule ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithDefaults() *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get projects project ID osc security groups security group ID firewall rule ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithTimeout(timeout time.Duration) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithContext(ctx context.Context) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithHTTPClient(client *http.Client) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithProjectID(projectID strfmt.UUID) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetProjectID(projectID strfmt.UUID) {
	o.ProjectID = projectID
}

// WithRuleID adds the ruleID to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithRuleID(ruleID strfmt.UUID) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetRuleID(ruleID)
	return o
}

// SetRuleID adds the ruleId to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetRuleID(ruleID strfmt.UUID) {
	o.RuleID = ruleID
}

// WithSecurityGroupID adds the securityGroupID to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WithSecurityGroupID(securityGroupID strfmt.UUID) *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams {
	o.SetSecurityGroupID(securityGroupID)
	return o
}

// SetSecurityGroupID adds the securityGroupId to the get projects project ID osc security groups security group ID firewall rule ID params
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) SetSecurityGroupID(securityGroupID strfmt.UUID) {
	o.SecurityGroupID = securityGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallRuleIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID.String()); err != nil {
		return err
	}

	// path param ruleId
	if err := r.SetPathParam("ruleId", o.RuleID.String()); err != nil {
		return err
	}

	// path param securityGroupId
	if err := r.SetPathParam("securityGroupId", o.SecurityGroupID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
