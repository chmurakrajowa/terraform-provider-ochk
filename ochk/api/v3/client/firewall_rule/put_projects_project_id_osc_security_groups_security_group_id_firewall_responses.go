// Code generated by go-swagger; DO NOT EDIT.

package firewall_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallReader is a Reader for the PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewall structure.
type PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall] PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewall", response, response.Code())
	}
}

// NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK creates a PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK with default headers values
func NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK() *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK {
	return &PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK{}
}

/*
PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK describes a response with status code 200, with default header values.

OK
*/
type PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK struct {
	Payload *models.CreateFirewallRuleResponse
}

// IsSuccess returns true when this put projects project Id osc security groups security group Id firewall o k response has a 2xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put projects project Id osc security groups security group Id firewall o k response has a 3xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects project Id osc security groups security group Id firewall o k response has a 4xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put projects project Id osc security groups security group Id firewall o k response has a 5xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects project Id osc security groups security group Id firewall o k response a status code equal to that given
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put projects project Id osc security groups security group Id firewall o k response
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) Code() int {
	return 200
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallOK %s", 200, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallOK %s", 200, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) GetPayload() *models.CreateFirewallRuleResponse {
	return o.Payload
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateFirewallRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest creates a PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest with default headers values
func NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest() *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest {
	return &PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest{}
}

/*
PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects project Id osc security groups security group Id firewall bad request response has a 2xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects project Id osc security groups security group Id firewall bad request response has a 3xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects project Id osc security groups security group Id firewall bad request response has a 4xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects project Id osc security groups security group Id firewall bad request response has a 5xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects project Id osc security groups security group Id firewall bad request response a status code equal to that given
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put projects project Id osc security groups security group Id firewall bad request response
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) Code() int {
	return 400
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallBadRequest %s", 400, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallBadRequest %s", 400, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized creates a PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized with default headers values
func NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized() *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized {
	return &PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized{}
}

/*
PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects project Id osc security groups security group Id firewall unauthorized response has a 2xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects project Id osc security groups security group Id firewall unauthorized response has a 3xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects project Id osc security groups security group Id firewall unauthorized response has a 4xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects project Id osc security groups security group Id firewall unauthorized response has a 5xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects project Id osc security groups security group Id firewall unauthorized response a status code equal to that given
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put projects project Id osc security groups security group Id firewall unauthorized response
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) Code() int {
	return 401
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallUnauthorized %s", 401, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallUnauthorized %s", 401, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden creates a PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden with default headers values
func NewPutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden() *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden {
	return &PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden{}
}

/*
PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put projects project Id osc security groups security group Id firewall forbidden response has a 2xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put projects project Id osc security groups security group Id firewall forbidden response has a 3xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put projects project Id osc security groups security group Id firewall forbidden response has a 4xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put projects project Id osc security groups security group Id firewall forbidden response has a 5xx status code
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put projects project Id osc security groups security group Id firewall forbidden response a status code equal to that given
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put projects project Id osc security groups security group Id firewall forbidden response
func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) Code() int {
	return 403
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallForbidden %s", 403, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{projectId}/osc/security-groups/{securityGroupId}/firewall][%d] putProjectsProjectIdOscSecurityGroupsSecurityGroupIdFirewallForbidden %s", 403, payload)
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutProjectsProjectIDOscSecurityGroupsSecurityGroupIDFirewallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
