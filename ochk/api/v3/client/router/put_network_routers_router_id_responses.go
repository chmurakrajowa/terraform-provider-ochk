// Code generated by go-swagger; DO NOT EDIT.

package router

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutNetworkRoutersRouterIDReader is a Reader for the PutNetworkRoutersRouterID structure.
type PutNetworkRoutersRouterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNetworkRoutersRouterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNetworkRoutersRouterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutNetworkRoutersRouterIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutNetworkRoutersRouterIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNetworkRoutersRouterIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutNetworkRoutersRouterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /network/routers/{routerId}] PutNetworkRoutersRouterID", response, response.Code())
	}
}

// NewPutNetworkRoutersRouterIDOK creates a PutNetworkRoutersRouterIDOK with default headers values
func NewPutNetworkRoutersRouterIDOK() *PutNetworkRoutersRouterIDOK {
	return &PutNetworkRoutersRouterIDOK{}
}

/*
PutNetworkRoutersRouterIDOK describes a response with status code 200, with default header values.

OK
*/
type PutNetworkRoutersRouterIDOK struct {
	Payload *models.UpdateRouterResponse
}

// IsSuccess returns true when this put network routers router Id o k response has a 2xx status code
func (o *PutNetworkRoutersRouterIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put network routers router Id o k response has a 3xx status code
func (o *PutNetworkRoutersRouterIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id o k response has a 4xx status code
func (o *PutNetworkRoutersRouterIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put network routers router Id o k response has a 5xx status code
func (o *PutNetworkRoutersRouterIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id o k response a status code equal to that given
func (o *PutNetworkRoutersRouterIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put network routers router Id o k response
func (o *PutNetworkRoutersRouterIDOK) Code() int {
	return 200
}

func (o *PutNetworkRoutersRouterIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdOK %s", 200, payload)
}

func (o *PutNetworkRoutersRouterIDOK) GetPayload() *models.UpdateRouterResponse {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateRouterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDBadRequest creates a PutNetworkRoutersRouterIDBadRequest with default headers values
func NewPutNetworkRoutersRouterIDBadRequest() *PutNetworkRoutersRouterIDBadRequest {
	return &PutNetworkRoutersRouterIDBadRequest{}
}

/*
PutNetworkRoutersRouterIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutNetworkRoutersRouterIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id bad request response has a 2xx status code
func (o *PutNetworkRoutersRouterIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id bad request response has a 3xx status code
func (o *PutNetworkRoutersRouterIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id bad request response has a 4xx status code
func (o *PutNetworkRoutersRouterIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id bad request response has a 5xx status code
func (o *PutNetworkRoutersRouterIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id bad request response a status code equal to that given
func (o *PutNetworkRoutersRouterIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put network routers router Id bad request response
func (o *PutNetworkRoutersRouterIDBadRequest) Code() int {
	return 400
}

func (o *PutNetworkRoutersRouterIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdBadRequest %s", 400, payload)
}

func (o *PutNetworkRoutersRouterIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDUnauthorized creates a PutNetworkRoutersRouterIDUnauthorized with default headers values
func NewPutNetworkRoutersRouterIDUnauthorized() *PutNetworkRoutersRouterIDUnauthorized {
	return &PutNetworkRoutersRouterIDUnauthorized{}
}

/*
PutNetworkRoutersRouterIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutNetworkRoutersRouterIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id unauthorized response has a 2xx status code
func (o *PutNetworkRoutersRouterIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id unauthorized response has a 3xx status code
func (o *PutNetworkRoutersRouterIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id unauthorized response has a 4xx status code
func (o *PutNetworkRoutersRouterIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id unauthorized response has a 5xx status code
func (o *PutNetworkRoutersRouterIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id unauthorized response a status code equal to that given
func (o *PutNetworkRoutersRouterIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put network routers router Id unauthorized response
func (o *PutNetworkRoutersRouterIDUnauthorized) Code() int {
	return 401
}

func (o *PutNetworkRoutersRouterIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdUnauthorized %s", 401, payload)
}

func (o *PutNetworkRoutersRouterIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDForbidden creates a PutNetworkRoutersRouterIDForbidden with default headers values
func NewPutNetworkRoutersRouterIDForbidden() *PutNetworkRoutersRouterIDForbidden {
	return &PutNetworkRoutersRouterIDForbidden{}
}

/*
PutNetworkRoutersRouterIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutNetworkRoutersRouterIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id forbidden response has a 2xx status code
func (o *PutNetworkRoutersRouterIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id forbidden response has a 3xx status code
func (o *PutNetworkRoutersRouterIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id forbidden response has a 4xx status code
func (o *PutNetworkRoutersRouterIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id forbidden response has a 5xx status code
func (o *PutNetworkRoutersRouterIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id forbidden response a status code equal to that given
func (o *PutNetworkRoutersRouterIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put network routers router Id forbidden response
func (o *PutNetworkRoutersRouterIDForbidden) Code() int {
	return 403
}

func (o *PutNetworkRoutersRouterIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdForbidden %s", 403, payload)
}

func (o *PutNetworkRoutersRouterIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNetworkRoutersRouterIDNotFound creates a PutNetworkRoutersRouterIDNotFound with default headers values
func NewPutNetworkRoutersRouterIDNotFound() *PutNetworkRoutersRouterIDNotFound {
	return &PutNetworkRoutersRouterIDNotFound{}
}

/*
PutNetworkRoutersRouterIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutNetworkRoutersRouterIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put network routers router Id not found response has a 2xx status code
func (o *PutNetworkRoutersRouterIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put network routers router Id not found response has a 3xx status code
func (o *PutNetworkRoutersRouterIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put network routers router Id not found response has a 4xx status code
func (o *PutNetworkRoutersRouterIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put network routers router Id not found response has a 5xx status code
func (o *PutNetworkRoutersRouterIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put network routers router Id not found response a status code equal to that given
func (o *PutNetworkRoutersRouterIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put network routers router Id not found response
func (o *PutNetworkRoutersRouterIDNotFound) Code() int {
	return 404
}

func (o *PutNetworkRoutersRouterIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdNotFound %s", 404, payload)
}

func (o *PutNetworkRoutersRouterIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /network/routers/{routerId}][%d] putNetworkRoutersRouterIdNotFound %s", 404, payload)
}

func (o *PutNetworkRoutersRouterIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutNetworkRoutersRouterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
