// Code generated by go-swagger; DO NOT EDIT.

package router

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetNetworkRoutersRouterIDReader is a Reader for the GetNetworkRoutersRouterID structure.
type GetNetworkRoutersRouterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkRoutersRouterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkRoutersRouterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkRoutersRouterIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNetworkRoutersRouterIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworkRoutersRouterIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkRoutersRouterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /network/routers/{routerId}] GetNetworkRoutersRouterID", response, response.Code())
	}
}

// NewGetNetworkRoutersRouterIDOK creates a GetNetworkRoutersRouterIDOK with default headers values
func NewGetNetworkRoutersRouterIDOK() *GetNetworkRoutersRouterIDOK {
	return &GetNetworkRoutersRouterIDOK{}
}

/*
GetNetworkRoutersRouterIDOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworkRoutersRouterIDOK struct {
	Payload *models.GetRouterResponse
}

// IsSuccess returns true when this get network routers router Id o k response has a 2xx status code
func (o *GetNetworkRoutersRouterIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network routers router Id o k response has a 3xx status code
func (o *GetNetworkRoutersRouterIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id o k response has a 4xx status code
func (o *GetNetworkRoutersRouterIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network routers router Id o k response has a 5xx status code
func (o *GetNetworkRoutersRouterIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id o k response a status code equal to that given
func (o *GetNetworkRoutersRouterIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network routers router Id o k response
func (o *GetNetworkRoutersRouterIDOK) Code() int {
	return 200
}

func (o *GetNetworkRoutersRouterIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdOK %s", 200, payload)
}

func (o *GetNetworkRoutersRouterIDOK) GetPayload() *models.GetRouterResponse {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetRouterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDBadRequest creates a GetNetworkRoutersRouterIDBadRequest with default headers values
func NewGetNetworkRoutersRouterIDBadRequest() *GetNetworkRoutersRouterIDBadRequest {
	return &GetNetworkRoutersRouterIDBadRequest{}
}

/*
GetNetworkRoutersRouterIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworkRoutersRouterIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id bad request response has a 2xx status code
func (o *GetNetworkRoutersRouterIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id bad request response has a 3xx status code
func (o *GetNetworkRoutersRouterIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id bad request response has a 4xx status code
func (o *GetNetworkRoutersRouterIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id bad request response has a 5xx status code
func (o *GetNetworkRoutersRouterIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id bad request response a status code equal to that given
func (o *GetNetworkRoutersRouterIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get network routers router Id bad request response
func (o *GetNetworkRoutersRouterIDBadRequest) Code() int {
	return 400
}

func (o *GetNetworkRoutersRouterIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdBadRequest %s", 400, payload)
}

func (o *GetNetworkRoutersRouterIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDUnauthorized creates a GetNetworkRoutersRouterIDUnauthorized with default headers values
func NewGetNetworkRoutersRouterIDUnauthorized() *GetNetworkRoutersRouterIDUnauthorized {
	return &GetNetworkRoutersRouterIDUnauthorized{}
}

/*
GetNetworkRoutersRouterIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNetworkRoutersRouterIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id unauthorized response has a 2xx status code
func (o *GetNetworkRoutersRouterIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id unauthorized response has a 3xx status code
func (o *GetNetworkRoutersRouterIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id unauthorized response has a 4xx status code
func (o *GetNetworkRoutersRouterIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id unauthorized response has a 5xx status code
func (o *GetNetworkRoutersRouterIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id unauthorized response a status code equal to that given
func (o *GetNetworkRoutersRouterIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get network routers router Id unauthorized response
func (o *GetNetworkRoutersRouterIDUnauthorized) Code() int {
	return 401
}

func (o *GetNetworkRoutersRouterIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdUnauthorized %s", 401, payload)
}

func (o *GetNetworkRoutersRouterIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDForbidden creates a GetNetworkRoutersRouterIDForbidden with default headers values
func NewGetNetworkRoutersRouterIDForbidden() *GetNetworkRoutersRouterIDForbidden {
	return &GetNetworkRoutersRouterIDForbidden{}
}

/*
GetNetworkRoutersRouterIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkRoutersRouterIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id forbidden response has a 2xx status code
func (o *GetNetworkRoutersRouterIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id forbidden response has a 3xx status code
func (o *GetNetworkRoutersRouterIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id forbidden response has a 4xx status code
func (o *GetNetworkRoutersRouterIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id forbidden response has a 5xx status code
func (o *GetNetworkRoutersRouterIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id forbidden response a status code equal to that given
func (o *GetNetworkRoutersRouterIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get network routers router Id forbidden response
func (o *GetNetworkRoutersRouterIDForbidden) Code() int {
	return 403
}

func (o *GetNetworkRoutersRouterIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdForbidden %s", 403, payload)
}

func (o *GetNetworkRoutersRouterIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkRoutersRouterIDNotFound creates a GetNetworkRoutersRouterIDNotFound with default headers values
func NewGetNetworkRoutersRouterIDNotFound() *GetNetworkRoutersRouterIDNotFound {
	return &GetNetworkRoutersRouterIDNotFound{}
}

/*
GetNetworkRoutersRouterIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetNetworkRoutersRouterIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get network routers router Id not found response has a 2xx status code
func (o *GetNetworkRoutersRouterIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network routers router Id not found response has a 3xx status code
func (o *GetNetworkRoutersRouterIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network routers router Id not found response has a 4xx status code
func (o *GetNetworkRoutersRouterIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network routers router Id not found response has a 5xx status code
func (o *GetNetworkRoutersRouterIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get network routers router Id not found response a status code equal to that given
func (o *GetNetworkRoutersRouterIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get network routers router Id not found response
func (o *GetNetworkRoutersRouterIDNotFound) Code() int {
	return 404
}

func (o *GetNetworkRoutersRouterIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdNotFound %s", 404, payload)
}

func (o *GetNetworkRoutersRouterIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /network/routers/{routerId}][%d] getNetworkRoutersRouterIdNotFound %s", 404, payload)
}

func (o *GetNetworkRoutersRouterIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetNetworkRoutersRouterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
