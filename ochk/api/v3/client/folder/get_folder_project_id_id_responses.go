// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetFolderProjectIDIDReader is a Reader for the GetFolderProjectIDID structure.
type GetFolderProjectIDIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFolderProjectIDIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFolderProjectIDIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFolderProjectIDIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFolderProjectIDIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFolderProjectIDIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFolderProjectIDIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /folder/{projectId}/{id}] GetFolderProjectIDID", response, response.Code())
	}
}

// NewGetFolderProjectIDIDOK creates a GetFolderProjectIDIDOK with default headers values
func NewGetFolderProjectIDIDOK() *GetFolderProjectIDIDOK {
	return &GetFolderProjectIDIDOK{}
}

/*
GetFolderProjectIDIDOK describes a response with status code 200, with default header values.

OK
*/
type GetFolderProjectIDIDOK struct {
	Payload *models.FolderGetResponse
}

// IsSuccess returns true when this get folder project Id Id o k response has a 2xx status code
func (o *GetFolderProjectIDIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get folder project Id Id o k response has a 3xx status code
func (o *GetFolderProjectIDIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get folder project Id Id o k response has a 4xx status code
func (o *GetFolderProjectIDIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get folder project Id Id o k response has a 5xx status code
func (o *GetFolderProjectIDIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get folder project Id Id o k response a status code equal to that given
func (o *GetFolderProjectIDIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get folder project Id Id o k response
func (o *GetFolderProjectIDIDOK) Code() int {
	return 200
}

func (o *GetFolderProjectIDIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdOK %s", 200, payload)
}

func (o *GetFolderProjectIDIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdOK %s", 200, payload)
}

func (o *GetFolderProjectIDIDOK) GetPayload() *models.FolderGetResponse {
	return o.Payload
}

func (o *GetFolderProjectIDIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FolderGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderProjectIDIDBadRequest creates a GetFolderProjectIDIDBadRequest with default headers values
func NewGetFolderProjectIDIDBadRequest() *GetFolderProjectIDIDBadRequest {
	return &GetFolderProjectIDIDBadRequest{}
}

/*
GetFolderProjectIDIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFolderProjectIDIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get folder project Id Id bad request response has a 2xx status code
func (o *GetFolderProjectIDIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get folder project Id Id bad request response has a 3xx status code
func (o *GetFolderProjectIDIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get folder project Id Id bad request response has a 4xx status code
func (o *GetFolderProjectIDIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get folder project Id Id bad request response has a 5xx status code
func (o *GetFolderProjectIDIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get folder project Id Id bad request response a status code equal to that given
func (o *GetFolderProjectIDIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get folder project Id Id bad request response
func (o *GetFolderProjectIDIDBadRequest) Code() int {
	return 400
}

func (o *GetFolderProjectIDIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdBadRequest %s", 400, payload)
}

func (o *GetFolderProjectIDIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdBadRequest %s", 400, payload)
}

func (o *GetFolderProjectIDIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetFolderProjectIDIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderProjectIDIDUnauthorized creates a GetFolderProjectIDIDUnauthorized with default headers values
func NewGetFolderProjectIDIDUnauthorized() *GetFolderProjectIDIDUnauthorized {
	return &GetFolderProjectIDIDUnauthorized{}
}

/*
GetFolderProjectIDIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFolderProjectIDIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get folder project Id Id unauthorized response has a 2xx status code
func (o *GetFolderProjectIDIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get folder project Id Id unauthorized response has a 3xx status code
func (o *GetFolderProjectIDIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get folder project Id Id unauthorized response has a 4xx status code
func (o *GetFolderProjectIDIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get folder project Id Id unauthorized response has a 5xx status code
func (o *GetFolderProjectIDIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get folder project Id Id unauthorized response a status code equal to that given
func (o *GetFolderProjectIDIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get folder project Id Id unauthorized response
func (o *GetFolderProjectIDIDUnauthorized) Code() int {
	return 401
}

func (o *GetFolderProjectIDIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdUnauthorized %s", 401, payload)
}

func (o *GetFolderProjectIDIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdUnauthorized %s", 401, payload)
}

func (o *GetFolderProjectIDIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetFolderProjectIDIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderProjectIDIDForbidden creates a GetFolderProjectIDIDForbidden with default headers values
func NewGetFolderProjectIDIDForbidden() *GetFolderProjectIDIDForbidden {
	return &GetFolderProjectIDIDForbidden{}
}

/*
GetFolderProjectIDIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFolderProjectIDIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get folder project Id Id forbidden response has a 2xx status code
func (o *GetFolderProjectIDIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get folder project Id Id forbidden response has a 3xx status code
func (o *GetFolderProjectIDIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get folder project Id Id forbidden response has a 4xx status code
func (o *GetFolderProjectIDIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get folder project Id Id forbidden response has a 5xx status code
func (o *GetFolderProjectIDIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get folder project Id Id forbidden response a status code equal to that given
func (o *GetFolderProjectIDIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get folder project Id Id forbidden response
func (o *GetFolderProjectIDIDForbidden) Code() int {
	return 403
}

func (o *GetFolderProjectIDIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdForbidden %s", 403, payload)
}

func (o *GetFolderProjectIDIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdForbidden %s", 403, payload)
}

func (o *GetFolderProjectIDIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetFolderProjectIDIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderProjectIDIDNotFound creates a GetFolderProjectIDIDNotFound with default headers values
func NewGetFolderProjectIDIDNotFound() *GetFolderProjectIDIDNotFound {
	return &GetFolderProjectIDIDNotFound{}
}

/*
GetFolderProjectIDIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFolderProjectIDIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get folder project Id Id not found response has a 2xx status code
func (o *GetFolderProjectIDIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get folder project Id Id not found response has a 3xx status code
func (o *GetFolderProjectIDIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get folder project Id Id not found response has a 4xx status code
func (o *GetFolderProjectIDIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get folder project Id Id not found response has a 5xx status code
func (o *GetFolderProjectIDIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get folder project Id Id not found response a status code equal to that given
func (o *GetFolderProjectIDIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get folder project Id Id not found response
func (o *GetFolderProjectIDIDNotFound) Code() int {
	return 404
}

func (o *GetFolderProjectIDIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdNotFound %s", 404, payload)
}

func (o *GetFolderProjectIDIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /folder/{projectId}/{id}][%d] getFolderProjectIdIdNotFound %s", 404, payload)
}

func (o *GetFolderProjectIDIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetFolderProjectIDIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
