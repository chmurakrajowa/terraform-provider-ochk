// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIpamIpaddressPublicAllocationAllocationIDReader is a Reader for the GetIpamIpaddressPublicAllocationAllocationID structure.
type GetIpamIpaddressPublicAllocationAllocationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpamIpaddressPublicAllocationAllocationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpamIpaddressPublicAllocationAllocationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIpamIpaddressPublicAllocationAllocationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIpamIpaddressPublicAllocationAllocationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIpamIpaddressPublicAllocationAllocationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipam/ipaddress/public/allocation/{allocationId}] GetIpamIpaddressPublicAllocationAllocationID", response, response.Code())
	}
}

// NewGetIpamIpaddressPublicAllocationAllocationIDOK creates a GetIpamIpaddressPublicAllocationAllocationIDOK with default headers values
func NewGetIpamIpaddressPublicAllocationAllocationIDOK() *GetIpamIpaddressPublicAllocationAllocationIDOK {
	return &GetIpamIpaddressPublicAllocationAllocationIDOK{}
}

/*
GetIpamIpaddressPublicAllocationAllocationIDOK describes a response with status code 200, with default header values.

OK
*/
type GetIpamIpaddressPublicAllocationAllocationIDOK struct {
	Payload *models.GetPublicIPAllocationResponse
}

// IsSuccess returns true when this get ipam ipaddress public allocation allocation Id o k response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ipam ipaddress public allocation allocation Id o k response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation allocation Id o k response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ipam ipaddress public allocation allocation Id o k response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation allocation Id o k response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ipam ipaddress public allocation allocation Id o k response
func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) Code() int {
	return 200
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) GetPayload() *models.GetPublicIPAllocationResponse {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetPublicIPAllocationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationAllocationIDBadRequest creates a GetIpamIpaddressPublicAllocationAllocationIDBadRequest with default headers values
func NewGetIpamIpaddressPublicAllocationAllocationIDBadRequest() *GetIpamIpaddressPublicAllocationAllocationIDBadRequest {
	return &GetIpamIpaddressPublicAllocationAllocationIDBadRequest{}
}

/*
GetIpamIpaddressPublicAllocationAllocationIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIpamIpaddressPublicAllocationAllocationIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation allocation Id bad request response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation allocation Id bad request response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation allocation Id bad request response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation allocation Id bad request response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation allocation Id bad request response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ipam ipaddress public allocation allocation Id bad request response
func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) Code() int {
	return 400
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationAllocationIDUnauthorized creates a GetIpamIpaddressPublicAllocationAllocationIDUnauthorized with default headers values
func NewGetIpamIpaddressPublicAllocationAllocationIDUnauthorized() *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized {
	return &GetIpamIpaddressPublicAllocationAllocationIDUnauthorized{}
}

/*
GetIpamIpaddressPublicAllocationAllocationIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIpamIpaddressPublicAllocationAllocationIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation allocation Id unauthorized response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation allocation Id unauthorized response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation allocation Id unauthorized response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation allocation Id unauthorized response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation allocation Id unauthorized response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ipam ipaddress public allocation allocation Id unauthorized response
func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) Code() int {
	return 401
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationAllocationIDForbidden creates a GetIpamIpaddressPublicAllocationAllocationIDForbidden with default headers values
func NewGetIpamIpaddressPublicAllocationAllocationIDForbidden() *GetIpamIpaddressPublicAllocationAllocationIDForbidden {
	return &GetIpamIpaddressPublicAllocationAllocationIDForbidden{}
}

/*
GetIpamIpaddressPublicAllocationAllocationIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIpamIpaddressPublicAllocationAllocationIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation allocation Id forbidden response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation allocation Id forbidden response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation allocation Id forbidden response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation allocation Id forbidden response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation allocation Id forbidden response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ipam ipaddress public allocation allocation Id forbidden response
func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) Code() int {
	return 403
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation/{allocationId}][%d] getIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationAllocationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
