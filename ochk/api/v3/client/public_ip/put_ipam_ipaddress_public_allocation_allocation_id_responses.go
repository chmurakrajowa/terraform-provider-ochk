// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutIpamIpaddressPublicAllocationAllocationIDReader is a Reader for the PutIpamIpaddressPublicAllocationAllocationID structure.
type PutIpamIpaddressPublicAllocationAllocationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIpamIpaddressPublicAllocationAllocationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIpamIpaddressPublicAllocationAllocationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIpamIpaddressPublicAllocationAllocationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIpamIpaddressPublicAllocationAllocationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIpamIpaddressPublicAllocationAllocationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /ipam/ipaddress/public/allocation/{allocationId}] PutIpamIpaddressPublicAllocationAllocationID", response, response.Code())
	}
}

// NewPutIpamIpaddressPublicAllocationAllocationIDOK creates a PutIpamIpaddressPublicAllocationAllocationIDOK with default headers values
func NewPutIpamIpaddressPublicAllocationAllocationIDOK() *PutIpamIpaddressPublicAllocationAllocationIDOK {
	return &PutIpamIpaddressPublicAllocationAllocationIDOK{}
}

/*
PutIpamIpaddressPublicAllocationAllocationIDOK describes a response with status code 200, with default header values.

OK
*/
type PutIpamIpaddressPublicAllocationAllocationIDOK struct {
	Payload *models.UpdatePublicIPAllocationResponse
}

// IsSuccess returns true when this put ipam ipaddress public allocation allocation Id o k response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put ipam ipaddress public allocation allocation Id o k response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation allocation Id o k response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put ipam ipaddress public allocation allocation Id o k response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation allocation Id o k response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put ipam ipaddress public allocation allocation Id o k response
func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) Code() int {
	return 200
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) GetPayload() *models.UpdatePublicIPAllocationResponse {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdatePublicIPAllocationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationAllocationIDBadRequest creates a PutIpamIpaddressPublicAllocationAllocationIDBadRequest with default headers values
func NewPutIpamIpaddressPublicAllocationAllocationIDBadRequest() *PutIpamIpaddressPublicAllocationAllocationIDBadRequest {
	return &PutIpamIpaddressPublicAllocationAllocationIDBadRequest{}
}

/*
PutIpamIpaddressPublicAllocationAllocationIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutIpamIpaddressPublicAllocationAllocationIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation allocation Id bad request response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation allocation Id bad request response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation allocation Id bad request response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation allocation Id bad request response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation allocation Id bad request response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put ipam ipaddress public allocation allocation Id bad request response
func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) Code() int {
	return 400
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationAllocationIDUnauthorized creates a PutIpamIpaddressPublicAllocationAllocationIDUnauthorized with default headers values
func NewPutIpamIpaddressPublicAllocationAllocationIDUnauthorized() *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized {
	return &PutIpamIpaddressPublicAllocationAllocationIDUnauthorized{}
}

/*
PutIpamIpaddressPublicAllocationAllocationIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutIpamIpaddressPublicAllocationAllocationIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation allocation Id unauthorized response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation allocation Id unauthorized response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation allocation Id unauthorized response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation allocation Id unauthorized response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation allocation Id unauthorized response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put ipam ipaddress public allocation allocation Id unauthorized response
func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) Code() int {
	return 401
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationAllocationIDForbidden creates a PutIpamIpaddressPublicAllocationAllocationIDForbidden with default headers values
func NewPutIpamIpaddressPublicAllocationAllocationIDForbidden() *PutIpamIpaddressPublicAllocationAllocationIDForbidden {
	return &PutIpamIpaddressPublicAllocationAllocationIDForbidden{}
}

/*
PutIpamIpaddressPublicAllocationAllocationIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutIpamIpaddressPublicAllocationAllocationIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation allocation Id forbidden response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation allocation Id forbidden response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation allocation Id forbidden response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation allocation Id forbidden response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation allocation Id forbidden response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put ipam ipaddress public allocation allocation Id forbidden response
func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) Code() int {
	return 403
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation/{allocationId}][%d] putIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationAllocationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
