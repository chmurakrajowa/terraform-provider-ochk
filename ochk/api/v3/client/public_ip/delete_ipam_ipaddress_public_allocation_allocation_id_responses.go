// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteIpamIpaddressPublicAllocationAllocationIDReader is a Reader for the DeleteIpamIpaddressPublicAllocationAllocationID structure.
type DeleteIpamIpaddressPublicAllocationAllocationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIpamIpaddressPublicAllocationAllocationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIpamIpaddressPublicAllocationAllocationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIpamIpaddressPublicAllocationAllocationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /ipam/ipaddress/public/allocation/{allocationId}] DeleteIpamIpaddressPublicAllocationAllocationID", response, response.Code())
	}
}

// NewDeleteIpamIpaddressPublicAllocationAllocationIDOK creates a DeleteIpamIpaddressPublicAllocationAllocationIDOK with default headers values
func NewDeleteIpamIpaddressPublicAllocationAllocationIDOK() *DeleteIpamIpaddressPublicAllocationAllocationIDOK {
	return &DeleteIpamIpaddressPublicAllocationAllocationIDOK{}
}

/*
DeleteIpamIpaddressPublicAllocationAllocationIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteIpamIpaddressPublicAllocationAllocationIDOK struct {
	Payload *models.DeletePublicIPAllocationResponse
}

// IsSuccess returns true when this delete ipam ipaddress public allocation allocation Id o k response has a 2xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete ipam ipaddress public allocation allocation Id o k response has a 3xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ipaddress public allocation allocation Id o k response has a 4xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete ipam ipaddress public allocation allocation Id o k response has a 5xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete ipam ipaddress public allocation allocation Id o k response a status code equal to that given
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete ipam ipaddress public allocation allocation Id o k response
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) Code() int {
	return 200
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdOK %s", 200, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) GetPayload() *models.DeletePublicIPAllocationResponse {
	return o.Payload
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeletePublicIPAllocationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIpamIpaddressPublicAllocationAllocationIDBadRequest creates a DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest with default headers values
func NewDeleteIpamIpaddressPublicAllocationAllocationIDBadRequest() *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest {
	return &DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest{}
}

/*
DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete ipam ipaddress public allocation allocation Id bad request response has a 2xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete ipam ipaddress public allocation allocation Id bad request response has a 3xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ipaddress public allocation allocation Id bad request response has a 4xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete ipam ipaddress public allocation allocation Id bad request response has a 5xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete ipam ipaddress public allocation allocation Id bad request response a status code equal to that given
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete ipam ipaddress public allocation allocation Id bad request response
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) Code() int {
	return 400
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdBadRequest %s", 400, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized creates a DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized with default headers values
func NewDeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized() *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized {
	return &DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized{}
}

/*
DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete ipam ipaddress public allocation allocation Id unauthorized response has a 2xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete ipam ipaddress public allocation allocation Id unauthorized response has a 3xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ipaddress public allocation allocation Id unauthorized response has a 4xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete ipam ipaddress public allocation allocation Id unauthorized response has a 5xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete ipam ipaddress public allocation allocation Id unauthorized response a status code equal to that given
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete ipam ipaddress public allocation allocation Id unauthorized response
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdUnauthorized %s", 401, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIpamIpaddressPublicAllocationAllocationIDForbidden creates a DeleteIpamIpaddressPublicAllocationAllocationIDForbidden with default headers values
func NewDeleteIpamIpaddressPublicAllocationAllocationIDForbidden() *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden {
	return &DeleteIpamIpaddressPublicAllocationAllocationIDForbidden{}
}

/*
DeleteIpamIpaddressPublicAllocationAllocationIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteIpamIpaddressPublicAllocationAllocationIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete ipam ipaddress public allocation allocation Id forbidden response has a 2xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete ipam ipaddress public allocation allocation Id forbidden response has a 3xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ipaddress public allocation allocation Id forbidden response has a 4xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete ipam ipaddress public allocation allocation Id forbidden response has a 5xx status code
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete ipam ipaddress public allocation allocation Id forbidden response a status code equal to that given
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete ipam ipaddress public allocation allocation Id forbidden response
func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) Code() int {
	return 403
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /ipam/ipaddress/public/allocation/{allocationId}][%d] deleteIpamIpaddressPublicAllocationAllocationIdForbidden %s", 403, payload)
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteIpamIpaddressPublicAllocationAllocationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
