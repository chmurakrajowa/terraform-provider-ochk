// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// PutIpamIpaddressPublicAllocationReader is a Reader for the PutIpamIpaddressPublicAllocation structure.
type PutIpamIpaddressPublicAllocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIpamIpaddressPublicAllocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIpamIpaddressPublicAllocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIpamIpaddressPublicAllocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIpamIpaddressPublicAllocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIpamIpaddressPublicAllocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /ipam/ipaddress/public/allocation] PutIpamIpaddressPublicAllocation", response, response.Code())
	}
}

// NewPutIpamIpaddressPublicAllocationOK creates a PutIpamIpaddressPublicAllocationOK with default headers values
func NewPutIpamIpaddressPublicAllocationOK() *PutIpamIpaddressPublicAllocationOK {
	return &PutIpamIpaddressPublicAllocationOK{}
}

/*
PutIpamIpaddressPublicAllocationOK describes a response with status code 200, with default header values.

OK
*/
type PutIpamIpaddressPublicAllocationOK struct {
	Payload *models.CreatePublicIPAllocationResponse
}

// IsSuccess returns true when this put ipam ipaddress public allocation o k response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put ipam ipaddress public allocation o k response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation o k response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put ipam ipaddress public allocation o k response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation o k response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put ipam ipaddress public allocation o k response
func (o *PutIpamIpaddressPublicAllocationOK) Code() int {
	return 200
}

func (o *PutIpamIpaddressPublicAllocationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationOK %s", 200, payload)
}

func (o *PutIpamIpaddressPublicAllocationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationOK %s", 200, payload)
}

func (o *PutIpamIpaddressPublicAllocationOK) GetPayload() *models.CreatePublicIPAllocationResponse {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreatePublicIPAllocationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationBadRequest creates a PutIpamIpaddressPublicAllocationBadRequest with default headers values
func NewPutIpamIpaddressPublicAllocationBadRequest() *PutIpamIpaddressPublicAllocationBadRequest {
	return &PutIpamIpaddressPublicAllocationBadRequest{}
}

/*
PutIpamIpaddressPublicAllocationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutIpamIpaddressPublicAllocationBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation bad request response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation bad request response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation bad request response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation bad request response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation bad request response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put ipam ipaddress public allocation bad request response
func (o *PutIpamIpaddressPublicAllocationBadRequest) Code() int {
	return 400
}

func (o *PutIpamIpaddressPublicAllocationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationBadRequest %s", 400, payload)
}

func (o *PutIpamIpaddressPublicAllocationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationBadRequest %s", 400, payload)
}

func (o *PutIpamIpaddressPublicAllocationBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationUnauthorized creates a PutIpamIpaddressPublicAllocationUnauthorized with default headers values
func NewPutIpamIpaddressPublicAllocationUnauthorized() *PutIpamIpaddressPublicAllocationUnauthorized {
	return &PutIpamIpaddressPublicAllocationUnauthorized{}
}

/*
PutIpamIpaddressPublicAllocationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutIpamIpaddressPublicAllocationUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation unauthorized response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation unauthorized response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation unauthorized response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation unauthorized response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation unauthorized response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put ipam ipaddress public allocation unauthorized response
func (o *PutIpamIpaddressPublicAllocationUnauthorized) Code() int {
	return 401
}

func (o *PutIpamIpaddressPublicAllocationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationUnauthorized %s", 401, payload)
}

func (o *PutIpamIpaddressPublicAllocationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationUnauthorized %s", 401, payload)
}

func (o *PutIpamIpaddressPublicAllocationUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIpamIpaddressPublicAllocationForbidden creates a PutIpamIpaddressPublicAllocationForbidden with default headers values
func NewPutIpamIpaddressPublicAllocationForbidden() *PutIpamIpaddressPublicAllocationForbidden {
	return &PutIpamIpaddressPublicAllocationForbidden{}
}

/*
PutIpamIpaddressPublicAllocationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutIpamIpaddressPublicAllocationForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this put ipam ipaddress public allocation forbidden response has a 2xx status code
func (o *PutIpamIpaddressPublicAllocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ipam ipaddress public allocation forbidden response has a 3xx status code
func (o *PutIpamIpaddressPublicAllocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ipam ipaddress public allocation forbidden response has a 4xx status code
func (o *PutIpamIpaddressPublicAllocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ipam ipaddress public allocation forbidden response has a 5xx status code
func (o *PutIpamIpaddressPublicAllocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put ipam ipaddress public allocation forbidden response a status code equal to that given
func (o *PutIpamIpaddressPublicAllocationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put ipam ipaddress public allocation forbidden response
func (o *PutIpamIpaddressPublicAllocationForbidden) Code() int {
	return 403
}

func (o *PutIpamIpaddressPublicAllocationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationForbidden %s", 403, payload)
}

func (o *PutIpamIpaddressPublicAllocationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ipam/ipaddress/public/allocation][%d] putIpamIpaddressPublicAllocationForbidden %s", 403, payload)
}

func (o *PutIpamIpaddressPublicAllocationForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PutIpamIpaddressPublicAllocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
