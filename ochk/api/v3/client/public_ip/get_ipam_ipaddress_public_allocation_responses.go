// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIpamIpaddressPublicAllocationReader is a Reader for the GetIpamIpaddressPublicAllocation structure.
type GetIpamIpaddressPublicAllocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpamIpaddressPublicAllocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpamIpaddressPublicAllocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIpamIpaddressPublicAllocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIpamIpaddressPublicAllocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIpamIpaddressPublicAllocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipam/ipaddress/public/allocation] GetIpamIpaddressPublicAllocation", response, response.Code())
	}
}

// NewGetIpamIpaddressPublicAllocationOK creates a GetIpamIpaddressPublicAllocationOK with default headers values
func NewGetIpamIpaddressPublicAllocationOK() *GetIpamIpaddressPublicAllocationOK {
	return &GetIpamIpaddressPublicAllocationOK{}
}

/*
GetIpamIpaddressPublicAllocationOK describes a response with status code 200, with default header values.

OK
*/
type GetIpamIpaddressPublicAllocationOK struct {
	Payload *models.ListPublicIPAllocationsResponse
}

// IsSuccess returns true when this get ipam ipaddress public allocation o k response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ipam ipaddress public allocation o k response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation o k response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ipam ipaddress public allocation o k response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation o k response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ipam ipaddress public allocation o k response
func (o *GetIpamIpaddressPublicAllocationOK) Code() int {
	return 200
}

func (o *GetIpamIpaddressPublicAllocationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationOK %s", 200, payload)
}

func (o *GetIpamIpaddressPublicAllocationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationOK %s", 200, payload)
}

func (o *GetIpamIpaddressPublicAllocationOK) GetPayload() *models.ListPublicIPAllocationsResponse {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListPublicIPAllocationsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationBadRequest creates a GetIpamIpaddressPublicAllocationBadRequest with default headers values
func NewGetIpamIpaddressPublicAllocationBadRequest() *GetIpamIpaddressPublicAllocationBadRequest {
	return &GetIpamIpaddressPublicAllocationBadRequest{}
}

/*
GetIpamIpaddressPublicAllocationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIpamIpaddressPublicAllocationBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation bad request response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation bad request response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation bad request response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation bad request response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation bad request response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ipam ipaddress public allocation bad request response
func (o *GetIpamIpaddressPublicAllocationBadRequest) Code() int {
	return 400
}

func (o *GetIpamIpaddressPublicAllocationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationBadRequest %s", 400, payload)
}

func (o *GetIpamIpaddressPublicAllocationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationBadRequest %s", 400, payload)
}

func (o *GetIpamIpaddressPublicAllocationBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationUnauthorized creates a GetIpamIpaddressPublicAllocationUnauthorized with default headers values
func NewGetIpamIpaddressPublicAllocationUnauthorized() *GetIpamIpaddressPublicAllocationUnauthorized {
	return &GetIpamIpaddressPublicAllocationUnauthorized{}
}

/*
GetIpamIpaddressPublicAllocationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIpamIpaddressPublicAllocationUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation unauthorized response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation unauthorized response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation unauthorized response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation unauthorized response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation unauthorized response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ipam ipaddress public allocation unauthorized response
func (o *GetIpamIpaddressPublicAllocationUnauthorized) Code() int {
	return 401
}

func (o *GetIpamIpaddressPublicAllocationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationUnauthorized %s", 401, payload)
}

func (o *GetIpamIpaddressPublicAllocationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationUnauthorized %s", 401, payload)
}

func (o *GetIpamIpaddressPublicAllocationUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpamIpaddressPublicAllocationForbidden creates a GetIpamIpaddressPublicAllocationForbidden with default headers values
func NewGetIpamIpaddressPublicAllocationForbidden() *GetIpamIpaddressPublicAllocationForbidden {
	return &GetIpamIpaddressPublicAllocationForbidden{}
}

/*
GetIpamIpaddressPublicAllocationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIpamIpaddressPublicAllocationForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipam ipaddress public allocation forbidden response has a 2xx status code
func (o *GetIpamIpaddressPublicAllocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipam ipaddress public allocation forbidden response has a 3xx status code
func (o *GetIpamIpaddressPublicAllocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipam ipaddress public allocation forbidden response has a 4xx status code
func (o *GetIpamIpaddressPublicAllocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipam ipaddress public allocation forbidden response has a 5xx status code
func (o *GetIpamIpaddressPublicAllocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipam ipaddress public allocation forbidden response a status code equal to that given
func (o *GetIpamIpaddressPublicAllocationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ipam ipaddress public allocation forbidden response
func (o *GetIpamIpaddressPublicAllocationForbidden) Code() int {
	return 403
}

func (o *GetIpamIpaddressPublicAllocationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationForbidden %s", 403, payload)
}

func (o *GetIpamIpaddressPublicAllocationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] getIpamIpaddressPublicAllocationForbidden %s", 403, payload)
}

func (o *GetIpamIpaddressPublicAllocationForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpamIpaddressPublicAllocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
