// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// DeleteBillingAccountsAccountIDReader is a Reader for the DeleteBillingAccountsAccountID structure.
type DeleteBillingAccountsAccountIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBillingAccountsAccountIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBillingAccountsAccountIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBillingAccountsAccountIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteBillingAccountsAccountIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteBillingAccountsAccountIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBillingAccountsAccountIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /billing/accounts/{accountId}] DeleteBillingAccountsAccountID", response, response.Code())
	}
}

// NewDeleteBillingAccountsAccountIDOK creates a DeleteBillingAccountsAccountIDOK with default headers values
func NewDeleteBillingAccountsAccountIDOK() *DeleteBillingAccountsAccountIDOK {
	return &DeleteBillingAccountsAccountIDOK{}
}

/*
DeleteBillingAccountsAccountIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteBillingAccountsAccountIDOK struct {
	Payload *models.DeleteAccountResponse
}

// IsSuccess returns true when this delete billing accounts account Id o k response has a 2xx status code
func (o *DeleteBillingAccountsAccountIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete billing accounts account Id o k response has a 3xx status code
func (o *DeleteBillingAccountsAccountIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete billing accounts account Id o k response has a 4xx status code
func (o *DeleteBillingAccountsAccountIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete billing accounts account Id o k response has a 5xx status code
func (o *DeleteBillingAccountsAccountIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete billing accounts account Id o k response a status code equal to that given
func (o *DeleteBillingAccountsAccountIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete billing accounts account Id o k response
func (o *DeleteBillingAccountsAccountIDOK) Code() int {
	return 200
}

func (o *DeleteBillingAccountsAccountIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdOK %s", 200, payload)
}

func (o *DeleteBillingAccountsAccountIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdOK %s", 200, payload)
}

func (o *DeleteBillingAccountsAccountIDOK) GetPayload() *models.DeleteAccountResponse {
	return o.Payload
}

func (o *DeleteBillingAccountsAccountIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBillingAccountsAccountIDBadRequest creates a DeleteBillingAccountsAccountIDBadRequest with default headers values
func NewDeleteBillingAccountsAccountIDBadRequest() *DeleteBillingAccountsAccountIDBadRequest {
	return &DeleteBillingAccountsAccountIDBadRequest{}
}

/*
DeleteBillingAccountsAccountIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteBillingAccountsAccountIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete billing accounts account Id bad request response has a 2xx status code
func (o *DeleteBillingAccountsAccountIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete billing accounts account Id bad request response has a 3xx status code
func (o *DeleteBillingAccountsAccountIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete billing accounts account Id bad request response has a 4xx status code
func (o *DeleteBillingAccountsAccountIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete billing accounts account Id bad request response has a 5xx status code
func (o *DeleteBillingAccountsAccountIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete billing accounts account Id bad request response a status code equal to that given
func (o *DeleteBillingAccountsAccountIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete billing accounts account Id bad request response
func (o *DeleteBillingAccountsAccountIDBadRequest) Code() int {
	return 400
}

func (o *DeleteBillingAccountsAccountIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdBadRequest %s", 400, payload)
}

func (o *DeleteBillingAccountsAccountIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdBadRequest %s", 400, payload)
}

func (o *DeleteBillingAccountsAccountIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteBillingAccountsAccountIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBillingAccountsAccountIDUnauthorized creates a DeleteBillingAccountsAccountIDUnauthorized with default headers values
func NewDeleteBillingAccountsAccountIDUnauthorized() *DeleteBillingAccountsAccountIDUnauthorized {
	return &DeleteBillingAccountsAccountIDUnauthorized{}
}

/*
DeleteBillingAccountsAccountIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteBillingAccountsAccountIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete billing accounts account Id unauthorized response has a 2xx status code
func (o *DeleteBillingAccountsAccountIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete billing accounts account Id unauthorized response has a 3xx status code
func (o *DeleteBillingAccountsAccountIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete billing accounts account Id unauthorized response has a 4xx status code
func (o *DeleteBillingAccountsAccountIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete billing accounts account Id unauthorized response has a 5xx status code
func (o *DeleteBillingAccountsAccountIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete billing accounts account Id unauthorized response a status code equal to that given
func (o *DeleteBillingAccountsAccountIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete billing accounts account Id unauthorized response
func (o *DeleteBillingAccountsAccountIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteBillingAccountsAccountIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdUnauthorized %s", 401, payload)
}

func (o *DeleteBillingAccountsAccountIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdUnauthorized %s", 401, payload)
}

func (o *DeleteBillingAccountsAccountIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteBillingAccountsAccountIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBillingAccountsAccountIDForbidden creates a DeleteBillingAccountsAccountIDForbidden with default headers values
func NewDeleteBillingAccountsAccountIDForbidden() *DeleteBillingAccountsAccountIDForbidden {
	return &DeleteBillingAccountsAccountIDForbidden{}
}

/*
DeleteBillingAccountsAccountIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteBillingAccountsAccountIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete billing accounts account Id forbidden response has a 2xx status code
func (o *DeleteBillingAccountsAccountIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete billing accounts account Id forbidden response has a 3xx status code
func (o *DeleteBillingAccountsAccountIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete billing accounts account Id forbidden response has a 4xx status code
func (o *DeleteBillingAccountsAccountIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete billing accounts account Id forbidden response has a 5xx status code
func (o *DeleteBillingAccountsAccountIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete billing accounts account Id forbidden response a status code equal to that given
func (o *DeleteBillingAccountsAccountIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete billing accounts account Id forbidden response
func (o *DeleteBillingAccountsAccountIDForbidden) Code() int {
	return 403
}

func (o *DeleteBillingAccountsAccountIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdForbidden %s", 403, payload)
}

func (o *DeleteBillingAccountsAccountIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdForbidden %s", 403, payload)
}

func (o *DeleteBillingAccountsAccountIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteBillingAccountsAccountIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBillingAccountsAccountIDNotFound creates a DeleteBillingAccountsAccountIDNotFound with default headers values
func NewDeleteBillingAccountsAccountIDNotFound() *DeleteBillingAccountsAccountIDNotFound {
	return &DeleteBillingAccountsAccountIDNotFound{}
}

/*
DeleteBillingAccountsAccountIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteBillingAccountsAccountIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this delete billing accounts account Id not found response has a 2xx status code
func (o *DeleteBillingAccountsAccountIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete billing accounts account Id not found response has a 3xx status code
func (o *DeleteBillingAccountsAccountIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete billing accounts account Id not found response has a 4xx status code
func (o *DeleteBillingAccountsAccountIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete billing accounts account Id not found response has a 5xx status code
func (o *DeleteBillingAccountsAccountIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete billing accounts account Id not found response a status code equal to that given
func (o *DeleteBillingAccountsAccountIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete billing accounts account Id not found response
func (o *DeleteBillingAccountsAccountIDNotFound) Code() int {
	return 404
}

func (o *DeleteBillingAccountsAccountIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdNotFound %s", 404, payload)
}

func (o *DeleteBillingAccountsAccountIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /billing/accounts/{accountId}][%d] deleteBillingAccountsAccountIdNotFound %s", 404, payload)
}

func (o *DeleteBillingAccountsAccountIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DeleteBillingAccountsAccountIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
