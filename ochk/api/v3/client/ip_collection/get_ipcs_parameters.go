// Code generated by go-swagger; DO NOT EDIT.

package ip_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetIpcsParams creates a new GetIpcsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetIpcsParams() *GetIpcsParams {
	return &GetIpcsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetIpcsParamsWithTimeout creates a new GetIpcsParams object
// with the ability to set a timeout on a request.
func NewGetIpcsParamsWithTimeout(timeout time.Duration) *GetIpcsParams {
	return &GetIpcsParams{
		timeout: timeout,
	}
}

// NewGetIpcsParamsWithContext creates a new GetIpcsParams object
// with the ability to set a context for a request.
func NewGetIpcsParamsWithContext(ctx context.Context) *GetIpcsParams {
	return &GetIpcsParams{
		Context: ctx,
	}
}

// NewGetIpcsParamsWithHTTPClient creates a new GetIpcsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetIpcsParamsWithHTTPClient(client *http.Client) *GetIpcsParams {
	return &GetIpcsParams{
		HTTPClient: client,
	}
}

/*
GetIpcsParams contains all the parameters to send to the API endpoint

	for the get ipcs operation.

	Typically these are written to a http.Request.
*/
type GetIpcsParams struct {

	// Name.
	Name *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get ipcs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetIpcsParams) WithDefaults() *GetIpcsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get ipcs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetIpcsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get ipcs params
func (o *GetIpcsParams) WithTimeout(timeout time.Duration) *GetIpcsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ipcs params
func (o *GetIpcsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ipcs params
func (o *GetIpcsParams) WithContext(ctx context.Context) *GetIpcsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ipcs params
func (o *GetIpcsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ipcs params
func (o *GetIpcsParams) WithHTTPClient(client *http.Client) *GetIpcsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ipcs params
func (o *GetIpcsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get ipcs params
func (o *GetIpcsParams) WithName(name *string) *GetIpcsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get ipcs params
func (o *GetIpcsParams) SetName(name *string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetIpcsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
