// Code generated by go-swagger; DO NOT EDIT.

package ip_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetIpcsReader is a Reader for the GetIpcs structure.
type GetIpcsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpcsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpcsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIpcsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIpcsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIpcsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipcs] GetIpcs", response, response.Code())
	}
}

// NewGetIpcsOK creates a GetIpcsOK with default headers values
func NewGetIpcsOK() *GetIpcsOK {
	return &GetIpcsOK{}
}

/*
GetIpcsOK describes a response with status code 200, with default header values.

OK
*/
type GetIpcsOK struct {
	Payload *models.ListIPCollectionsResponse
}

// IsSuccess returns true when this get ipcs o k response has a 2xx status code
func (o *GetIpcsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ipcs o k response has a 3xx status code
func (o *GetIpcsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipcs o k response has a 4xx status code
func (o *GetIpcsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ipcs o k response has a 5xx status code
func (o *GetIpcsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipcs o k response a status code equal to that given
func (o *GetIpcsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ipcs o k response
func (o *GetIpcsOK) Code() int {
	return 200
}

func (o *GetIpcsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsOK %s", 200, payload)
}

func (o *GetIpcsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsOK %s", 200, payload)
}

func (o *GetIpcsOK) GetPayload() *models.ListIPCollectionsResponse {
	return o.Payload
}

func (o *GetIpcsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListIPCollectionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpcsBadRequest creates a GetIpcsBadRequest with default headers values
func NewGetIpcsBadRequest() *GetIpcsBadRequest {
	return &GetIpcsBadRequest{}
}

/*
GetIpcsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetIpcsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipcs bad request response has a 2xx status code
func (o *GetIpcsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipcs bad request response has a 3xx status code
func (o *GetIpcsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipcs bad request response has a 4xx status code
func (o *GetIpcsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipcs bad request response has a 5xx status code
func (o *GetIpcsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipcs bad request response a status code equal to that given
func (o *GetIpcsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ipcs bad request response
func (o *GetIpcsBadRequest) Code() int {
	return 400
}

func (o *GetIpcsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsBadRequest %s", 400, payload)
}

func (o *GetIpcsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsBadRequest %s", 400, payload)
}

func (o *GetIpcsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpcsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpcsUnauthorized creates a GetIpcsUnauthorized with default headers values
func NewGetIpcsUnauthorized() *GetIpcsUnauthorized {
	return &GetIpcsUnauthorized{}
}

/*
GetIpcsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIpcsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipcs unauthorized response has a 2xx status code
func (o *GetIpcsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipcs unauthorized response has a 3xx status code
func (o *GetIpcsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipcs unauthorized response has a 4xx status code
func (o *GetIpcsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipcs unauthorized response has a 5xx status code
func (o *GetIpcsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipcs unauthorized response a status code equal to that given
func (o *GetIpcsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ipcs unauthorized response
func (o *GetIpcsUnauthorized) Code() int {
	return 401
}

func (o *GetIpcsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsUnauthorized %s", 401, payload)
}

func (o *GetIpcsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsUnauthorized %s", 401, payload)
}

func (o *GetIpcsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpcsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpcsForbidden creates a GetIpcsForbidden with default headers values
func NewGetIpcsForbidden() *GetIpcsForbidden {
	return &GetIpcsForbidden{}
}

/*
GetIpcsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIpcsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get ipcs forbidden response has a 2xx status code
func (o *GetIpcsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ipcs forbidden response has a 3xx status code
func (o *GetIpcsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ipcs forbidden response has a 4xx status code
func (o *GetIpcsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ipcs forbidden response has a 5xx status code
func (o *GetIpcsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ipcs forbidden response a status code equal to that given
func (o *GetIpcsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ipcs forbidden response
func (o *GetIpcsForbidden) Code() int {
	return 403
}

func (o *GetIpcsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsForbidden %s", 403, payload)
}

func (o *GetIpcsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ipcs][%d] getIpcsForbidden %s", 403, payload)
}

func (o *GetIpcsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetIpcsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
