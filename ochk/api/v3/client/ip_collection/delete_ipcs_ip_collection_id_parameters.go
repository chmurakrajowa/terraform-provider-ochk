// Code generated by go-swagger; DO NOT EDIT.

package ip_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteIpcsIPCollectionIDParams creates a new DeleteIpcsIPCollectionIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteIpcsIPCollectionIDParams() *DeleteIpcsIPCollectionIDParams {
	return &DeleteIpcsIPCollectionIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteIpcsIPCollectionIDParamsWithTimeout creates a new DeleteIpcsIPCollectionIDParams object
// with the ability to set a timeout on a request.
func NewDeleteIpcsIPCollectionIDParamsWithTimeout(timeout time.Duration) *DeleteIpcsIPCollectionIDParams {
	return &DeleteIpcsIPCollectionIDParams{
		timeout: timeout,
	}
}

// NewDeleteIpcsIPCollectionIDParamsWithContext creates a new DeleteIpcsIPCollectionIDParams object
// with the ability to set a context for a request.
func NewDeleteIpcsIPCollectionIDParamsWithContext(ctx context.Context) *DeleteIpcsIPCollectionIDParams {
	return &DeleteIpcsIPCollectionIDParams{
		Context: ctx,
	}
}

// NewDeleteIpcsIPCollectionIDParamsWithHTTPClient creates a new DeleteIpcsIPCollectionIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteIpcsIPCollectionIDParamsWithHTTPClient(client *http.Client) *DeleteIpcsIPCollectionIDParams {
	return &DeleteIpcsIPCollectionIDParams{
		HTTPClient: client,
	}
}

/*
DeleteIpcsIPCollectionIDParams contains all the parameters to send to the API endpoint

	for the delete ipcs IP collection ID operation.

	Typically these are written to a http.Request.
*/
type DeleteIpcsIPCollectionIDParams struct {

	// Force.
	Force *bool

	// IPCollectionID.
	//
	// Format: uuid
	IPCollectionID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete ipcs IP collection ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteIpcsIPCollectionIDParams) WithDefaults() *DeleteIpcsIPCollectionIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete ipcs IP collection ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteIpcsIPCollectionIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) WithTimeout(timeout time.Duration) *DeleteIpcsIPCollectionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) WithContext(ctx context.Context) *DeleteIpcsIPCollectionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) WithHTTPClient(client *http.Client) *DeleteIpcsIPCollectionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForce adds the force to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) WithForce(force *bool) *DeleteIpcsIPCollectionIDParams {
	o.SetForce(force)
	return o
}

// SetForce adds the force to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) SetForce(force *bool) {
	o.Force = force
}

// WithIPCollectionID adds the iPCollectionID to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) WithIPCollectionID(iPCollectionID strfmt.UUID) *DeleteIpcsIPCollectionIDParams {
	o.SetIPCollectionID(iPCollectionID)
	return o
}

// SetIPCollectionID adds the ipCollectionId to the delete ipcs IP collection ID params
func (o *DeleteIpcsIPCollectionIDParams) SetIPCollectionID(iPCollectionID strfmt.UUID) {
	o.IPCollectionID = iPCollectionID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteIpcsIPCollectionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Force != nil {

		// query param force
		var qrForce bool

		if o.Force != nil {
			qrForce = *o.Force
		}
		qForce := swag.FormatBool(qrForce)
		if qForce != "" {

			if err := r.SetQueryParam("force", qForce); err != nil {
				return err
			}
		}
	}

	// path param ipCollectionId
	if err := r.SetPathParam("ipCollectionId", o.IPCollectionID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
