// Code generated by go-swagger; DO NOT EDIT.

package billing_vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/api/v3/models"
)

// GetBillingAccountsAccountIDReportsBillingPeriodIDVMReader is a Reader for the GetBillingAccountsAccountIDReportsBillingPeriodIDVM structure.
type GetBillingAccountsAccountIDReportsBillingPeriodIDVMReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm] GetBillingAccountsAccountIDReportsBillingPeriodIDVM", response, response.Code())
	}
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMOK creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMOK() *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK describes a response with status code 200, with default header values.

OK
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK struct {
	Payload *models.GenerateBillingReportResponse
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id Vm o k response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id Vm o k response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id Vm o k response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id Vm o k response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id Vm o k response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get billing accounts account Id reports billing period Id Vm o k response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) Code() int {
	return 200
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmOK %s", 200, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmOK %s", 200, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) GetPayload() *models.GenerateBillingReportResponse {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenerateBillingReportResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest() *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id Vm bad request response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id Vm bad request response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id Vm bad request response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id Vm bad request response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id Vm bad request response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get billing accounts account Id reports billing period Id Vm bad request response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) Code() int {
	return 400
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmBadRequest %s", 400, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized() *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id Vm unauthorized response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id Vm unauthorized response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id Vm unauthorized response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id Vm unauthorized response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id Vm unauthorized response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get billing accounts account Id reports billing period Id Vm unauthorized response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) Code() int {
	return 401
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmUnauthorized %s", 401, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden creates a GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden with default headers values
func NewGetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden() *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden {
	return &GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden{}
}

/*
GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this get billing accounts account Id reports billing period Id Vm forbidden response has a 2xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing accounts account Id reports billing period Id Vm forbidden response has a 3xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing accounts account Id reports billing period Id Vm forbidden response has a 4xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing accounts account Id reports billing period Id Vm forbidden response has a 5xx status code
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing accounts account Id reports billing period Id Vm forbidden response a status code equal to that given
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get billing accounts account Id reports billing period Id Vm forbidden response
func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) Code() int {
	return 403
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmForbidden %s", 403, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /billing/accounts/{accountId}/reports/{billingPeriodId}/vm][%d] getBillingAccountsAccountIdReportsBillingPeriodIdVmForbidden %s", 403, payload)
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetBillingAccountsAccountIDReportsBillingPeriodIDVMForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
