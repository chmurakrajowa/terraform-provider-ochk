// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DiskInstance disk instance
//
// swagger:model DiskInstance
type DiskInstance struct {

	// capacity k b
	CapacityKB int64 `json:"capacityKB,omitempty"`

	// controller key
	ControllerKey int32 `json:"controllerKey,omitempty"`

	// disk Id
	// Format: uuid
	DiskID strfmt.UUID `json:"diskId,omitempty"`

	// external Id
	ExternalID string `json:"externalId,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// unit number
	UnitNumber int32 `json:"unitNumber,omitempty"`
}

// Validate validates this disk instance
func (m *DiskInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDiskID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DiskInstance) validateDiskID(formats strfmt.Registry) error {
	if swag.IsZero(m.DiskID) { // not required
		return nil
	}

	if err := validate.FormatOf("diskId", "body", "uuid", m.DiskID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this disk instance based on context it is used
func (m *DiskInstance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DiskInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DiskInstance) UnmarshalBinary(b []byte) error {
	var res DiskInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
