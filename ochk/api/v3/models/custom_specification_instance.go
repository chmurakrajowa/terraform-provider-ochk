// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomSpecificationInstance custom specification instance
//
// swagger:model CustomSpecificationInstance
type CustomSpecificationInstance struct {

	// custom specification Id
	// Format: uuid
	CustomSpecificationID strfmt.UUID `json:"customSpecificationId,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`
}

// Validate validates this custom specification instance
func (m *CustomSpecificationInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomSpecificationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomSpecificationInstance) validateCustomSpecificationID(formats strfmt.Registry) error {
	if swag.IsZero(m.CustomSpecificationID) { // not required
		return nil
	}

	if err := validate.FormatOf("customSpecificationId", "body", "uuid", m.CustomSpecificationID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this custom specification instance based on context it is used
func (m *CustomSpecificationInstance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustomSpecificationInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomSpecificationInstance) UnmarshalBinary(b []byte) error {
	var res CustomSpecificationInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
