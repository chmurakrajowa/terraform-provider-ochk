// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VirtualMachineResourceProfile virtual machine resource profile
//
// swagger:model VirtualMachineResourceProfile
type VirtualMachineResourceProfile string

func NewVirtualMachineResourceProfile(value VirtualMachineResourceProfile) *VirtualMachineResourceProfile {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VirtualMachineResourceProfile.
func (m VirtualMachineResourceProfile) Pointer() *VirtualMachineResourceProfile {
	return &m
}

const (

	// VirtualMachineResourceProfileSIZEXS captures enum value "SIZE_XS"
	VirtualMachineResourceProfileSIZEXS VirtualMachineResourceProfile = "SIZE_XS"

	// VirtualMachineResourceProfileSIZES captures enum value "SIZE_S"
	VirtualMachineResourceProfileSIZES VirtualMachineResourceProfile = "SIZE_S"

	// VirtualMachineResourceProfileSIZEM captures enum value "SIZE_M"
	VirtualMachineResourceProfileSIZEM VirtualMachineResourceProfile = "SIZE_M"

	// VirtualMachineResourceProfileSIZEL captures enum value "SIZE_L"
	VirtualMachineResourceProfileSIZEL VirtualMachineResourceProfile = "SIZE_L"

	// VirtualMachineResourceProfileSIZEXL captures enum value "SIZE_XL"
	VirtualMachineResourceProfileSIZEXL VirtualMachineResourceProfile = "SIZE_XL"

	// VirtualMachineResourceProfileCUSTOM captures enum value "CUSTOM"
	VirtualMachineResourceProfileCUSTOM VirtualMachineResourceProfile = "CUSTOM"
)

// for schema
var virtualMachineResourceProfileEnum []interface{}

func init() {
	var res []VirtualMachineResourceProfile
	if err := json.Unmarshal([]byte(`["SIZE_XS","SIZE_S","SIZE_M","SIZE_L","SIZE_XL","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		virtualMachineResourceProfileEnum = append(virtualMachineResourceProfileEnum, v)
	}
}

func (m VirtualMachineResourceProfile) validateVirtualMachineResourceProfileEnum(path, location string, value VirtualMachineResourceProfile) error {
	if err := validate.EnumCase(path, location, value, virtualMachineResourceProfileEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this virtual machine resource profile
func (m VirtualMachineResourceProfile) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVirtualMachineResourceProfileEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this virtual machine resource profile based on context it is used
func (m VirtualMachineResourceProfile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
