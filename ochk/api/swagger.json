{
  "swagger": "2.0",
  "info": {
    "title": "Platforma OChK - Proxy API",
    "description": "Platforma OChK - Proxy API",
    "contact": {
      "name": "OChK",
      "url": "https://www.ochk.cloud",
      "email": "pomoc@ochk.pl"
    },
    "version": "v1"
  },
  "paths": {
    "/billing/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "List accounts",
        "description": "List accounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create account",
        "description": "Create account",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AccountInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account",
        "description": "Get account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update account",
        "description": "Update account",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AccountInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete account",
        "description": "Delete account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/authentik/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate authorization token",
        "description": "Generate authorization token",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AuthentikTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthentikTokenResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipam/ipaddress/public/available": {
      "get": {
        "tags": [
          "AvailablePublicIp"
        ],
        "summary": "Get Available public IP",
        "description": "Get Available public IP",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailablePublicIpGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/backups/plans": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List backup plans",
        "description": "List backup plans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "backupPlanName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListBackupPlansResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/backups/plans/{backupPlanId}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get backup plan",
        "description": "Get backup plan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "backupPlanId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBackupPlanResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/backups/plans/{backupPlanId}/lists": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List backup lists",
        "description": "List backup lists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "backupPlanId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "backupListName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListBackupListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/backups/plans/{backupPlanId}/lists/{backupListId}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get backup list get",
        "description": "Get backup list get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "backupPlanId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "backupListId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBackupListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/alarm-definition": {
      "get": {
        "tags": [
          "BillingAlarmDefinition"
        ],
        "summary": "List billing alarm definitions",
        "description": "List billing alarm definitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "accountId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "tagId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "hideDetails",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListBillingAlarmDefinitionsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillingAlarmDefinition"
        ],
        "summary": "Create billing alarm definition",
        "description": "Create billing alarm definition",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BillingAlarmDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateBillingAlarmDefinitionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/alarm-definition/{alarmDefinitionId}": {
      "get": {
        "tags": [
          "BillingAlarmDefinition"
        ],
        "summary": "Get billing alarm definition",
        "description": "Get billing alarm definition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alarmDefinitionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBillingAlarmDefinitionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillingAlarmDefinition"
        ],
        "summary": "Update billing alarm definition",
        "description": "Update billing alarm definition",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alarmDefinitionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BillingAlarmDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateBillingAlarmDefinitionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BillingAlarmDefinition"
        ],
        "summary": "Delete billing alarm definition",
        "description": "Delete billing alarm definition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alarmDefinitionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteBillingAlarmDefinitionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/{accountId}/reports/{billingPeriodId}/kms": {
      "get": {
        "tags": [
          "BillingKms"
        ],
        "summary": "Generate KMS billing report",
        "description": "Generate KMS billing report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "billingPeriodId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenerateKmsBillingReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/billing-periods": {
      "get": {
        "tags": [
          "BillingPeriod"
        ],
        "summary": "List billing periods",
        "description": "List billing periods",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OldListBillingPeriodResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/billing-periods/{billingPeriodId}": {
      "get": {
        "tags": [
          "BillingPeriod"
        ],
        "summary": "Get billing periods",
        "description": "Get billing periods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPeriodId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBillingPeriodResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/{accountId}/reports/{billingPeriodId}/pip": {
      "get": {
        "tags": [
          "BillingPip"
        ],
        "summary": "Generate PIP billing report",
        "description": "Generate PIP billing report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "billingPeriodId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeneratePIPBillingReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/{accountId}/reports/{billingPeriodId}/vm": {
      "get": {
        "tags": [
          "BillingVm"
        ],
        "summary": "Generate virtual machine billing report",
        "description": "Generate virtual machine billing report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "billingPeriodId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenerateBillingReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/billing/accounts/{accountId}/reports/{billingPeriodId}/vrf": {
      "get": {
        "tags": [
          "BillingVrf"
        ],
        "summary": "Generate VRF billing report",
        "description": "Generate VRF billing report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "billingPeriodId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenerateVRFBillingReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/custom-services": {
      "get": {
        "tags": [
          "CustomServices"
        ],
        "summary": "List custom services",
        "description": "List custom services",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListCustomServicesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomServices"
        ],
        "summary": "Create custom service",
        "description": "Create custom service",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CustomServiceInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateCustomServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/custom-services/{serviceId}": {
      "get": {
        "tags": [
          "CustomServices"
        ],
        "summary": "Get custom service",
        "description": "Get custom service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetCustomServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomServices"
        ],
        "summary": "Update custom service",
        "description": "Update custom service",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CustomServiceInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateCustomServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomServices"
        ],
        "summary": "Delete custom service",
        "description": "Delete custom service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteCustomServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/default-services": {
      "get": {
        "tags": [
          "DefaultServices"
        ],
        "summary": "List default services",
        "description": "List default services",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListServicesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/default-services/{serviceId}": {
      "get": {
        "tags": [
          "DefaultServices"
        ],
        "summary": "Get default service",
        "description": "Get default service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "List deployment objects",
        "description": "List deployment objects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDeploymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Get deployment object",
        "description": "Get deployment object",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDeploymentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers/{routerId}/rules/e-w": {
      "get": {
        "tags": [
          "DfwRule"
        ],
        "summary": "List E-W Rules",
        "description": "List E-W Rules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDfwRulesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DfwRule"
        ],
        "summary": "Create E-W Rule",
        "description": "Create E-W Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DfwRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateDfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers/{routerId}/rules/e-w/{ruleId}": {
      "get": {
        "tags": [
          "DfwRule"
        ],
        "summary": "Get E-W Rule",
        "description": "Get E-W Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DfwRule"
        ],
        "summary": "Update E-W Rule",
        "description": "Update E-W Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DfwRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateDfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DfwRule"
        ],
        "summary": "Delete E-W Rule",
        "description": "Delete E-W Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteDfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/projects/{projectId}/osc/security-groups/{securityGroupId}/firewall": {
      "get": {
        "tags": [
          "FirewallRule"
        ],
        "summary": "List firewall rules (OSC)",
        "description": "List firewall rules (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "securityGroupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListFirewallRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FirewallRule"
        ],
        "summary": "Create firewall rule (OSC)",
        "description": "Create firewall rule (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "securityGroupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateFirewallRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/projects/{projectId}/osc/security-groups/{securityGroupId}/firewall/{ruleId}": {
      "get": {
        "tags": [
          "FirewallRule"
        ],
        "summary": "Get firewall rule (OSC)",
        "description": "Get firewall rule (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "securityGroupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFirewallRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FirewallRule"
        ],
        "summary": "Update firewall rule (OSC)",
        "description": "Update firewall rule (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "securityGroupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateFirewallRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRule"
        ],
        "summary": "Delete firewall rule (OSC)",
        "description": "Delete firewall rule (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "securityGroupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteFirewallRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/floating-ips": {
      "get": {
        "tags": [
          "FloatingIp"
        ],
        "summary": "List floating ips (OSC)",
        "description": "List floating ips (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListFloatingIpResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FloatingIp"
        ],
        "summary": "Create floating ip (OSC)",
        "description": "Create floating ip (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FloatingIp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateFloatingIpResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/floating-ips/{floatingIpId}": {
      "get": {
        "tags": [
          "FloatingIp"
        ],
        "summary": "Get floating ip (OSC)",
        "description": "Get floating ip (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFloatingIpResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FloatingIp"
        ],
        "summary": "Update firewall rule (OSC)",
        "description": "Update firewall rule (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FloatingIp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateFloatingIpResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FloatingIp"
        ],
        "summary": "Delete firewall rule (OSC)",
        "description": "Delete firewall rule (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteFloatingIpResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/floating-ips-vms": {
      "get": {
        "tags": [
          "FloatingIpVms"
        ],
        "summary": "List floating ips vm (OSC)",
        "description": "List floating ips vm (OSC)",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPortFwdVmResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/folder/{projectId}": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "List folders",
        "description": "List folders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "folderPath",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FolderListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/folder/{projectId}/{id}": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get folder",
        "description": "Get folder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FolderGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers/{routerId}/rules/s-n": {
      "get": {
        "tags": [
          "GfwRule"
        ],
        "summary": "List S-N Rules",
        "description": "List S-N Rules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListGfwRulesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GfwRule"
        ],
        "summary": "Create S-N Rule",
        "description": "Create S-N Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GfwRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateGfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers/{routerId}/rules/s-n/{ruleId}": {
      "get": {
        "tags": [
          "GfwRule"
        ],
        "summary": "Get S-N Rule",
        "description": "Get S-N Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetGfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GfwRule"
        ],
        "summary": "Update S-N Rule",
        "description": "Update S-N Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GfwRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateGfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GfwRule"
        ],
        "summary": "Delete S-N Rule",
        "description": "Delete S-N Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteGfwRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v1/healthcheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetHealthCheckResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/identification/platform-type": {
      "get": {
        "tags": [
          "Identification"
        ],
        "summary": "Get platform type",
        "description": "Get platform type",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPlatformTypeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipcs": {
      "get": {
        "tags": [
          "IpCollection"
        ],
        "summary": "List IP Collections",
        "description": "List IP Collections",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIpCollectionsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "IpCollection"
        ],
        "summary": "Create IP Collection",
        "description": "Create IP Collection",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateIpCollectionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipcs/{ipCollectionId}": {
      "get": {
        "tags": [
          "IpCollection"
        ],
        "summary": "Get IP Collection",
        "description": "Get IP Collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipCollectionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetIpCollectionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "IpCollection"
        ],
        "summary": "Update IP Collection",
        "description": "Update IP Collection",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipCollectionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateIpCollectionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IpCollection"
        ],
        "summary": "Delete IP Collection",
        "description": "Delete IP Collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipCollectionId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "force",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteIpCollectionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipam/services": {
      "get": {
        "tags": [
          "IpamService"
        ],
        "summary": "List IPAM services",
        "description": "List IPAM services",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIPAMServicesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipam/services/{serviceId}": {
      "get": {
        "tags": [
          "IpamService"
        ],
        "summary": "Get IPAM service",
        "description": "Get IPAM service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetIPAMServiceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key": {
      "get": {
        "tags": [
          "Key"
        ],
        "summary": "List KMS Keys",
        "description": "List KMS Keys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Key"
        ],
        "summary": "Create KMS Key",
        "description": "Create KMS Key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateKmsKeyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key/{id}": {
      "get": {
        "tags": [
          "Key"
        ],
        "summary": "Get KMS Key",
        "description": "Get KMS Key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Key"
        ],
        "summary": "Delete KMS Key",
        "description": "Delete KMS Key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteKmsKeyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key/import": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "Import KMS Key",
        "description": "Import KMS Key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyImport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportKmsKeyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key/{id}/revoke": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "Revoke KMS Key",
        "description": "Revoke KMS Key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyRevocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RevokeKmsKeyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key/{id}/versions": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "New KMS Key version",
        "description": "New KMS Key version",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyNewVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateNewKmsKeyVersionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/key/{id}/export": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "Export KMS Key",
        "description": "Export KMS Key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyExport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExportKmsKeyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/schedule/{id}": {
      "get": {
        "tags": [
          "KeySchedule"
        ],
        "summary": "Get key rotation schedule (KMS)",
        "description": "Get key rotation schedule (KMS)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyRotationScheduleGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "KeySchedule"
        ],
        "summary": "Update key rotation schedule (KMS)",
        "description": "Update key rotation schedule (KMS)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyRotationSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateKeyRotationScheduleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KeySchedule"
        ],
        "summary": "Delete key rotation schedule (KMS)",
        "description": "Delete key rotation schedule (KMS)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteKeyRotationScheduleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/kms/schedule": {
      "put": {
        "tags": [
          "KeySchedule"
        ],
        "summary": "Create key rotation schedule (KMS)",
        "description": "Create key rotation schedule (KMS)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KeyRotationSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateKeyRotationScheduleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/categories/{logCategoryId}/generate": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Get logs",
        "description": "Get logs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "dataSize",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "lastIndex",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/categories/{logCategoryId}/generatebydsl": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Get logs by DSL query",
        "description": "Get logs by DSL query",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "dataSize",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/categories": {
      "get": {
        "tags": [
          "LogCategory"
        ],
        "summary": "List log categories",
        "description": "List log categories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "logCategoryName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListLogCategoriesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/categories/{logCategoryId}": {
      "get": {
        "tags": [
          "LogCategory"
        ],
        "summary": "Get log category",
        "description": "Get log category",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogCategoryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LogCategory"
        ],
        "summary": "Update log category",
        "description": "Update log category",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateLogCategoriesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/user/categories": {
      "get": {
        "tags": [
          "LogCategoryUser"
        ],
        "summary": "List logs categories for user",
        "description": "List logs categories for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "logCategoryName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListLogCategoriesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/user/categories/{logCategoryId}": {
      "get": {
        "tags": [
          "LogCategoryUser"
        ],
        "summary": "Get log category for user",
        "description": "Get log category for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogCategoryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/stats/{logCategoryId}": {
      "post": {
        "tags": [
          "LogStats"
        ],
        "summary": "Get log stats per category",
        "description": "Get log stats per category",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogCategoryStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/stats": {
      "post": {
        "tags": [
          "LogStats"
        ],
        "summary": "Get logs stats",
        "description": "Get logs stats",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/stats/user/{logCategoryId}": {
      "post": {
        "tags": [
          "LogStatsUser"
        ],
        "summary": "Get log stats per category",
        "description": "Get log stats per category",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogCategoryStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/stats/user": {
      "post": {
        "tags": [
          "LogStatsUser"
        ],
        "summary": "Get logs stats",
        "description": "Get logs stats",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/user/categories/{logCategoryId}/generate": {
      "post": {
        "tags": [
          "LogUser"
        ],
        "summary": "Get logs",
        "description": "Get logs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "dataSize",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "lastIndex",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/log/user/categories/{logCategoryId}/generatebydsl": {
      "post": {
        "tags": [
          "LogUser"
        ],
        "summary": "Get logs by DSL query",
        "description": "Get logs by DSL query",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logCategoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "dataSize",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetLogsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/authentik/logout": {
      "post": {
        "tags": [
          "Logout"
        ],
        "summary": "Logout token",
        "description": "Logout token",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/nat/rules": {
      "get": {
        "tags": [
          "NatRule"
        ],
        "summary": "List NAT Rules",
        "description": "List NAT Rules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListNATRulesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NatRule"
        ],
        "summary": "Create NAT Rule",
        "description": "Create NAT Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NATRuleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateNATRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/nat/rules/{ruleId}": {
      "get": {
        "tags": [
          "NatRule"
        ],
        "summary": "Get NAT Rule",
        "description": "Get NAT Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetNATRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NatRule"
        ],
        "summary": "Update NAT Rule",
        "description": "Update NAT Rule",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NATRuleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateNATRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NatRule"
        ],
        "summary": "Delete NAT Rule",
        "description": "Delete NAT Rule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteNATRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/floating-ips/{floatingIpId}/port-forwardings": {
      "get": {
        "tags": [
          "PortForwarding"
        ],
        "summary": "List floating ips (OSC)",
        "description": "List floating ips (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPortForwardingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PortForwarding"
        ],
        "summary": "Create floating ip (OSC)",
        "description": "Create floating ip (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PortForwarding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePortForwardingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/floating-ips/{floatingIpId}/port-forwardings/{portForwardingId}": {
      "get": {
        "tags": [
          "PortForwarding"
        ],
        "summary": "Get floating ip (OSC)",
        "description": "Get floating ip (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "portForwardingId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPortForwardingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PortForwarding"
        ],
        "summary": "Update firewall rule (OSC)",
        "description": "Update firewall rule (OSC)",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "portForwardingId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PortForwarding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatePortForwardingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PortForwarding"
        ],
        "summary": "Delete firewall rule (OSC)",
        "description": "Delete firewall rule (OSC)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "floatingIpId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "portForwardingId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletePortForwardingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List projects",
        "description": "List projects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListProjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Create project",
        "description": "Create project",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ProjectInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project",
        "description": "Get project",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project",
        "description": "Update project",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ProjectInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateProjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project",
        "description": "Delete project",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteProjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipam/ipaddress/public/allocation": {
      "get": {
        "tags": [
          "PublicIp"
        ],
        "summary": "List Public IP allocations",
        "description": "List Public IP allocations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ipAddress",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPublicIpAllocationsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PublicIp"
        ],
        "summary": "Create Public IP allocation",
        "description": "Create Public IP allocation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PublicIpAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePublicIpAllocationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/ipam/ipaddress/public/allocation/{allocationId}": {
      "get": {
        "tags": [
          "PublicIp"
        ],
        "summary": "Get Public IP allocation",
        "description": "Get Public IP allocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "allocationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPublicIpAllocationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PublicIp"
        ],
        "summary": "Update Public IP allocation",
        "description": "Update Public IP allocation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "allocationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PublicIpAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatePublicIpAllocationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicIp"
        ],
        "summary": "Delete Public IP allocation",
        "description": "Delete Public IP allocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "allocationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletePublicIpAllocationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v1/readiness": {
      "get": {
        "tags": [
          "Readiness"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetHealthCheckResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/request": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "List requests",
        "description": "List requests",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListRequestsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/request/{requestId}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get request",
        "description": "Get request",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "List routers",
        "description": "List routers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListRoutersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Router"
        ],
        "summary": "Create router VRF",
        "description": "Create router VRF",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateRouterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Router"
        ],
        "summary": "Create router",
        "description": "Create router",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateRouterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/routers/{routerId}": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "Get router",
        "description": "Get router",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRouterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Router"
        ],
        "summary": "Update router",
        "description": "Update router",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRouterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Router"
        ],
        "summary": "Delete router",
        "description": "Delete router",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routerId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteRouterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/security-groups": {
      "get": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "List security groups",
        "description": "List security groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSecurityGroupsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Create security group",
        "description": "Create security group",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SecurityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateSecurityGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/security-groups/{groupId}": {
      "get": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Get security group",
        "description": "Get security group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetSecurityGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Update security group",
        "description": "Update security group",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SecurityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateSecurityGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Delete security group",
        "description": "Delete security group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "force",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteSecurityGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/network/security-groups/waiting-room/import": {
      "post": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Import security group",
        "description": "Import security group",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SecurityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportSecurityGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List tags",
        "description": "List tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tagValue",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTagsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Create tag",
        "description": "Create tag",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/tags/{tagId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get tag",
        "description": "Get tag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update tag",
        "description": "Update tag",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "updateMembers",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete tag",
        "description": "Delete tag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines": {
      "get": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "List virtual machines",
        "description": "List virtual machines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListVirtualMachinesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Create virtual machine",
        "description": "Create virtual machine",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}": {
      "get": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Get virtual machine",
        "description": "Get virtual machine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Update virtual machine",
        "description": "Update virtual machine",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Delete virtual machine",
        "description": "Delete virtual machine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/console": {
      "post": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Get virtual machine console",
        "description": "Get virtual machine console",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetVirtualMachineTicketResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/reset": {
      "post": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Reset virtual machine",
        "description": "Reset virtual machine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResetVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/waiting-room/import": {
      "post": {
        "tags": [
          "VirtualMachine"
        ],
        "summary": "Import virtual machine",
        "description": "Import virtual machine",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachineImport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportVirtualMachineResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/snapshots": {
      "get": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "List virtual machine snapshots",
        "description": "List virtual machine snapshots",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSnapshotsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Create virtual machine snapshot",
        "description": "Create virtual machine snapshot",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SnapshotInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateSnapshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Get virtual machine snapshot",
        "description": "Get virtual machine snapshot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetSnapshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Update virtual machine snapshot",
        "description": "Update virtual machine snapshot",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SnapshotInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateSnapshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Delete virtual machine snapshot",
        "description": "Delete virtual machine snapshot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteSnapshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/removeAllSnapshots": {
      "post": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Delete virtual machine snapshot",
        "description": "Delete virtual machine snapshot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RemoveAllSnapshotsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/vcs/virtual-machines/{virtualMachineId}/snapshots/{snapshotId}/revert": {
      "post": {
        "tags": [
          "VirtualMachineSnapshot"
        ],
        "summary": "Revert virtual machine snapshot",
        "description": "Revert virtual machine snapshot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualMachineId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RevertSnapshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/networks": {
      "get": {
        "tags": [
          "VirtualNetwork"
        ],
        "summary": "List virtual networks",
        "description": "List virtual networks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListVirtualNetworksResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetwork"
        ],
        "summary": "Create virtual network",
        "description": "Create virtual network",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateVirtualNetworkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/networks/{virtualNetworkId}": {
      "get": {
        "tags": [
          "VirtualNetwork"
        ],
        "summary": "Get virtual network",
        "description": "Get virtual network",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualNetworkId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetVirtualNetworkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetwork"
        ],
        "summary": "Update virtual network",
        "description": "Update virtual network",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualNetworkId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateVirtualNetworkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetwork"
        ],
        "summary": "Delete virtual network",
        "description": "Delete virtual network",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtualNetworkId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteVirtualNetworkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountInstance": {
      "type": "object",
      "properties": {
        "accountId": {
          "format": "uuid",
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountDescription": {
          "type": "string"
        },
        "discount": {
          "format": "float",
          "type": "number"
        },
        "alarms": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "cost": {
          "format": "float",
          "type": "number"
        },
        "costWithDiscount": {
          "format": "float",
          "type": "number"
        },
        "estimatedCost": {
          "format": "float",
          "type": "number"
        },
        "estimatedCostWithDiscount": {
          "format": "float",
          "type": "number"
        },
        "readOnly": {
          "type": "boolean"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountProjectInstance"
          }
        },
        "isDeleted": {
          "type": "boolean"
        },
        "scoringConst": {
          "format": "float",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "AccountProjectInstance": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "limitEnabled": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "cpuReserved": {
          "format": "int64",
          "type": "integer"
        },
        "memoryReservedSizeMB": {
          "format": "int64",
          "type": "integer"
        },
        "storageReservedSizeGB": {
          "format": "int64",
          "type": "integer"
        },
        "vmCount": {
          "format": "int64",
          "type": "integer"
        },
        "cpuAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "ramAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "storageAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "cost": {
          "format": "float",
          "type": "number"
        },
        "estimatedMonthlyCost": {
          "format": "float",
          "type": "number"
        },
        "vrfId": {
          "format": "uuid",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Action": {
      "enum": [
        "ALLOW",
        "REJECT",
        "DROP"
      ],
      "type": "string"
    },
    "AllocationPool": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AttributeInstance": {
      "type": "object",
      "properties": {
        "attributeId": {
          "format": "int32",
          "type": "integer"
        },
        "dataType": {
          "type": "string"
        },
        "attributeKey": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isALGType": {
          "type": "boolean"
        },
        "attributeValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeValueInstance"
          }
        },
        "subAttributeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAttributeInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "AttributeValueInstance": {
      "type": "object",
      "properties": {
        "valueId": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AuthentikTokenRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AuthentikTokenResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AvailablePublicIpGetResponse": {
      "type": "object",
      "properties": {
        "publicIpAddress": {
          "$ref": "#/definitions/PublicIpAddress"
        }
      },
      "additionalProperties": false
    },
    "BackupList": {
      "type": "object",
      "properties": {
        "backupListId": {
          "format": "uuid",
          "type": "string"
        },
        "backupListCode": {
          "type": "string"
        },
        "backupListName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BackupPlan": {
      "type": "object",
      "properties": {
        "backupPlanId": {
          "format": "uuid",
          "type": "string"
        },
        "backupPlanName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingAlarmDefinition": {
      "type": "object",
      "properties": {
        "alarmDefinitionId": {
          "format": "uuid",
          "type": "string"
        },
        "alarmDefinitionName": {
          "type": "string"
        },
        "alarmDefinitionDescription": {
          "type": "string"
        },
        "alarmEnabled": {
          "type": "boolean"
        },
        "cpuAllocationAlarmEnabled": {
          "type": "boolean"
        },
        "ramAllocationAlarmEnabled": {
          "type": "boolean"
        },
        "storageAllocationAlarmEnabled": {
          "type": "boolean"
        },
        "cpuAllocationThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "ramAllocationThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "storageAllocationThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "cpuAllocationOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "ramAllocationOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "storageAllocationOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "cpuUsageAlarmEnabled": {
          "type": "boolean"
        },
        "ramUsageAlarmEnabled": {
          "type": "boolean"
        },
        "storageUsageAlarmEnabled": {
          "type": "boolean"
        },
        "totalCostUsageAlarmEnabled": {
          "type": "boolean"
        },
        "cpuUsageThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "ramUsageThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "storageUsageThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "totalCostThresholdValue": {
          "format": "float",
          "type": "number"
        },
        "cpuUsageOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "ramUsageOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "storageUsageOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "totalCostUsageOperator": {
          "$ref": "#/definitions/BillingAlarmOperator"
        },
        "allCriteriaMustBeMeet": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "userInstanceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInstance"
          }
        },
        "groupInstanceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupInstance"
          }
        },
        "accountId": {
          "format": "uuid",
          "type": "string"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "tagId": {
          "format": "int32",
          "type": "integer"
        },
        "sendNotification": {
          "type": "boolean"
        },
        "sendEMailNotification": {
          "type": "boolean"
        },
        "blockResourceDeployment": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "BillingAlarmOperator": {
      "enum": [
        "HIGHER",
        "LOWER",
        "EQUALS"
      ],
      "type": "string"
    },
    "BillingPeriodInstance": {
      "type": "object",
      "properties": {
        "periodId": {
          "format": "int32",
          "type": "integer"
        },
        "monthN": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComputeResourceInstance": {
      "type": "object",
      "properties": {
        "computerResourceId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "computeResource": {
          "type": "string"
        },
        "numCpuCores": {
          "format": "int64",
          "type": "integer"
        },
        "numCpuThreads": {
          "format": "int64",
          "type": "integer"
        },
        "numHosts": {
          "format": "int64",
          "type": "integer"
        },
        "numEffectiveHosts": {
          "format": "int64",
          "type": "integer"
        },
        "totalCpu": {
          "format": "int64",
          "type": "integer"
        },
        "totalMemory": {
          "format": "int64",
          "type": "integer"
        },
        "effectiveCpu": {
          "format": "int64",
          "type": "integer"
        },
        "effectiveMemory": {
          "format": "int64",
          "type": "integer"
        },
        "vraId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComputeSiteInstance": {
      "type": "object",
      "properties": {
        "computeSiteId": {
          "format": "uuid",
          "type": "string"
        },
        "computeSiteName": {
          "type": "string"
        },
        "computeSiteDescription": {
          "type": "string"
        },
        "computeSiteAddress": {
          "type": "string"
        },
        "internalAddress": {
          "type": "string"
        },
        "computeSiteType": {
          "$ref": "#/definitions/ComputeSiteType"
        },
        "isDefaultForAll": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ComputeSiteType": {
      "enum": [
        "VCenter",
        "OpenStack"
      ],
      "type": "string"
    },
    "ConnectionStatus": {
      "enum": [
        "ok",
        "recoverableError",
        "unrecoverableError",
        "untried"
      ],
      "type": "string"
    },
    "ContextProfileInstance": {
      "type": "object",
      "properties": {
        "contextProfileId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "protection": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "revision": {
          "format": "int64",
          "type": "integer"
        },
        "schemaValue": {
          "type": "string"
        },
        "systemOwned": {
          "type": "boolean"
        },
        "attributeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "CreateAccountResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "accountInstance": {
          "$ref": "#/definitions/AccountInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateBillingAlarmDefinitionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingAlarmDefinition": {
          "$ref": "#/definitions/BillingAlarmDefinition"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateCustomServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "customServiceInstance": {
          "$ref": "#/definitions/CustomServiceInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateDfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "dfwRule": {
          "$ref": "#/definitions/DfwRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateFirewallRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "firewallRule": {
          "$ref": "#/definitions/FirewallRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateFloatingIpResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "floatingIp": {
          "$ref": "#/definitions/FloatingIp"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateGfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "gfwRule": {
          "$ref": "#/definitions/GfwRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateIpCollectionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ipCollection": {
          "$ref": "#/definitions/IpCollection"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateKeyRotationScheduleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyRotationSchedule": {
          "$ref": "#/definitions/KeyRotationSchedule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateKmsKeyResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateNATRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "natRuleInstance": {
          "$ref": "#/definitions/NATRuleInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateNewKmsKeyVersionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreatePortForwardingResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "portForwarding": {
          "$ref": "#/definitions/PortForwarding"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateProjectResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "projectInstance": {
          "$ref": "#/definitions/ProjectInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreatePublicIpAllocationResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "publicIpAllocation": {
          "$ref": "#/definitions/PublicIpAllocation"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateRouterResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "routerInstance": {
          "$ref": "#/definitions/RouterInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateSnapshotResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "snapshotInstance": {
          "$ref": "#/definitions/SnapshotInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateTagResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "tag": {
          "$ref": "#/definitions/Tag"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualMachineInstance": {
          "$ref": "#/definitions/VirtualMachineInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CreateVirtualNetworkResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualNetworkInstance": {
          "$ref": "#/definitions/VirtualNetworkInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "CustomCommandInstance": {
      "type": "object",
      "properties": {
        "customCommandId": {
          "format": "uuid",
          "type": "string"
        },
        "customCommandName": {
          "type": "string"
        },
        "programPath": {
          "type": "string"
        },
        "arguments": {
          "type": "string"
        },
        "workingDirectory": {
          "type": "string"
        },
        "waitForFinish": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "CustomServiceInstance": {
      "type": "object",
      "properties": {
        "serviceId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "serviceType": {
          "$ref": "#/definitions/ServiceType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "tenantInstance": {
          "$ref": "#/definitions/TenantInstance"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagInstance"
          }
        },
        "l4PortSetEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/L4PortSetEntry"
          }
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "relatedFwRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "CustomSpecificationInstance": {
      "type": "object",
      "properties": {
        "customSpecificationId": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CustomerInstance": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "uuid",
          "type": "string"
        },
        "customerCode": {
          "type": "string"
        },
        "customerLdapCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "krs": {
          "type": "string"
        },
        "nip": {
          "type": "string"
        },
        "regon": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "DatastoreInstance": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "datastoreName": {
          "type": "string"
        },
        "freeSpace": {
          "format": "int64",
          "type": "integer"
        },
        "capacity": {
          "format": "int64",
          "type": "integer"
        },
        "maxVirtualDiskCapacity": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "vraId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DeleteAccountResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteBillingAlarmDefinitionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteCustomServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "customServiceInstance": {
          "$ref": "#/definitions/CustomServiceInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteDfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteFirewallRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteFloatingIpResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteGfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteIpCollectionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteKeyRotationScheduleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteKmsKeyResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteNATRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeletePortForwardingResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteProjectResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeletePublicIpAllocationResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteRouterResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteSnapshotResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteTagResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeleteVirtualNetworkResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "DeploymentCategory": {
      "enum": [
        "WINDOWS",
        "LINUX"
      ],
      "type": "string"
    },
    "DeploymentInstance": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deploymentInitialSizeGB": {
          "format": "float",
          "type": "number"
        },
        "customSpecificationId": {
          "format": "uuid",
          "type": "string"
        },
        "deploymentCategory": {
          "$ref": "#/definitions/DeploymentCategory"
        },
        "deploymentType": {
          "$ref": "#/definitions/DeploymentType"
        },
        "deploymentTemplatePattern": {
          "type": "string"
        },
        "customCommandInstanceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomCommandInstance"
          }
        },
        "byol": {
          "type": "boolean"
        },
        "ovfName": {
          "type": "string"
        },
        "isoName": {
          "type": "string"
        },
        "computeSite": {
          "$ref": "#/definitions/ComputeSiteInstance"
        },
        "oscImageExternalId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DeploymentType": {
      "enum": [
        "TEMPLATE",
        "OVF",
        "ISO"
      ],
      "type": "string"
    },
    "DfwRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/Action"
        },
        "direction": {
          "$ref": "#/definitions/Direction"
        },
        "ipProtocol": {
          "$ref": "#/definitions/IpProtocol"
        },
        "disabled": {
          "type": "boolean"
        },
        "destinationExcluded": {
          "type": "boolean"
        },
        "logged": {
          "type": "boolean"
        },
        "protection": {
          "$ref": "#/definitions/Protection"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "sourcesExcluded": {
          "type": "boolean"
        },
        "priority": {
          "format": "int64",
          "type": "integer"
        },
        "sequenceNumber": {
          "format": "int64",
          "type": "integer"
        },
        "profile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextProfileInstance"
          }
        },
        "destination": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "defaultServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        },
        "customServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomServiceInstance"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "routerId": {
          "format": "uuid",
          "type": "string"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DhcpConfigPath": {
      "type": "object",
      "properties": {
        "dhcpConfigPathId": {
          "format": "int32",
          "type": "integer"
        },
        "dhcpConfigPathName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Direction": {
      "enum": [
        "IN_OUT",
        "IN",
        "OUT"
      ],
      "type": "string"
    },
    "Direction1": {
      "enum": [
        "INGRESS",
        "EGRESS"
      ],
      "type": "string"
    },
    "DiskInstance": {
      "type": "object",
      "properties": {
        "diskId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "capacityKB": {
          "format": "int64",
          "type": "integer"
        },
        "unitNumber": {
          "format": "int32",
          "type": "integer"
        },
        "controllerKey": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DnsServerInstance": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "address": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EdgeClusterInstance": {
      "type": "object",
      "properties": {
        "edgeClusterId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ElkResponse": {
      "type": "object",
      "properties": {
        "timed_out": {
          "type": "boolean"
        },
        "hits": {
          "$ref": "#/definitions/Hits"
        }
      },
      "additionalProperties": false
    },
    "EncryptionInstance": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean"
        },
        "encryptionKeyId": {
          "type": "string"
        },
        "encryptionProviderId": {
          "type": "string"
        },
        "recryptOperation": {
          "$ref": "#/definitions/RecryptOperation"
        },
        "managed": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ErrorInstance": {
      "type": "object",
      "properties": {
        "errorType": {
          "$ref": "#/definitions/ErrorType"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ErrorType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "EtherType": {
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "type": "string"
    },
    "ExportKmsKeyResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "FailoverMode": {
      "type": "object",
      "properties": {
        "failoverModeId": {
          "format": "int32",
          "type": "integer"
        },
        "failoverMode": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FirewallMatch": {
      "enum": [
        "MATCH_EXTERNAL_ADDRESS",
        "MATCH_INTERNAL_ADDRESS",
        "BYPASS"
      ],
      "type": "string"
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "etherType": {
          "$ref": "#/definitions/EtherType"
        },
        "direction": {
          "$ref": "#/definitions/Direction1"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "portRangeMin": {
          "format": "int64",
          "type": "integer"
        },
        "portRangeMax": {
          "format": "int64",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "type": "string"
        },
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/UserInstance"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/UserInstance"
        },
        "projectExternalId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FloatingIp": {
      "type": "object",
      "properties": {
        "floatingIpId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "publicAddress": {
          "type": "string"
        },
        "portForwardings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortForwarding"
          }
        },
        "oscProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "vmPortId": {
          "format": "uuid",
          "type": "string"
        },
        "vmFixedIp": {
          "type": "string"
        },
        "vmName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FolderGetResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "folderInstance": {
          "$ref": "#/definitions/FolderInstance"
        }
      },
      "additionalProperties": false
    },
    "FolderInstance": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "lvl": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isBuiltIn": {
          "type": "boolean"
        },
        "folderPath": {
          "type": "string"
        },
        "inherit": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "FolderListResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "folderInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FolderInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "GenerateBillingReportResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualMachineReportElementCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineReportElement"
          }
        }
      },
      "additionalProperties": false
    },
    "GenerateKmsBillingReportResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "kmsReportElementCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KmsReportElement"
          }
        }
      },
      "additionalProperties": false
    },
    "GeneratePIPBillingReportResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "pipReportElementCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PIPReportElement"
          }
        }
      },
      "additionalProperties": false
    },
    "GenerateVRFBillingReportResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "vrfReportElementCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VRFReportElement"
          }
        }
      },
      "additionalProperties": false
    },
    "GetAccountResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "accountInstance": {
          "$ref": "#/definitions/AccountInstance"
        }
      },
      "additionalProperties": false
    },
    "GetBackupListResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "backupList": {
          "$ref": "#/definitions/BackupList"
        }
      },
      "additionalProperties": false
    },
    "GetBackupPlanResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "backupPlan": {
          "$ref": "#/definitions/BackupPlan"
        }
      },
      "additionalProperties": false
    },
    "GetBillingAlarmDefinitionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingAlarmDefinition": {
          "$ref": "#/definitions/BillingAlarmDefinition"
        }
      },
      "additionalProperties": false
    },
    "GetBillingPeriodResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingPeriod": {
          "$ref": "#/definitions/BillingPeriodInstance"
        }
      },
      "additionalProperties": false
    },
    "GetCustomServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "customServiceInstance": {
          "$ref": "#/definitions/CustomServiceInstance"
        }
      },
      "additionalProperties": false
    },
    "GetDeploymentResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deploymentInstance": {
          "$ref": "#/definitions/DeploymentInstance"
        }
      },
      "additionalProperties": false
    },
    "GetDfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ruleInstance": {
          "$ref": "#/definitions/DfwRule"
        }
      },
      "additionalProperties": false
    },
    "GetFirewallRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "firewallRule": {
          "$ref": "#/definitions/FirewallRule"
        }
      },
      "additionalProperties": false
    },
    "GetFloatingIpResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "floatingIp": {
          "$ref": "#/definitions/FloatingIp"
        }
      },
      "additionalProperties": false
    },
    "GetGfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ruleInstance": {
          "$ref": "#/definitions/GfwRule"
        }
      },
      "additionalProperties": false
    },
    "GetHealthCheckResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "healthCheckInstance": {
          "$ref": "#/definitions/HealthCheckInstance"
        }
      },
      "additionalProperties": false
    },
    "GetIPAMServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/IPAMServiceInstance"
        }
      },
      "additionalProperties": false
    },
    "GetIpCollectionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ipCollection": {
          "$ref": "#/definitions/IpCollection"
        }
      },
      "additionalProperties": false
    },
    "GetLogCategoryResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "logCategory": {
          "$ref": "#/definitions/LogCategory"
        }
      },
      "additionalProperties": false
    },
    "GetLogCategoryStats": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "logCategoryStats": {
          "$ref": "#/definitions/LogCategoryStats"
        }
      },
      "additionalProperties": false
    },
    "GetLogStats": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "logCategoryStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogCategoryStats"
          }
        }
      },
      "additionalProperties": false
    },
    "GetLogsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/ElkResponse"
        }
      },
      "additionalProperties": false
    },
    "GetNATRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "natRuleInstance": {
          "$ref": "#/definitions/NATRuleInstance"
        }
      },
      "additionalProperties": false
    },
    "GetPlatformTypeResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "errorInstance": {
          "$ref": "#/definitions/ErrorInstance"
        },
        "platformType": {
          "$ref": "#/definitions/PlatformType"
        }
      },
      "additionalProperties": false
    },
    "GetPortForwardingResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "portForwarding": {
          "$ref": "#/definitions/PortForwarding"
        }
      },
      "additionalProperties": false
    },
    "GetProjectResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "projectInstance": {
          "$ref": "#/definitions/ProjectInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "GetPublicIpAllocationResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "publicIpAllocation": {
          "$ref": "#/definitions/PublicIpAllocation"
        }
      },
      "additionalProperties": false
    },
    "GetRequestResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "GetRouterResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "routerInstance": {
          "$ref": "#/definitions/RouterInstance"
        }
      },
      "additionalProperties": false
    },
    "GetSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      },
      "additionalProperties": false
    },
    "GetServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        }
      },
      "additionalProperties": false
    },
    "GetSnapshotResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "snapshotInstance": {
          "$ref": "#/definitions/SnapshotInstance"
        }
      },
      "additionalProperties": false
    },
    "GetTagResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "tag": {
          "$ref": "#/definitions/Tag"
        }
      },
      "additionalProperties": false
    },
    "GetVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "vcsVirtualMachineInstance": {
          "$ref": "#/definitions/VirtualMachineInstance"
        }
      },
      "additionalProperties": false
    },
    "GetVirtualMachineTicketResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualMachineTicket": {
          "$ref": "#/definitions/VirtualMachineTicket"
        }
      },
      "additionalProperties": false
    },
    "GetVirtualNetworkResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualNetworkInstance": {
          "$ref": "#/definitions/VirtualNetworkInstance"
        }
      },
      "additionalProperties": false
    },
    "GfwRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/Action"
        },
        "direction": {
          "$ref": "#/definitions/Direction"
        },
        "ipProtocol": {
          "$ref": "#/definitions/IpProtocol"
        },
        "disabled": {
          "type": "boolean"
        },
        "destinationExcluded": {
          "type": "boolean"
        },
        "logged": {
          "type": "boolean"
        },
        "protection": {
          "$ref": "#/definitions/Protection"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "sourcesExcluded": {
          "type": "boolean"
        },
        "priority": {
          "format": "int64",
          "type": "integer"
        },
        "sequenceNumber": {
          "format": "int64",
          "type": "integer"
        },
        "profile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextProfileInstance"
          }
        },
        "destination": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "defaultServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        },
        "customServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomServiceInstance"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouterInstance"
          }
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GroupInstance": {
      "type": "object",
      "properties": {
        "groupId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scimGroupId": {
          "format": "uuid",
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInstance"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupInstance"
          }
        },
        "memberCount": {
          "format": "int32",
          "type": "integer"
        },
        "builtIn": {
          "type": "boolean"
        },
        "platformGroup": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GuestToolsInstance": {
      "type": "object",
      "properties": {
        "toolsId": {
          "format": "int32",
          "type": "integer"
        },
        "toolsRunningStatus": {
          "$ref": "#/definitions/RunningStatus"
        },
        "toolsStatus": {
          "$ref": "#/definitions/Status"
        },
        "toolsVersion": {
          "type": "string"
        },
        "ipAddresses": {
          "type": "string"
        },
        "annotations": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HAMode": {
      "type": "object",
      "properties": {
        "haModeId": {
          "format": "int32",
          "type": "integer"
        },
        "haMode": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HealthCheckInstance": {
      "type": "object",
      "properties": {
        "healhCheckGetId": {
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Hit": {
      "type": "object",
      "properties": {
        "_source": {
          "$ref": "#/definitions/Source"
        },
        "sort": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "Hits": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/Total"
        },
        "hits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hit"
          }
        }
      },
      "additionalProperties": false
    },
    "IP6ProfilePath": {
      "type": "object",
      "properties": {
        "ip6ProfilePathId": {
          "format": "int32",
          "type": "integer"
        },
        "ip6ProfilePath": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "IPAMServiceInstance": {
      "type": "object",
      "properties": {
        "serviceId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ImportKmsKeyResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "ImportSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "ImportVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "InternalTransitSubnet": {
      "type": "object",
      "properties": {
        "internalTransitSubnetId": {
          "format": "int32",
          "type": "integer"
        },
        "internalTransitSubnetName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "IpCollection": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "memberType": {
          "$ref": "#/definitions/SecurityGroupMemberType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "ipCollectionAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "IpProtocol": {
      "enum": [
        "IPV4_IPV6",
        "IPV4",
        "IPV6"
      ],
      "type": "string"
    },
    "IsoInstance": {
      "type": "object",
      "properties": {
        "isoFileName": {
          "type": "string"
        },
        "connected": {
          "type": "boolean"
        },
        "connectedAtPowerOn": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "KeyExport": {
      "type": "object",
      "properties": {
        "format": {
          "$ref": "#/definitions/KeyExportFormat"
        },
        "wrapPublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "KeyExportFormat": {
      "enum": [
        "pkcs1",
        "pkcs8"
      ],
      "type": "string"
    },
    "KeyGetResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        }
      },
      "additionalProperties": false
    },
    "KeyImport": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string"
        },
        "keyUsageList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyUsage"
          }
        },
        "algorithm": {
          "type": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "material": {
          "type": "string"
        },
        "privateKeyIdToUnwrap": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "KeyInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "dpplication": {
          "type": "string"
        },
        "devAccount": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "activationDate": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "usageMask": {
          "format": "int32",
          "type": "integer"
        },
        "keyUsageList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "revocationReason": {
          "$ref": "#/definitions/KeyRevocationReason"
        },
        "pbjectType": {
          "type": "string"
        },
        "sha1Fingerprint": {
          "type": "string"
        },
        "sha256Fingerprint": {
          "type": "string"
        },
        "defaultIV": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer"
        },
        "algorithm": {
          "type": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "unexportable": {
          "type": "boolean"
        },
        "undeletable": {
          "type": "boolean"
        },
        "neverExported": {
          "type": "boolean"
        },
        "neverExportable": {
          "type": "boolean"
        },
        "emptyMaterial": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "muid": {
          "type": "string"
        },
        "publickey": {
          "type": "string"
        },
        "material": {
          "type": "string"
        },
        "managed": {
          "type": "boolean"
        },
        "objectType": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "KeyListResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "KeyNewVersion": {
      "type": "object",
      "properties": {
        "material": {
          "type": "string"
        },
        "privateKeyIdToUnwrap": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "KeyRevocation": {
      "type": "object",
      "properties": {
        "reason": {
          "$ref": "#/definitions/KeyRevocationReason"
        }
      },
      "additionalProperties": false
    },
    "KeyRevocationReason": {
      "enum": [
        "Unspecified",
        "KeyCompromise",
        "CACompromise",
        "AffiliationChanged",
        "Superseded",
        "CessationOfOperation",
        "PrivilegeWithdrawn"
      ],
      "type": "string"
    },
    "KeyRotationSchedule": {
      "type": "object",
      "properties": {
        "entryId": {
          "format": "int32",
          "type": "integer"
        },
        "keyId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "cycle": {
          "type": "boolean"
        },
        "intervalHours": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "staticDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "KeyRotationScheduleGetResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyRotationSchedule": {
          "$ref": "#/definitions/KeyRotationSchedule"
        }
      },
      "additionalProperties": false
    },
    "KeyUsage": {
      "enum": [
        "SIGN",
        "VERIFY",
        "ENCRYPT",
        "DECRYPT",
        "WRAP_KEY",
        "UNWRAP_KEY",
        "EXPORT_KEY",
        "GENERATE_MAC",
        "VERIFY_MAC",
        "DERIVE_KEY",
        "CONTENT_COMMITMENT",
        "KEY_AGREEMENT",
        "CERTIFICATE_SIGN",
        "CRL_SIGN",
        "GENERATE_CRYPTOGRAM",
        "VALIDATE_CRYPTOGRAM",
        "TRANSLATE_ENCRYPT",
        "TRANSLATE_DECRYPT",
        "TRANSLATE_WRAP",
        "TRANSLATE_UNWRAP",
        "FPE_ENCRYPT",
        "FPE_DECRYPT"
      ],
      "type": "string"
    },
    "KmsReportElement": {
      "type": "object",
      "properties": {
        "keyId": {
          "type": "string"
        },
        "keyName": {
          "type": "string"
        },
        "keyType": {
          "type": "string"
        },
        "totalDays": {
          "format": "int32",
          "type": "integer"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        },
        "totalCost": {
          "format": "float",
          "type": "number"
        },
        "estimatedCost": {
          "format": "float",
          "type": "number"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoringValue": {
          "format": "float",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "L4PortSetEntry": {
      "type": "object",
      "properties": {
        "l4PortSetEntryId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "l4Protocol": {
          "$ref": "#/definitions/L4Protocol"
        },
        "sourcePorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "L4Protocol": {
      "enum": [
        "TCP",
        "UDP"
      ],
      "type": "string"
    },
    "LicSettings": {
      "type": "object",
      "properties": {
        "byolEnabled": {
          "type": "boolean"
        },
        "useDedicatedHosts": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ListAccountResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "accountInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListBackupListResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "backupListCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupList"
          }
        }
      },
      "additionalProperties": false
    },
    "ListBackupPlansResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "backupPlanCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupPlan"
          }
        }
      },
      "additionalProperties": false
    },
    "ListBillingAlarmDefinitionsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingAlarmDefinitionCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingAlarmDefinition"
          }
        }
      },
      "additionalProperties": false
    },
    "ListCustomServicesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "customServiceInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomServiceInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deploymentInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListDfwRulesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ruleInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DfwRule"
          }
        }
      },
      "additionalProperties": false
    },
    "ListFirewallRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "firewallRuleCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        }
      },
      "additionalProperties": false
    },
    "ListFloatingIpResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "floatingIpCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FloatingIp"
          }
        }
      },
      "additionalProperties": false
    },
    "ListGfwRulesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ruleInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GfwRule"
          }
        }
      },
      "additionalProperties": false
    },
    "ListIPAMServicesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "serviceInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAMServiceInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListIpCollectionsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ipCollectionSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpCollection"
          }
        }
      },
      "additionalProperties": false
    },
    "ListLogCategoriesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "logCategoryCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogCategory"
          }
        }
      },
      "additionalProperties": false
    },
    "ListNATRulesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "natRuleInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NATRuleInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListPortForwardingResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "portForwardingCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortForwarding"
          }
        }
      },
      "additionalProperties": false
    },
    "ListPortFwdVmResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "portFwdVmCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortFwdVm"
          }
        }
      },
      "additionalProperties": false
    },
    "ListProjectResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "projectInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListPublicIpAllocationsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "publicIpAllocationCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicIpAllocation"
          }
        }
      },
      "additionalProperties": false
    },
    "ListRequestsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListRoutersResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "routerCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouterInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListSecurityGroupsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "securityGroupCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        }
      },
      "additionalProperties": false
    },
    "ListServicesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "serviceInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListSnapshotsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "snapshotInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListTagsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "tagCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      },
      "additionalProperties": false
    },
    "ListVirtualMachinesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "vcsVirtualMachineInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ListVirtualNetworksResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualNetworkInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "LogCategory": {
      "type": "object",
      "properties": {
        "logCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "logCategoryName": {
          "type": "string"
        },
        "logCategoryDescription": {
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "type": "integer"
        },
        "searchCode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "LogCategoryStats": {
      "type": "object",
      "properties": {
        "logsCount": {
          "format": "int64",
          "type": "integer"
        },
        "logCategory": {
          "$ref": "#/definitions/LogCategory"
        }
      },
      "additionalProperties": false
    },
    "LogSeverity": {
      "enum": [
        "DEFAULT",
        "INFO",
        "DEBUG",
        "NOTICE",
        "WARN",
        "WARNING",
        "ERROR",
        "CRITICAL",
        "FATAL",
        "ALERT",
        "EMERGENCY"
      ],
      "type": "string"
    },
    "MacType": {
      "enum": [
        "assigned",
        "generated",
        "manual"
      ],
      "type": "string"
    },
    "NATRuleAction": {
      "enum": [
        "SNAT",
        "DNAT",
        "NAT64",
        "NO_DNAT",
        "NO_SNAT",
        "REFLEXIVE"
      ],
      "type": "string"
    },
    "NATRuleInstance": {
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "natType": {
          "$ref": "#/definitions/NATType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/NATRuleAction"
        },
        "protection": {
          "$ref": "#/definitions/Protection"
        },
        "destinationNetwork": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "firewallMatch": {
          "$ref": "#/definitions/FirewallMatch"
        },
        "logging": {
          "type": "boolean"
        },
        "priority": {
          "format": "int64",
          "type": "integer"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sequenceNumber": {
          "format": "int64",
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "sourceNetwork": {
          "type": "string"
        },
        "translatedNetwork": {
          "type": "string"
        },
        "translatedPorts": {
          "type": "string"
        },
        "tierZeroRouter": {
          "$ref": "#/definitions/RouterInstance"
        },
        "virtualNetworkInstance": {
          "$ref": "#/definitions/VirtualNetworkInstance"
        }
      },
      "additionalProperties": false
    },
    "NATType": {
      "enum": [
        "MANUAL",
        "AUTO"
      ],
      "type": "string"
    },
    "Network": {
      "type": "object",
      "properties": {
        "pckId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "subnet": {
          "$ref": "#/definitions/Subnet"
        },
        "portSecurityEnabled": {
          "type": "boolean"
        },
        "networkType": {
          "type": "string"
        },
        "routerRefId": {
          "type": "string"
        },
        "shared": {
          "type": "boolean"
        },
        "routerExternal": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "NetworkInstance": {
      "type": "object",
      "properties": {
        "networkId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkType": {
          "$ref": "#/definitions/NetworkType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "computeSiteId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "NetworkInterfaceInstance": {
      "type": "object",
      "properties": {
        "networkInterfaceId": {
          "format": "uuid",
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "nicType": {
          "$ref": "#/definitions/NicType"
        },
        "macType": {
          "$ref": "#/definitions/MacType"
        },
        "uptCompatibilityEnabled": {
          "type": "boolean"
        },
        "mac": {
          "type": "string"
        },
        "pciSlotNumber": {
          "format": "int64",
          "type": "integer"
        },
        "wakeOnLanEnabled": {
          "type": "boolean"
        },
        "startConnected": {
          "type": "boolean"
        },
        "connected": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/ConnectionStatus"
        },
        "networkInstance": {
          "$ref": "#/definitions/NetworkInstance"
        },
        "networkSettings": {
          "$ref": "#/definitions/NetworkSettings"
        },
        "portId": {
          "format": "uuid",
          "type": "string"
        },
        "oscNetwork": {
          "$ref": "#/definitions/Network"
        }
      },
      "additionalProperties": false
    },
    "NetworkSettings": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "subnetMask": {
          "type": "string"
        },
        "gateway": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsDomain": {
          "type": "string"
        },
        "dnsServerList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primaryWINS": {
          "type": "string"
        },
        "secondaryWINS": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "NetworkType": {
      "enum": [
        "OpaqueNetwork"
      ],
      "type": "string"
    },
    "NicType": {
      "enum": [
        "VirtualE1000",
        "VirtualE1000e",
        "VirtualPCNet32",
        "VirtualSriovEthernetCard",
        "VirtualVmxnet2",
        "VirtualVmxnet3",
        "OscVirtualAdapter"
      ],
      "type": "string"
    },
    "OldListBillingPeriodResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingPeriodCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPeriodInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "OsType": {
      "enum": [
        "WINDOWS",
        "LINUX"
      ],
      "type": "string"
    },
    "PIPReportElement": {
      "type": "object",
      "properties": {
        "allocationId": {
          "format": "int32",
          "type": "integer"
        },
        "allocationName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "totalDays": {
          "format": "int32",
          "type": "integer"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        },
        "totalCost": {
          "format": "float",
          "type": "number"
        },
        "estimatedCost": {
          "format": "float",
          "type": "number"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoringValue": {
          "format": "float",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "PlatformInstance": {
      "type": "object",
      "properties": {
        "platformId": {
          "format": "uuid",
          "type": "string"
        },
        "platformName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "platformType": {
          "$ref": "#/definitions/PlatformType"
        },
        "oscPlatformId": {
          "format": "uuid",
          "type": "string"
        },
        "oscPlatformExternalId": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInstance"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "PlatformType": {
      "enum": [
        "VMWARE",
        "OPENSTACK"
      ],
      "type": "string"
    },
    "PortForwarding": {
      "type": "object",
      "properties": {
        "portForwardingId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "internalPortId": {
          "format": "uuid",
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "internalPort": {
          "format": "int32",
          "type": "integer"
        },
        "internalPortRange": {
          "type": "string"
        },
        "externalPort": {
          "format": "int32",
          "type": "integer"
        },
        "externalPortRange": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "publicAddress": {
          "type": "string"
        },
        "floatingIpId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PortFwdVm": {
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "format": "uuid",
          "type": "string"
        },
        "vmExternalId": {
          "type": "string"
        },
        "virtualMachineName": {
          "type": "string"
        },
        "networkInterfaceLabel": {
          "type": "string"
        },
        "oscPortId": {
          "format": "uuid",
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "networkName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PowerState": {
      "enum": [
        "poweredOff",
        "poweredOn",
        "suspended"
      ],
      "type": "string"
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "ProjectInstance": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "limitEnabled": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "cpuReserved": {
          "format": "int64",
          "type": "integer"
        },
        "memoryReservedSizeMB": {
          "format": "int64",
          "type": "integer"
        },
        "storageReservedSizeGB": {
          "format": "int64",
          "type": "integer"
        },
        "vmCount": {
          "format": "int64",
          "type": "integer"
        },
        "cpuAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "ramAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "storageAllocated": {
          "format": "int64",
          "type": "integer"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "cost": {
          "format": "float",
          "type": "number"
        },
        "estimatedMonthlyCost": {
          "format": "float",
          "type": "number"
        },
        "vrfId": {
          "format": "uuid",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Protection": {
      "type": "object",
      "properties": {
        "protectionId": {
          "format": "int32",
          "type": "integer"
        },
        "protection": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Protocol": {
      "enum": [
        "ANY",
        "ICMP",
        "IGMP",
        "IPIP",
        "TCP",
        "EGP",
        "UDP",
        "DCCP",
        "IPV6_ENCAP",
        "IPV6_ROUTE",
        "IPV6_FRAG",
        "RSVP",
        "GRE",
        "ESP",
        "AH",
        "IPV6_ICMP",
        "IPV6_NONXT",
        "IPV6_OPTS",
        "OSPF",
        "VRRP",
        "PGM",
        "SCTP",
        "UDPLITE"
      ],
      "type": "string"
    },
    "PublicIpAddress": {
      "type": "object",
      "properties": {
        "ipAddressId": {
          "format": "uuid",
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PublicIpAllocation": {
      "type": "object",
      "properties": {
        "allocationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "publicIpAddress": {
          "$ref": "#/definitions/PublicIpAddress"
        },
        "serviceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAMServiceInstance"
          }
        },
        "assignmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "services": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "QueryFilter": {
      "type": "object",
      "properties": {
        "logSeverity": {
          "$ref": "#/definitions/LogSeverity"
        },
        "userName": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "queryString": {
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RecryptOperation": {
      "enum": [
        "NONE",
        "SHALLOW",
        "DEEP"
      ],
      "type": "string"
    },
    "RemoveAllSnapshotsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "RequestInstance": {
      "type": "object",
      "properties": {
        "requestId": {
          "format": "uuid",
          "type": "string"
        },
        "requestPhase": {
          "$ref": "#/definitions/RequestPhase"
        },
        "requestStatus": {
          "$ref": "#/definitions/RequestStatus"
        },
        "lastErrorMessage": {
          "type": "string"
        },
        "requestType": {
          "$ref": "#/definitions/RequestType"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "requestBody": {
          "type": "string"
        },
        "contextBody": {
          "type": "string"
        },
        "requestorId": {
          "format": "uuid",
          "type": "string"
        },
        "requestor": {
          "type": "string"
        },
        "resourceId": {
          "format": "uuid",
          "type": "string"
        },
        "lastMessage": {
          "type": "string"
        },
        "requestMessageList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestMessage"
          }
        },
        "eId": {
          "format": "int32",
          "type": "integer"
        },
        "platformInstance": {
          "$ref": "#/definitions/PlatformInstance"
        },
        "customerInstance": {
          "$ref": "#/definitions/CustomerInstance"
        }
      },
      "additionalProperties": false
    },
    "RequestMessage": {
      "type": "object",
      "properties": {
        "messageId": {
          "format": "int32",
          "type": "integer"
        },
        "messageDate": {
          "format": "date-time",
          "type": "string"
        },
        "messageValue": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RequestPhase": {
      "enum": [
        "NEW",
        "PROCESSING",
        "FINISHED",
        "CANCELLED",
        "TIMEOUT",
        "QUEUEING"
      ],
      "type": "string"
    },
    "RequestStatus": {
      "enum": [
        "SUCCESS",
        "FAILED"
      ],
      "type": "string"
    },
    "RequestType": {
      "enum": [
        "SECURITY_GROUP_CREATE",
        "SECURITY_GROUP_DELETE",
        "FIREWALL_DFW_RULE_CREATE",
        "FIREWALL_DFW_RULE_DELETE",
        "FIREWALL_GFW_RULE_CREATE",
        "FIREWALL_GFW_RULE_DELETE",
        "SECURITY_GROUP_UPDATE",
        "FIREWALL_DFW_RULE_UPDATE",
        "FIREWALL_GFW_RULE_UPDATE",
        "ROUTER_CREATE",
        "ROUTER_UPDATE",
        "ROUTER_DELETE",
        "GROUP_CREATE",
        "GROUP_DELETE",
        "SUBTENANT_CREATE",
        "SUBTENANT_UPDATE",
        "SUBTENANT_DELETE",
        "PROJECT_CREATE",
        "PROJECT_UPDATE",
        "PROJECT_DELETE",
        "GROUP_MEMBER_CREATE",
        "GROUP_MEMBER_DELETE",
        "CATALOG_ENTITLEMENT_CREATE",
        "CATALOG_ENTITLEMENT_UPDATE",
        "CATALOG_ENTITLEMENT_DELETE",
        "SEGMENT_CREATE",
        "SEGMENT_UPDATE",
        "SEGMENT_DELETE",
        "NETWORK_CREATE",
        "NETWORK_UPDATE",
        "NETWORK_DELETE",
        "IPCOLLECTION_CREATE",
        "IPCOLLECTION_UPDATE",
        "IPCOLLECTION_DELETE",
        "BILLING_ALARM_DEFINITION_CREATE",
        "BILLING_ALARM_DEFINITION_UPDATE",
        "BILLING_ALARM_DEFINITION_DELETE",
        "VIRTUAL_MACHINE_CREATE",
        "VIRTUAL_MACHINE_MODIFY",
        "VIRTUAL_MACHINE_DELETE",
        "CUSTOM_SERVICE_CREATE",
        "CUSTOM_SERVICE_MODIFY",
        "CUSTOM_SERVICE_DELETE",
        "KMS_KEY_CREATE",
        "KMS_KEY_REVOKE",
        "KMS_KEY_NEW_VERSION",
        "KMS_KEY_DELETE",
        "KMS_KEY_EXPORT",
        "KMS_KEY_IMPORT",
        "KMS_KEY_ROTATION_SCHEDULE_CREATE",
        "KMS_KEY_ROTATION_SCHEDULE_UPDATE",
        "KMS_KEY_ROTATION_SCHEDULE_DELETE",
        "ADS_SYNC",
        "GROUP_UPDATE",
        "SNAPSHOT_CREATE",
        "SNAPSHOT_REVERT",
        "SNAPSHOT_DELETE",
        "SECURITY_POLICY_CREATE",
        "SECURITY_POLICY_UPDATE",
        "SECURITY_POLICY_DELETE",
        "BILLING_TAG_CREATE",
        "BILLING_TAG_UPDATE",
        "BILLING_TAG_DELETE",
        "SYSTEM_TAG_CREATE",
        "SYSTEM_TAG_UPDATE",
        "SYSTEM_TAG_DELETE",
        "TAG_CREATE",
        "TAG_UPDATE",
        "TAG_DELETE",
        "UPDATE_LOG_CATEGORY",
        "IPAM_PUBLIC_IP_ALLOCATION_CREATE",
        "IPAM_PUBLIC_IP_ALLOCATION_UPDATE",
        "IPAM_PUBLIC_IP_ALLOCATION_DELETE",
        "NAT_RULE_CREATE",
        "NAT_RULE_UPDATE",
        "NAT_RULE_DELETE",
        "AD_USER_CREATE",
        "AD_USER_MODIFY",
        "AD_USER_ENABLE",
        "AD_USER_DISABLE",
        "AD_USER_DELETE",
        "AD_GROUP_CREATE",
        "AD_GROUP_MODIFY",
        "AD_GROUP_DELETE",
        "VIRTUAL_MACHINE_RESET",
        "VIRTUAL_MACHINE_REMOVE_ALL_SNAPSHOTS",
        "BILLING_ACCOUNT_CREATE",
        "BILLING_ACCOUNT_UPDATE",
        "BILLING_ACCOUNT_DELETE",
        "ACCESS_POLICY_ADD_USER",
        "ACCESS_POLICY_ADD_GROUP",
        "ACCESS_POLICY_REMOVE_USER",
        "ACCESS_POLICY_REMOVE_GROUP",
        "ACCESS_POLICY_REMOVE_USER_BY_NODE",
        "ACCESS_POLICY_REMOVE_GROUP_BY_NODE",
        "MODIFY_PLATFORM_ACCESS",
        "VPN_REQUEST_CREATE",
        "VIRTUAL_MACHINE_UPDATE",
        "FIREWALL_RULE_CREATE",
        "FIREWALL_RULE_UPDATE",
        "FIREWALL_RULE_DELETE",
        "FILES_MANAGER_CREATE",
        "FILES_MANAGER_DELETE",
        "FILES_MANAGER_UPDATE",
        "FILES_MANAGER_UPDATE_STATUS",
        "PORT_FORWARDING_CREATE",
        "PORT_FORWARDING_UPDATE",
        "PORT_FORWARDING_DELETE",
        "VIRTUAL_MACHINE_IMPORT",
        "SECURITY_GROUP_IMPORT",
        "ONBOARDING"
      ],
      "type": "string"
    },
    "ResetVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "ResourcePoolInstance": {
      "type": "object",
      "properties": {
        "resourcePoolId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "resourcePoolName": {
          "type": "string"
        },
        "runtimeCpuReservationUsed": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeCpuReservationUsedForVm": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeCpuUnreservedForPool": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeCpuMaxUsage": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeCpuUnreservedForVm": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeCpuOverallUsage": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryMaxUsage": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryOverallUsage": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryReservationUsed": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryReservationUsedForVm": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryUnreservedForPool": {
          "format": "int64",
          "type": "integer"
        },
        "runtimeMemoryUnreservedForVm": {
          "format": "int64",
          "type": "integer"
        },
        "configCpuAllocationReservation": {
          "format": "int64",
          "type": "integer"
        },
        "configCpuAllocationOverheadLimit": {
          "format": "int64",
          "type": "integer"
        },
        "configCpuAllocationLimit": {
          "format": "int64",
          "type": "integer"
        },
        "configCpuAllocationExpandableReservation": {
          "type": "boolean"
        },
        "configMemoryAllocationExpandableReservation": {
          "type": "boolean"
        },
        "configMemoryAllocationLimit": {
          "format": "int64",
          "type": "integer"
        },
        "configMemoryAllocationOverheadLimit": {
          "format": "int64",
          "type": "integer"
        },
        "configMemoryAllocationReservation": {
          "format": "int64",
          "type": "integer"
        },
        "vraId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ResourceType": {
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "resourceTypeName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RevertSnapshotResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "RevokeKmsKeyResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyInstance": {
          "$ref": "#/definitions/KeyInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "RouterInstance": {
      "type": "object",
      "properties": {
        "routerId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "routerType": {
          "$ref": "#/definitions/RouterType"
        },
        "displayName": {
          "type": "string"
        },
        "defaultRuleLogging": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "disableFirewall": {
          "type": "boolean"
        },
        "failoverMode": {
          "$ref": "#/definitions/FailoverMode"
        },
        "forceWithListing": {
          "type": "boolean"
        },
        "haMode": {
          "$ref": "#/definitions/HAMode"
        },
        "overridden": {
          "type": "boolean"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "protection": {
          "$ref": "#/definitions/Protection"
        },
        "rdAdminField": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "revision": {
          "format": "int64",
          "type": "integer"
        },
        "dhcpConfigPathList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DhcpConfigPath"
          }
        },
        "internalTransitSubnetList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalTransitSubnet"
          }
        },
        "ip6ProfilePathList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IP6ProfilePath"
          }
        },
        "transitSubnetList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransitSubnet"
          }
        },
        "routeAdvertisementType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schemaValue": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "edgeClusterInstance": {
          "$ref": "#/definitions/EdgeClusterInstance"
        },
        "tier0Path": {
          "type": "string"
        },
        "parentT0Id": {
          "format": "uuid",
          "type": "string"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "folderPath": {
          "type": "string"
        },
        "snatEnabled": {
          "type": "boolean"
        },
        "snatIp": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RouterType": {
      "enum": [
        "TIER0",
        "TIER1"
      ],
      "type": "string"
    },
    "RuleInstance": {
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/Action"
        },
        "direction": {
          "$ref": "#/definitions/Direction"
        },
        "ipProtocol": {
          "$ref": "#/definitions/IpProtocol"
        },
        "disabled": {
          "type": "boolean"
        },
        "destinationExcluded": {
          "type": "boolean"
        },
        "logged": {
          "type": "boolean"
        },
        "protection": {
          "$ref": "#/definitions/Protection"
        },
        "parentPath": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "sourcesExcluded": {
          "type": "boolean"
        },
        "priority": {
          "format": "int64",
          "type": "integer"
        },
        "sequenceNumber": {
          "format": "int64",
          "type": "integer"
        },
        "profile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextProfileInstance"
          }
        },
        "destination": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "defaultServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        },
        "customServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomServiceInstance"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RunningStatus": {
      "enum": [
        "guestToolsExecutingScripts",
        "guestToolsNotRunning",
        "guestToolsRunning"
      ],
      "type": "string"
    },
    "SecurityGroup": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/SecurityGroupMemberType"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagInstance"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityGroupMember"
          }
        },
        "relatedFwRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleInstance"
          }
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SecurityGroupMember": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "memberType": {
          "$ref": "#/definitions/SecurityGroupMemberType"
        }
      },
      "additionalProperties": false
    },
    "SecurityGroupMemberType": {
      "enum": [
        "IPSET",
        "LOGICAL_PORT",
        "VIRTUAL_MACHINE",
        "IPCOLLECTION",
        "SEGMENT",
        "GROUP"
      ],
      "type": "string"
    },
    "SegmentSubnetInstance": {
      "type": "object",
      "properties": {
        "segmentSubnetId": {
          "format": "uuid",
          "type": "string"
        },
        "dhcpRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gatewayAddressCIDR": {
          "type": "string"
        },
        "networkCIDR": {
          "type": "string"
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsServerInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "ServiceInstance": {
      "type": "object",
      "properties": {
        "serviceId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType"
        },
        "serviceType": {
          "$ref": "#/definitions/ServiceType"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ServiceType": {
      "type": "object",
      "properties": {
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceType": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SnapshotInstance": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "format": "uuid",
          "type": "string"
        },
        "snapshotMoRef": {
          "type": "string"
        },
        "innerID": {
          "format": "int32",
          "type": "integer"
        },
        "snapshotName": {
          "type": "string"
        },
        "virtualMachineMoRef": {
          "type": "string"
        },
        "virtualMachineId": {
          "format": "uuid",
          "type": "string"
        },
        "virtualMachineName": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "snapshotDescription": {
          "type": "string"
        },
        "powerState": {
          "$ref": "#/definitions/PowerState"
        },
        "quiesced": {
          "type": "boolean"
        },
        "parentSnapshotId": {
          "format": "uuid",
          "type": "string"
        },
        "childSnapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotInstance"
          }
        },
        "current": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "Source": {
      "type": "object",
      "properties": {
        "severity": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "jsonPayload": {},
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "receiveTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Status": {
      "enum": [
        "toolsNotInstalled",
        "toolsNotRunning",
        "toolsOk",
        "toolsOld"
      ],
      "type": "string"
    },
    "StoragePolicy": {
      "enum": [
        "UNKNOWN",
        "STANDARD",
        "STANDARD_W1",
        "STANDARD_W2",
        "ENTERPRISE",
        "STANDARDENCRYPTION",
        "ENTERPRISEENCRYPTION",
        "STANDARD_W1_ENCRYPTION",
        "STANDARD_W2_ENCRYPTION"
      ],
      "type": "string"
    },
    "SubAttributeInstance": {
      "type": "object",
      "properties": {
        "subAttributeId": {
          "format": "int32",
          "type": "integer"
        },
        "dataType": {
          "type": "string"
        },
        "attributeKey": {
          "type": "string"
        },
        "subAttributeValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAttributeValueInstance"
          }
        }
      },
      "additionalProperties": false
    },
    "SubAttributeValueInstance": {
      "type": "object",
      "properties": {
        "valueId": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "pckId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "networkId": {
          "type": "string"
        },
        "gatewayIp": {
          "type": "string"
        },
        "networkCidr": {
          "type": "string"
        },
        "enableDhcp": {
          "type": "boolean"
        },
        "allocationPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationPool"
          }
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "Tag": {
      "type": "object",
      "properties": {
        "tagId": {
          "format": "int32",
          "type": "integer"
        },
        "tagValue": {
          "type": "string"
        },
        "relatedVirtualMachines": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TagInstance": {
      "type": "object",
      "properties": {
        "tagId": {
          "format": "int32",
          "type": "integer"
        },
        "scope": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TemplateInstance": {
      "type": "object",
      "properties": {
        "templateId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TenantInstance": {
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "tenantName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "platformType": {
          "$ref": "#/definitions/PlatformType"
        }
      },
      "additionalProperties": false
    },
    "Total": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "relation": {
          "type": "string"
        },
        "lastIndex": {
          "format": "int64",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "TransitSubnet": {
      "type": "object",
      "properties": {
        "transitSubnetId": {
          "format": "int32",
          "type": "integer"
        },
        "transitSubnetName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UpdateAccountResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "accountInstance": {
          "$ref": "#/definitions/AccountInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateBillingAlarmDefinitionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "billingAlarmDefinition": {
          "$ref": "#/definitions/BillingAlarmDefinition"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateCustomServiceResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "customServiceInstance": {
          "$ref": "#/definitions/CustomServiceInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateDfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "dfwRule": {
          "$ref": "#/definitions/DfwRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateFirewallRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "firewallRule": {
          "$ref": "#/definitions/FirewallRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateFloatingIpResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "floatingIp": {
          "$ref": "#/definitions/FloatingIp"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateGfwRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "gfwRule": {
          "$ref": "#/definitions/GfwRule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateIpCollectionResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ipCollection": {
          "$ref": "#/definitions/IpCollection"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateKeyRotationScheduleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "keyRotationSchedule": {
          "$ref": "#/definitions/KeyRotationSchedule"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateLogCategoriesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "logCategory": {
          "$ref": "#/definitions/LogCategory"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateNATRuleResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "natRuleInstance": {
          "$ref": "#/definitions/NATRuleInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdatePortForwardingResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "portForwarding": {
          "$ref": "#/definitions/PortForwarding"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateProjectResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "projectInstance": {
          "$ref": "#/definitions/ProjectInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdatePublicIpAllocationResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "publicIpAllocation": {
          "$ref": "#/definitions/PublicIpAllocation"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateRouterResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "routerInstance": {
          "$ref": "#/definitions/RouterInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateSnapshotResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "snapshotInstance": {
          "$ref": "#/definitions/SnapshotInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateTagResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "tag": {
          "$ref": "#/definitions/Tag"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateVirtualMachineResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualMachineInstance": {
          "$ref": "#/definitions/VirtualMachineInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UpdateVirtualNetworkResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "virtualNetworkInstance": {
          "$ref": "#/definitions/VirtualNetworkInstance"
        },
        "requestInstance": {
          "$ref": "#/definitions/RequestInstance"
        }
      },
      "additionalProperties": false
    },
    "UserInstance": {
      "type": "object",
      "properties": {
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "scimUserId": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "resetPassword": {
          "type": "boolean"
        },
        "roles": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupInstance"
          }
        },
        "rolesEffective": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "apiAccess": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "tfaEnabled": {
          "type": "boolean"
        },
        "platforms": {
          "type": "string"
        },
        "isApiKey": {
          "type": "boolean"
        },
        "externalId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "VRFReportElement": {
      "type": "object",
      "properties": {
        "routerId": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "totalDays": {
          "format": "int32",
          "type": "integer"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        },
        "totalCost": {
          "format": "float",
          "type": "number"
        },
        "estimatedCost": {
          "format": "float",
          "type": "number"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoringValue": {
          "format": "float",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "VirtualDiskDevice": {
      "type": "object",
      "properties": {
        "sizeMB": {
          "format": "int64",
          "type": "integer"
        },
        "virtualDiskDeviceType": {
          "$ref": "#/definitions/VirtualDiskDeviceType"
        },
        "controllerId": {
          "format": "int32",
          "type": "integer"
        },
        "lunId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "VirtualDiskDeviceType": {
      "enum": [
        "SCSI",
        "IDE",
        "SATA"
      ],
      "type": "string"
    },
    "VirtualMachineImport": {
      "type": "object",
      "properties": {
        "externalId": {
          "format": "uuid",
          "type": "string"
        },
        "deploymentId": {
          "format": "uuid",
          "type": "string"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "osTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "storagePolicy": {
          "$ref": "#/definitions/StoragePolicy"
        }
      },
      "additionalProperties": false
    },
    "VirtualMachineInstance": {
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "format": "uuid",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "virtualMachineName": {
          "type": "string"
        },
        "deploymentInstance": {
          "$ref": "#/definitions/DeploymentInstance"
        },
        "resourceProfile": {
          "$ref": "#/definitions/VirtualMachineResourceProfile"
        },
        "cpuCount": {
          "format": "int32",
          "type": "integer"
        },
        "memorySizeMB": {
          "format": "int32",
          "type": "integer"
        },
        "virtualNetworkDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkDevice"
          }
        },
        "osVirtualDiskDevice": {
          "$ref": "#/definitions/VirtualDiskDevice"
        },
        "additionalVirtualDiskDeviceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDiskDevice"
          }
        },
        "initialPassword": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "sshKey": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "backupListCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupList"
          }
        },
        "storagePolicy": {
          "$ref": "#/definitions/StoragePolicy"
        },
        "numCoresPerSocket": {
          "format": "int32",
          "type": "integer"
        },
        "cpuHotAddEnabled": {
          "type": "boolean"
        },
        "cpuHotRemoveEnabled": {
          "type": "boolean"
        },
        "hotPlugMemoryIncrementSize": {
          "format": "int64",
          "type": "integer"
        },
        "hotPlugMemoryLimit": {
          "format": "int64",
          "type": "integer"
        },
        "memoryHotAddEnabled": {
          "type": "boolean"
        },
        "guestFullName": {
          "type": "string"
        },
        "guestId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "vmPathName": {
          "type": "string"
        },
        "storageCommitted": {
          "format": "int64",
          "type": "integer"
        },
        "storageUncommitted": {
          "format": "int64",
          "type": "integer"
        },
        "powerState": {
          "$ref": "#/definitions/PowerState"
        },
        "template": {
          "type": "boolean"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "computeResourceInstance": {
          "$ref": "#/definitions/ComputeResourceInstance"
        },
        "resourcePoolInstance": {
          "$ref": "#/definitions/ResourcePoolInstance"
        },
        "datastoreInstance": {
          "$ref": "#/definitions/DatastoreInstance"
        },
        "networkInterfaceInstanceCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceInstance"
          }
        },
        "virtualDiskCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskInstance"
          }
        },
        "guestToolsInstance": {
          "$ref": "#/definitions/GuestToolsInstance"
        },
        "templateInstance": {
          "$ref": "#/definitions/TemplateInstance"
        },
        "customSpecificationInstance": {
          "$ref": "#/definitions/CustomSpecificationInstance"
        },
        "tenantInstance": {
          "$ref": "#/definitions/TenantInstance"
        },
        "vmFolderMoRef": {
          "type": "string"
        },
        "encryptionInstance": {
          "$ref": "#/definitions/EncryptionInstance"
        },
        "ovfName": {
          "type": "string"
        },
        "isoName": {
          "type": "string"
        },
        "ovfIpConfiguration": {
          "type": "boolean"
        },
        "initialUserName": {
          "type": "string"
        },
        "osType": {
          "$ref": "#/definitions/OsType"
        },
        "licSettings": {
          "$ref": "#/definitions/LicSettings"
        },
        "currentSnapshotMoRef": {
          "type": "string"
        },
        "currentSnapshotId": {
          "format": "uuid",
          "type": "string"
        },
        "computeSite": {
          "$ref": "#/definitions/ComputeSiteInstance"
        },
        "isoInstance": {
          "$ref": "#/definitions/IsoInstance"
        },
        "ipAddress": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "primaryDnsAddress": {
          "type": "string"
        },
        "secondaryDnsAddress": {
          "type": "string"
        },
        "dnsSuffix": {
          "type": "string"
        },
        "dnsSearchSuffix": {
          "type": "string"
        },
        "primaryWinsAddress": {
          "type": "string"
        },
        "secondaryWinsAddress": {
          "type": "string"
        },
        "guestToolsStatus": {
          "type": "boolean"
        },
        "currentTotalCost": {
          "format": "double",
          "type": "number"
        },
        "currentDiscountValue": {
          "format": "double",
          "type": "number"
        },
        "diskFilesSizeKB": {
          "format": "int64",
          "type": "integer"
        },
        "totalDisksSizeMB": {
          "format": "int64",
          "type": "integer"
        },
        "readOnly": {
          "type": "boolean"
        },
        "folderPath": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "VirtualMachineReportElement": {
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "format": "uuid",
          "type": "string"
        },
        "virtualMachineName": {
          "type": "string"
        },
        "virtualMachineGuest": {
          "type": "string"
        },
        "osType": {
          "$ref": "#/definitions/OsType"
        },
        "storagePolicy": {
          "type": "string"
        },
        "allocatedvCPU": {
          "format": "int32",
          "type": "integer"
        },
        "allocatedvRAM": {
          "format": "int32",
          "type": "integer"
        },
        "allocatedStorageGB": {
          "format": "float",
          "type": "number"
        },
        "storageTotalUsedGB": {
          "format": "float",
          "type": "number"
        },
        "configTimeAllocation": {
          "format": "int32",
          "type": "integer"
        },
        "configmTimeAllocationWhenPoweredOn": {
          "format": "int32",
          "type": "integer"
        },
        "resourceUsageTime": {
          "type": "string"
        },
        "totalHoursAllocated": {
          "format": "int32",
          "type": "integer"
        },
        "totalHoursPoweredOn": {
          "format": "int32",
          "type": "integer"
        },
        "totalHours": {
          "format": "int32",
          "type": "integer"
        },
        "cpuCost": {
          "format": "float",
          "type": "number"
        },
        "ramCost": {
          "format": "float",
          "type": "number"
        },
        "storageCost": {
          "format": "float",
          "type": "number"
        },
        "discountPercentage": {
          "format": "float",
          "type": "number"
        },
        "discountCpuCost": {
          "format": "float",
          "type": "number"
        },
        "discountRAMCost": {
          "format": "float",
          "type": "number"
        },
        "cost": {
          "format": "float",
          "type": "number"
        },
        "totalCostAfterDiscount": {
          "format": "float",
          "type": "number"
        },
        "totalCostAfterDiscountWithLicense": {
          "format": "float",
          "type": "number"
        },
        "discountValue": {
          "format": "float",
          "type": "number"
        },
        "tags": {
          "type": "string"
        },
        "estimatedMonthlyCost": {
          "format": "float",
          "type": "number"
        },
        "licenseCost": {
          "format": "float",
          "type": "number"
        },
        "snapshotGB": {
          "format": "float",
          "type": "number"
        },
        "snapshotCost": {
          "format": "float",
          "type": "number"
        },
        "currentReportHours": {
          "format": "int32",
          "type": "integer"
        },
        "configCounts": {
          "format": "int32",
          "type": "integer"
        },
        "runningTimePerc": {
          "format": "int32",
          "type": "integer"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoringValue": {
          "format": "float",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "VirtualMachineResourceProfile": {
      "enum": [
        "SIZE_XS",
        "SIZE_S",
        "SIZE_M",
        "SIZE_L",
        "SIZE_XL",
        "CUSTOM"
      ],
      "type": "string"
    },
    "VirtualMachineTicket": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "VirtualNetworkDevice": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "virtualNetworkInstance": {
          "$ref": "#/definitions/VirtualNetworkInstance"
        }
      },
      "additionalProperties": false
    },
    "VirtualNetworkInstance": {
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "ipamEnabled": {
          "type": "boolean"
        },
        "routerRefId": {
          "format": "uuid",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "subnet": {
          "$ref": "#/definitions/SegmentSubnetInstance"
        },
        "subnetMask": {
          "type": "string"
        },
        "gatewayAddress": {
          "type": "string"
        },
        "vcsNetworkId": {
          "format": "uuid",
          "type": "string"
        },
        "segmentId": {
          "format": "uuid",
          "type": "string"
        },
        "oscNetworkId": {
          "format": "uuid",
          "type": "string"
        },
        "networkProfileId": {
          "format": "uuid",
          "type": "string"
        },
        "projectId": {
          "format": "uuid",
          "type": "string"
        },
        "folderPath": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
