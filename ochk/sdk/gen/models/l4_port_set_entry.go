// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// L4PortSetEntry L4PortSetEntry
//
// swagger:model L4PortSetEntry
type L4PortSetEntry struct {

	// description
	Description string `json:"description,omitempty"`

	// destination ports
	DestinationPorts []string `json:"destinationPorts"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// l4 port set entry Id
	L4PortSetEntryID string `json:"l4PortSetEntryId,omitempty"`

	// l4 protocol
	// Enum: [TCP UDP]
	L4Protocol string `json:"l4Protocol,omitempty"`

	// parent path
	ParentPath string `json:"parentPath,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// relative path
	RelativePath string `json:"relativePath,omitempty"`

	// resource type
	ResourceType *ResourceType `json:"resourceType,omitempty"`

	// source ports
	SourcePorts []string `json:"sourcePorts"`
}

// Validate validates this l4 port set entry
func (m *L4PortSetEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateL4Protocol(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var l4PortSetEntryTypeL4ProtocolPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TCP","UDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		l4PortSetEntryTypeL4ProtocolPropEnum = append(l4PortSetEntryTypeL4ProtocolPropEnum, v)
	}
}

const (

	// L4PortSetEntryL4ProtocolTCP captures enum value "TCP"
	L4PortSetEntryL4ProtocolTCP string = "TCP"

	// L4PortSetEntryL4ProtocolUDP captures enum value "UDP"
	L4PortSetEntryL4ProtocolUDP string = "UDP"
)

// prop value enum
func (m *L4PortSetEntry) validateL4ProtocolEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, l4PortSetEntryTypeL4ProtocolPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *L4PortSetEntry) validateL4Protocol(formats strfmt.Registry) error {

	if swag.IsZero(m.L4Protocol) { // not required
		return nil
	}

	// value enum
	if err := m.validateL4ProtocolEnum("l4Protocol", "body", m.L4Protocol); err != nil {
		return err
	}

	return nil
}

func (m *L4PortSetEntry) validateResourceType(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceType) { // not required
		return nil
	}

	if m.ResourceType != nil {
		if err := m.ResourceType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resourceType")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *L4PortSetEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *L4PortSetEntry) UnmarshalBinary(b []byte) error {
	var res L4PortSetEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
