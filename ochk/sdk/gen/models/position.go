// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Position Position
//
// swagger:model Position
type Position struct {

	// revise operation
	// Enum: [AFTER BEFORE BOTTOM TOP]
	ReviseOperation string `json:"reviseOperation,omitempty"`

	// rule Id
	RuleID string `json:"ruleId,omitempty"`
}

// Validate validates this position
func (m *Position) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReviseOperation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var positionTypeReviseOperationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AFTER","BEFORE","BOTTOM","TOP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		positionTypeReviseOperationPropEnum = append(positionTypeReviseOperationPropEnum, v)
	}
}

const (

	// PositionReviseOperationAFTER captures enum value "AFTER"
	PositionReviseOperationAFTER string = "AFTER"

	// PositionReviseOperationBEFORE captures enum value "BEFORE"
	PositionReviseOperationBEFORE string = "BEFORE"

	// PositionReviseOperationBOTTOM captures enum value "BOTTOM"
	PositionReviseOperationBOTTOM string = "BOTTOM"

	// PositionReviseOperationTOP captures enum value "TOP"
	PositionReviseOperationTOP string = "TOP"
)

// prop value enum
func (m *Position) validateReviseOperationEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, positionTypeReviseOperationPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Position) validateReviseOperation(formats strfmt.Registry) error {

	if swag.IsZero(m.ReviseOperation) { // not required
		return nil
	}

	// value enum
	if err := m.validateReviseOperationEnum("reviseOperation", "body", m.ReviseOperation); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Position) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Position) UnmarshalBinary(b []byte) error {
	var res Position
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
