// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserInstance UserInstance
//
// swagger:model UserInstance
type UserInstance struct {

	// description
	Description string `json:"description,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`

	// email address
	EmailAddress string `json:"emailAddress,omitempty"`

	// first name
	FirstName string `json:"firstName,omitempty"`

	// last name
	LastName string `json:"lastName,omitempty"`

	// locked
	Locked bool `json:"locked,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// principal Id
	PrincipalID *PrincipalID `json:"principalId,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`

	// user principal name
	UserPrincipalName string `json:"userPrincipalName,omitempty"`
}

// Validate validates this user instance
func (m *UserInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrincipalID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserInstance) validatePrincipalID(formats strfmt.Registry) error {

	if swag.IsZero(m.PrincipalID) { // not required
		return nil
	}

	if m.PrincipalID != nil {
		if err := m.PrincipalID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("principalId")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserInstance) UnmarshalBinary(b []byte) error {
	var res UserInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
