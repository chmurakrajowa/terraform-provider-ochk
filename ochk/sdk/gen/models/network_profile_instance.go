// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetworkProfileInstance NetworkProfileInstance
//
// swagger:model NetworkProfileInstance
type NetworkProfileInstance struct {

	// at type
	AtType string `json:"@type,omitempty"`

	// created date
	// Format: date-time
	CreatedDate strfmt.DateTime `json:"createdDate,omitempty"`

	// defined ranges
	DefinedRanges []*StaticIPV4Range `json:"definedRanges"`

	// description
	Description string `json:"description,omitempty"`

	// dns search suffix
	DNSSearchSuffix string `json:"dnsSearchSuffix,omitempty"`

	// dns suffix
	DNSSuffix string `json:"dnsSuffix,omitempty"`

	// gateway address
	GatewayAddress string `json:"gatewayAddress,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is hidden
	IsHidden bool `json:"isHidden,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// last modified date
	// Format: date-time
	LastModifiedDate strfmt.DateTime `json:"lastModifiedDate,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// network profile Id
	NetworkProfileID string `json:"networkProfileId,omitempty"`

	// primary Dns address
	PrimaryDNSAddress string `json:"primaryDnsAddress,omitempty"`

	// primary wins address
	PrimaryWinsAddress string `json:"primaryWinsAddress,omitempty"`

	// profile type
	// Enum: [EXTERNAL NAT PRIVATE ROUTED]
	ProfileType string `json:"profileType,omitempty"`

	// secondary Dns address
	SecondaryDNSAddress string `json:"secondaryDnsAddress,omitempty"`

	// secondary wins address
	SecondaryWinsAddress string `json:"secondaryWinsAddress,omitempty"`

	// subnet mask
	SubnetMask string `json:"subnetMask,omitempty"`

	// tenant Id
	TenantID string `json:"tenantId,omitempty"`
}

// Validate validates this network profile instance
func (m *NetworkProfileInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefinedRanges(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProfileType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NetworkProfileInstance) validateCreatedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("createdDate", "body", "date-time", m.CreatedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NetworkProfileInstance) validateDefinedRanges(formats strfmt.Registry) error {

	if swag.IsZero(m.DefinedRanges) { // not required
		return nil
	}

	for i := 0; i < len(m.DefinedRanges); i++ {
		if swag.IsZero(m.DefinedRanges[i]) { // not required
			continue
		}

		if m.DefinedRanges[i] != nil {
			if err := m.DefinedRanges[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("definedRanges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NetworkProfileInstance) validateLastModifiedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("lastModifiedDate", "body", "date-time", m.LastModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var networkProfileInstanceTypeProfileTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["EXTERNAL","NAT","PRIVATE","ROUTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		networkProfileInstanceTypeProfileTypePropEnum = append(networkProfileInstanceTypeProfileTypePropEnum, v)
	}
}

const (

	// NetworkProfileInstanceProfileTypeEXTERNAL captures enum value "EXTERNAL"
	NetworkProfileInstanceProfileTypeEXTERNAL string = "EXTERNAL"

	// NetworkProfileInstanceProfileTypeNAT captures enum value "NAT"
	NetworkProfileInstanceProfileTypeNAT string = "NAT"

	// NetworkProfileInstanceProfileTypePRIVATE captures enum value "PRIVATE"
	NetworkProfileInstanceProfileTypePRIVATE string = "PRIVATE"

	// NetworkProfileInstanceProfileTypeROUTED captures enum value "ROUTED"
	NetworkProfileInstanceProfileTypeROUTED string = "ROUTED"
)

// prop value enum
func (m *NetworkProfileInstance) validateProfileTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, networkProfileInstanceTypeProfileTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NetworkProfileInstance) validateProfileType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProfileType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProfileTypeEnum("profileType", "body", m.ProfileType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NetworkProfileInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworkProfileInstance) UnmarshalBinary(b []byte) error {
	var res NetworkProfileInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
