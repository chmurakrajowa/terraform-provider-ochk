// Code generated by go-swagger; DO NOT EDIT.

package principals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// PrincipalGetUsingGETReader is a Reader for the PrincipalGetUsingGET structure.
type PrincipalGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrincipalGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPrincipalGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPrincipalGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPrincipalGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPrincipalGetUsingGETOK creates a PrincipalGetUsingGETOK with default headers values
func NewPrincipalGetUsingGETOK() *PrincipalGetUsingGETOK {
	return &PrincipalGetUsingGETOK{}
}

/*PrincipalGetUsingGETOK handles this case with default header values.

OK
*/
type PrincipalGetUsingGETOK struct {
	Payload *models.PrincipalGetResponse
}

func (o *PrincipalGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /identity/principals/{principalId}][%d] principalGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *PrincipalGetUsingGETOK) GetPayload() *models.PrincipalGetResponse {
	return o.Payload
}

func (o *PrincipalGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrincipalGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrincipalGetUsingGETBadRequest creates a PrincipalGetUsingGETBadRequest with default headers values
func NewPrincipalGetUsingGETBadRequest() *PrincipalGetUsingGETBadRequest {
	return &PrincipalGetUsingGETBadRequest{}
}

/*PrincipalGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type PrincipalGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *PrincipalGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /identity/principals/{principalId}][%d] principalGetUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *PrincipalGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *PrincipalGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrincipalGetUsingGETNotFound creates a PrincipalGetUsingGETNotFound with default headers values
func NewPrincipalGetUsingGETNotFound() *PrincipalGetUsingGETNotFound {
	return &PrincipalGetUsingGETNotFound{}
}

/*PrincipalGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type PrincipalGetUsingGETNotFound struct {
}

func (o *PrincipalGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /identity/principals/{principalId}][%d] principalGetUsingGETNotFound ", 404)
}

func (o *PrincipalGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
