// Code generated by go-swagger; DO NOT EDIT.

package custom_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// CustomServiceGetUsingGETReader is a Reader for the CustomServiceGetUsingGET structure.
type CustomServiceGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomServiceGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomServiceGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCustomServiceGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCustomServiceGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCustomServiceGetUsingGETOK creates a CustomServiceGetUsingGETOK with default headers values
func NewCustomServiceGetUsingGETOK() *CustomServiceGetUsingGETOK {
	return &CustomServiceGetUsingGETOK{}
}

/*CustomServiceGetUsingGETOK handles this case with default header values.

OK
*/
type CustomServiceGetUsingGETOK struct {
	Payload *models.CustomServiceGetResponse
}

func (o *CustomServiceGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/custom-services/{serviceId}][%d] customServiceGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *CustomServiceGetUsingGETOK) GetPayload() *models.CustomServiceGetResponse {
	return o.Payload
}

func (o *CustomServiceGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomServiceGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomServiceGetUsingGETBadRequest creates a CustomServiceGetUsingGETBadRequest with default headers values
func NewCustomServiceGetUsingGETBadRequest() *CustomServiceGetUsingGETBadRequest {
	return &CustomServiceGetUsingGETBadRequest{}
}

/*CustomServiceGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type CustomServiceGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *CustomServiceGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/custom-services/{serviceId}][%d] customServiceGetUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *CustomServiceGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *CustomServiceGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomServiceGetUsingGETNotFound creates a CustomServiceGetUsingGETNotFound with default headers values
func NewCustomServiceGetUsingGETNotFound() *CustomServiceGetUsingGETNotFound {
	return &CustomServiceGetUsingGETNotFound{}
}

/*CustomServiceGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type CustomServiceGetUsingGETNotFound struct {
}

func (o *CustomServiceGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /network/custom-services/{serviceId}][%d] customServiceGetUsingGETNotFound ", 404)
}

func (o *CustomServiceGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
