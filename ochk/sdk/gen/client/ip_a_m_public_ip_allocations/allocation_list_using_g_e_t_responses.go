// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m_public_ip_allocations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// AllocationListUsingGETReader is a Reader for the AllocationListUsingGET structure.
type AllocationListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllocationListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllocationListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllocationListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllocationListUsingGETOK creates a AllocationListUsingGETOK with default headers values
func NewAllocationListUsingGETOK() *AllocationListUsingGETOK {
	return &AllocationListUsingGETOK{}
}

/*AllocationListUsingGETOK handles this case with default header values.

OK
*/
type AllocationListUsingGETOK struct {
	Payload *models.PublicIPAllocationListResponse
}

func (o *AllocationListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] allocationListUsingGETOK  %+v", 200, o.Payload)
}

func (o *AllocationListUsingGETOK) GetPayload() *models.PublicIPAllocationListResponse {
	return o.Payload
}

func (o *AllocationListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PublicIPAllocationListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllocationListUsingGETBadRequest creates a AllocationListUsingGETBadRequest with default headers values
func NewAllocationListUsingGETBadRequest() *AllocationListUsingGETBadRequest {
	return &AllocationListUsingGETBadRequest{}
}

/*AllocationListUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type AllocationListUsingGETBadRequest struct {
}

func (o *AllocationListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /ipam/ipaddress/public/allocation][%d] allocationListUsingGETBadRequest ", 400)
}

func (o *AllocationListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
