// Code generated by go-swagger; DO NOT EDIT.

package ip_collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewIPCollectionCreateUsingPUTParams creates a new IPCollectionCreateUsingPUTParams object
// with the default values initialized.
func NewIPCollectionCreateUsingPUTParams() *IPCollectionCreateUsingPUTParams {
	var ()
	return &IPCollectionCreateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewIPCollectionCreateUsingPUTParamsWithTimeout creates a new IPCollectionCreateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewIPCollectionCreateUsingPUTParamsWithTimeout(timeout time.Duration) *IPCollectionCreateUsingPUTParams {
	var ()
	return &IPCollectionCreateUsingPUTParams{

		timeout: timeout,
	}
}

// NewIPCollectionCreateUsingPUTParamsWithContext creates a new IPCollectionCreateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewIPCollectionCreateUsingPUTParamsWithContext(ctx context.Context) *IPCollectionCreateUsingPUTParams {
	var ()
	return &IPCollectionCreateUsingPUTParams{

		Context: ctx,
	}
}

// NewIPCollectionCreateUsingPUTParamsWithHTTPClient creates a new IPCollectionCreateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewIPCollectionCreateUsingPUTParamsWithHTTPClient(client *http.Client) *IPCollectionCreateUsingPUTParams {
	var ()
	return &IPCollectionCreateUsingPUTParams{
		HTTPClient: client,
	}
}

/*IPCollectionCreateUsingPUTParams contains all the parameters to send to the API endpoint
for the ip collection create using p u t operation typically these are written to a http.Request
*/
type IPCollectionCreateUsingPUTParams struct {

	/*IPCollection
	  ipCollection

	*/
	IPCollection *models.IPCollection

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) WithTimeout(timeout time.Duration) *IPCollectionCreateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) WithContext(ctx context.Context) *IPCollectionCreateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) WithHTTPClient(client *http.Client) *IPCollectionCreateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIPCollection adds the iPCollection to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) WithIPCollection(iPCollection *models.IPCollection) *IPCollectionCreateUsingPUTParams {
	o.SetIPCollection(iPCollection)
	return o
}

// SetIPCollection adds the ipCollection to the ip collection create using p u t params
func (o *IPCollectionCreateUsingPUTParams) SetIPCollection(iPCollection *models.IPCollection) {
	o.IPCollection = iPCollection
}

// WriteToRequest writes these params to a swagger request
func (o *IPCollectionCreateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IPCollection != nil {
		if err := r.SetBodyParam(o.IPCollection); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
