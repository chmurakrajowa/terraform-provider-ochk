// Code generated by go-swagger; DO NOT EDIT.

package network_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NetworkProfileListUsingGETReader is a Reader for the NetworkProfileListUsingGET structure.
type NetworkProfileListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkProfileListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNetworkProfileListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNetworkProfileListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetworkProfileListUsingGETOK creates a NetworkProfileListUsingGETOK with default headers values
func NewNetworkProfileListUsingGETOK() *NetworkProfileListUsingGETOK {
	return &NetworkProfileListUsingGETOK{}
}

/*NetworkProfileListUsingGETOK handles this case with default header values.

OK
*/
type NetworkProfileListUsingGETOK struct {
	Payload *models.NetworkProfileListResponse
}

func (o *NetworkProfileListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /vra/networkprofiles][%d] networkProfileListUsingGETOK  %+v", 200, o.Payload)
}

func (o *NetworkProfileListUsingGETOK) GetPayload() *models.NetworkProfileListResponse {
	return o.Payload
}

func (o *NetworkProfileListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkProfileListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkProfileListUsingGETBadRequest creates a NetworkProfileListUsingGETBadRequest with default headers values
func NewNetworkProfileListUsingGETBadRequest() *NetworkProfileListUsingGETBadRequest {
	return &NetworkProfileListUsingGETBadRequest{}
}

/*NetworkProfileListUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type NetworkProfileListUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *NetworkProfileListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /vra/networkprofiles][%d] networkProfileListUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *NetworkProfileListUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *NetworkProfileListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
