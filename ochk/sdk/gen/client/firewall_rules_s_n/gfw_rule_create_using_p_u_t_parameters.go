// Code generated by go-swagger; DO NOT EDIT.

package firewall_rules_s_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewGfwRuleCreateUsingPUTParams creates a new GfwRuleCreateUsingPUTParams object
// with the default values initialized.
func NewGfwRuleCreateUsingPUTParams() *GfwRuleCreateUsingPUTParams {
	var ()
	return &GfwRuleCreateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGfwRuleCreateUsingPUTParamsWithTimeout creates a new GfwRuleCreateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGfwRuleCreateUsingPUTParamsWithTimeout(timeout time.Duration) *GfwRuleCreateUsingPUTParams {
	var ()
	return &GfwRuleCreateUsingPUTParams{

		timeout: timeout,
	}
}

// NewGfwRuleCreateUsingPUTParamsWithContext creates a new GfwRuleCreateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewGfwRuleCreateUsingPUTParamsWithContext(ctx context.Context) *GfwRuleCreateUsingPUTParams {
	var ()
	return &GfwRuleCreateUsingPUTParams{

		Context: ctx,
	}
}

// NewGfwRuleCreateUsingPUTParamsWithHTTPClient creates a new GfwRuleCreateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGfwRuleCreateUsingPUTParamsWithHTTPClient(client *http.Client) *GfwRuleCreateUsingPUTParams {
	var ()
	return &GfwRuleCreateUsingPUTParams{
		HTTPClient: client,
	}
}

/*GfwRuleCreateUsingPUTParams contains all the parameters to send to the API endpoint
for the gfw rule create using p u t operation typically these are written to a http.Request
*/
type GfwRuleCreateUsingPUTParams struct {

	/*GfwRule
	  gfwRule

	*/
	GfwRule *models.GFWRule
	/*RouterID
	  routerId

	*/
	RouterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) WithTimeout(timeout time.Duration) *GfwRuleCreateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) WithContext(ctx context.Context) *GfwRuleCreateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) WithHTTPClient(client *http.Client) *GfwRuleCreateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGfwRule adds the gfwRule to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) WithGfwRule(gfwRule *models.GFWRule) *GfwRuleCreateUsingPUTParams {
	o.SetGfwRule(gfwRule)
	return o
}

// SetGfwRule adds the gfwRule to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) SetGfwRule(gfwRule *models.GFWRule) {
	o.GfwRule = gfwRule
}

// WithRouterID adds the routerID to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) WithRouterID(routerID string) *GfwRuleCreateUsingPUTParams {
	o.SetRouterID(routerID)
	return o
}

// SetRouterID adds the routerId to the gfw rule create using p u t params
func (o *GfwRuleCreateUsingPUTParams) SetRouterID(routerID string) {
	o.RouterID = routerID
}

// WriteToRequest writes these params to a swagger request
func (o *GfwRuleCreateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.GfwRule != nil {
		if err := r.SetBodyParam(o.GfwRule); err != nil {
			return err
		}
	}

	// path param routerId
	if err := r.SetPathParam("routerId", o.RouterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
