// Code generated by go-swagger; DO NOT EDIT.

package firewall_rules_s_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GfwRuleGetUsingGETReader is a Reader for the GfwRuleGetUsingGET structure.
type GfwRuleGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GfwRuleGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGfwRuleGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGfwRuleGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGfwRuleGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGfwRuleGetUsingGETOK creates a GfwRuleGetUsingGETOK with default headers values
func NewGfwRuleGetUsingGETOK() *GfwRuleGetUsingGETOK {
	return &GfwRuleGetUsingGETOK{}
}

/* GfwRuleGetUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GfwRuleGetUsingGETOK struct {
	Payload *models.GFWRuleGetResponse
}

func (o *GfwRuleGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] gfwRuleGetUsingGETOK  %+v", 200, o.Payload)
}
func (o *GfwRuleGetUsingGETOK) GetPayload() *models.GFWRuleGetResponse {
	return o.Payload
}

func (o *GfwRuleGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GFWRuleGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGfwRuleGetUsingGETBadRequest creates a GfwRuleGetUsingGETBadRequest with default headers values
func NewGfwRuleGetUsingGETBadRequest() *GfwRuleGetUsingGETBadRequest {
	return &GfwRuleGetUsingGETBadRequest{}
}

/* GfwRuleGetUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GfwRuleGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *GfwRuleGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] gfwRuleGetUsingGETBadRequest  %+v", 400, o.Payload)
}
func (o *GfwRuleGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GfwRuleGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGfwRuleGetUsingGETNotFound creates a GfwRuleGetUsingGETNotFound with default headers values
func NewGfwRuleGetUsingGETNotFound() *GfwRuleGetUsingGETNotFound {
	return &GfwRuleGetUsingGETNotFound{}
}

/* GfwRuleGetUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found.
*/
type GfwRuleGetUsingGETNotFound struct {
}

func (o *GfwRuleGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n/{ruleId}][%d] gfwRuleGetUsingGETNotFound ", 404)
}

func (o *GfwRuleGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
