// Code generated by go-swagger; DO NOT EDIT.

package firewall_rules_s_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GfwRuleListUsingGETReader is a Reader for the GfwRuleListUsingGET structure.
type GfwRuleListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GfwRuleListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGfwRuleListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGfwRuleListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGfwRuleListUsingGETOK creates a GfwRuleListUsingGETOK with default headers values
func NewGfwRuleListUsingGETOK() *GfwRuleListUsingGETOK {
	return &GfwRuleListUsingGETOK{}
}

/*GfwRuleListUsingGETOK handles this case with default header values.

OK
*/
type GfwRuleListUsingGETOK struct {
	Payload *models.GFWRuleListResponse
}

func (o *GfwRuleListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n][%d] gfwRuleListUsingGETOK  %+v", 200, o.Payload)
}

func (o *GfwRuleListUsingGETOK) GetPayload() *models.GFWRuleListResponse {
	return o.Payload
}

func (o *GfwRuleListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GFWRuleListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGfwRuleListUsingGETBadRequest creates a GfwRuleListUsingGETBadRequest with default headers values
func NewGfwRuleListUsingGETBadRequest() *GfwRuleListUsingGETBadRequest {
	return &GfwRuleListUsingGETBadRequest{}
}

/*GfwRuleListUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GfwRuleListUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *GfwRuleListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/routers/{routerId}/rules/s-n][%d] gfwRuleListUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GfwRuleListUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GfwRuleListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
