// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/active_directory_groups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/active_directory_public_key"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/active_directory_r_s_a_public_key"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/active_directory_sync"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/active_directory_users"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/admin_tenant_overall_allocation"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/admin_virtual_machine_overall_report"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/backups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/billing_tags"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/context_profiles"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/custom_services"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/default_services"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/deployments"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/edge_clusters"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/firewall_rules_e_w"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/firewall_rules_s_n"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/gateway_policies"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/groups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/ip_a_m_available_public_ip_address"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/ip_a_m_public_ip_allocations"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/ip_a_m_services"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/ip_collections"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/k_m_s_key_management"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/k_m_s_key_rotation_scheduler"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/local_groups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/log_categories"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/logical_ports"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/m_c_s_secret"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/n_a_t_rules"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/network_profiles"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/networks"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/principals"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/requests"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/resource_pools"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/routers"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/security_groups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/security_policies"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/snapshots"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/subtenant_custom_groups"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/subtenants"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/system_tags"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/tenants"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/users"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/v_id_m"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/virtual_machine_overall_reports"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/virtual_machine_performance_reports"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/virtual_machines"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/virtual_networks"
	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/client/w_s_o2_token"
)

// Default ochk HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "iaas-api-proxy.ochk.pilot"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new ochk HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Ochk {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new ochk HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Ochk {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new ochk client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Ochk {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Ochk)
	cli.Transport = transport
	cli.ActiveDirectoryGroups = active_directory_groups.New(transport, formats)
	cli.ActiveDirectoryPublicKey = active_directory_public_key.New(transport, formats)
	cli.ActiveDirectoryrsaPublicKey = active_directory_r_s_a_public_key.New(transport, formats)
	cli.ActiveDirectorySync = active_directory_sync.New(transport, formats)
	cli.ActiveDirectoryUsers = active_directory_users.New(transport, formats)
	cli.AdminTenantOverallAllocation = admin_tenant_overall_allocation.New(transport, formats)
	cli.AdminVirtualMachineOverallReport = admin_virtual_machine_overall_report.New(transport, formats)
	cli.Backups = backups.New(transport, formats)
	cli.BillingTags = billing_tags.New(transport, formats)
	cli.ContextProfiles = context_profiles.New(transport, formats)
	cli.CustomServices = custom_services.New(transport, formats)
	cli.DefaultServices = default_services.New(transport, formats)
	cli.Deployments = deployments.New(transport, formats)
	cli.EdgeClusters = edge_clusters.New(transport, formats)
	cli.FirewallRulesew = firewall_rules_e_w.New(transport, formats)
	cli.FirewallRulessn = firewall_rules_s_n.New(transport, formats)
	cli.GatewayPolicies = gateway_policies.New(transport, formats)
	cli.Groups = groups.New(transport, formats)
	cli.IPamAvailablePublicIPAddress = ip_a_m_available_public_ip_address.New(transport, formats)
	cli.IPamPublicIPAllocations = ip_a_m_public_ip_allocations.New(transport, formats)
	cli.IPamServices = ip_a_m_services.New(transport, formats)
	cli.IPCollections = ip_collections.New(transport, formats)
	cli.KmsKeyManagement = k_m_s_key_management.New(transport, formats)
	cli.KmsKeyRotationScheduler = k_m_s_key_rotation_scheduler.New(transport, formats)
	cli.LocalGroups = local_groups.New(transport, formats)
	cli.LogCategories = log_categories.New(transport, formats)
	cli.LogicalPorts = logical_ports.New(transport, formats)
	cli.McsSecret = m_c_s_secret.New(transport, formats)
	cli.NatRules = n_a_t_rules.New(transport, formats)
	cli.NetworkProfiles = network_profiles.New(transport, formats)
	cli.Networks = networks.New(transport, formats)
	cli.Principals = principals.New(transport, formats)
	cli.Requests = requests.New(transport, formats)
	cli.ResourcePools = resource_pools.New(transport, formats)
	cli.Routers = routers.New(transport, formats)
	cli.SecurityGroups = security_groups.New(transport, formats)
	cli.SecurityPolicies = security_policies.New(transport, formats)
	cli.Snapshots = snapshots.New(transport, formats)
	cli.SubtenantCustomGroups = subtenant_custom_groups.New(transport, formats)
	cli.Subtenants = subtenants.New(transport, formats)
	cli.SystemTags = system_tags.New(transport, formats)
	cli.Tenants = tenants.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.VIDm = v_id_m.New(transport, formats)
	cli.VirtualMachineOverallReports = virtual_machine_overall_reports.New(transport, formats)
	cli.VirtualMachinePerformanceReports = virtual_machine_performance_reports.New(transport, formats)
	cli.VirtualMachines = virtual_machines.New(transport, formats)
	cli.VirtualNetworks = virtual_networks.New(transport, formats)
	cli.WsO2Token = w_s_o2_token.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Ochk is a client for ochk
type Ochk struct {
	ActiveDirectoryGroups active_directory_groups.ClientService

	ActiveDirectoryPublicKey active_directory_public_key.ClientService

	ActiveDirectoryrsaPublicKey active_directory_r_s_a_public_key.ClientService

	ActiveDirectorySync active_directory_sync.ClientService

	ActiveDirectoryUsers active_directory_users.ClientService

	AdminTenantOverallAllocation admin_tenant_overall_allocation.ClientService

	AdminVirtualMachineOverallReport admin_virtual_machine_overall_report.ClientService

	Backups backups.ClientService

	BillingTags billing_tags.ClientService

	ContextProfiles context_profiles.ClientService

	CustomServices custom_services.ClientService

	DefaultServices default_services.ClientService

	Deployments deployments.ClientService

	EdgeClusters edge_clusters.ClientService

	FirewallRulesew firewall_rules_e_w.ClientService

	FirewallRulessn firewall_rules_s_n.ClientService

	GatewayPolicies gateway_policies.ClientService

	Groups groups.ClientService

	IPamAvailablePublicIPAddress ip_a_m_available_public_ip_address.ClientService

	IPamPublicIPAllocations ip_a_m_public_ip_allocations.ClientService

	IPamServices ip_a_m_services.ClientService

	IPCollections ip_collections.ClientService

	KmsKeyManagement k_m_s_key_management.ClientService

	KmsKeyRotationScheduler k_m_s_key_rotation_scheduler.ClientService

	LocalGroups local_groups.ClientService

	LogCategories log_categories.ClientService

	LogicalPorts logical_ports.ClientService

	McsSecret m_c_s_secret.ClientService

	NatRules n_a_t_rules.ClientService

	NetworkProfiles network_profiles.ClientService

	Networks networks.ClientService

	Principals principals.ClientService

	Requests requests.ClientService

	ResourcePools resource_pools.ClientService

	Routers routers.ClientService

	SecurityGroups security_groups.ClientService

	SecurityPolicies security_policies.ClientService

	Snapshots snapshots.ClientService

	SubtenantCustomGroups subtenant_custom_groups.ClientService

	Subtenants subtenants.ClientService

	SystemTags system_tags.ClientService

	Tenants tenants.ClientService

	Users users.ClientService

	VIDm v_id_m.ClientService

	VirtualMachineOverallReports virtual_machine_overall_reports.ClientService

	VirtualMachinePerformanceReports virtual_machine_performance_reports.ClientService

	VirtualMachines virtual_machines.ClientService

	VirtualNetworks virtual_networks.ClientService

	WsO2Token w_s_o2_token.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Ochk) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.ActiveDirectoryGroups.SetTransport(transport)
	c.ActiveDirectoryPublicKey.SetTransport(transport)
	c.ActiveDirectoryrsaPublicKey.SetTransport(transport)
	c.ActiveDirectorySync.SetTransport(transport)
	c.ActiveDirectoryUsers.SetTransport(transport)
	c.AdminTenantOverallAllocation.SetTransport(transport)
	c.AdminVirtualMachineOverallReport.SetTransport(transport)
	c.Backups.SetTransport(transport)
	c.BillingTags.SetTransport(transport)
	c.ContextProfiles.SetTransport(transport)
	c.CustomServices.SetTransport(transport)
	c.DefaultServices.SetTransport(transport)
	c.Deployments.SetTransport(transport)
	c.EdgeClusters.SetTransport(transport)
	c.FirewallRulesew.SetTransport(transport)
	c.FirewallRulessn.SetTransport(transport)
	c.GatewayPolicies.SetTransport(transport)
	c.Groups.SetTransport(transport)
	c.IPamAvailablePublicIPAddress.SetTransport(transport)
	c.IPamPublicIPAllocations.SetTransport(transport)
	c.IPamServices.SetTransport(transport)
	c.IPCollections.SetTransport(transport)
	c.KmsKeyManagement.SetTransport(transport)
	c.KmsKeyRotationScheduler.SetTransport(transport)
	c.LocalGroups.SetTransport(transport)
	c.LogCategories.SetTransport(transport)
	c.LogicalPorts.SetTransport(transport)
	c.McsSecret.SetTransport(transport)
	c.NatRules.SetTransport(transport)
	c.NetworkProfiles.SetTransport(transport)
	c.Networks.SetTransport(transport)
	c.Principals.SetTransport(transport)
	c.Requests.SetTransport(transport)
	c.ResourcePools.SetTransport(transport)
	c.Routers.SetTransport(transport)
	c.SecurityGroups.SetTransport(transport)
	c.SecurityPolicies.SetTransport(transport)
	c.Snapshots.SetTransport(transport)
	c.SubtenantCustomGroups.SetTransport(transport)
	c.Subtenants.SetTransport(transport)
	c.SystemTags.SetTransport(transport)
	c.Tenants.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.VIDm.SetTransport(transport)
	c.VirtualMachineOverallReports.SetTransport(transport)
	c.VirtualMachinePerformanceReports.SetTransport(transport)
	c.VirtualMachines.SetTransport(transport)
	c.VirtualNetworks.SetTransport(transport)
	c.WsO2Token.SetTransport(transport)
}
