// Code generated by go-swagger; DO NOT EDIT.

package system_tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewSystemTagCreateUsingPUTParams creates a new SystemTagCreateUsingPUTParams object
// with the default values initialized.
func NewSystemTagCreateUsingPUTParams() *SystemTagCreateUsingPUTParams {
	var ()
	return &SystemTagCreateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSystemTagCreateUsingPUTParamsWithTimeout creates a new SystemTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSystemTagCreateUsingPUTParamsWithTimeout(timeout time.Duration) *SystemTagCreateUsingPUTParams {
	var ()
	return &SystemTagCreateUsingPUTParams{

		timeout: timeout,
	}
}

// NewSystemTagCreateUsingPUTParamsWithContext creates a new SystemTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewSystemTagCreateUsingPUTParamsWithContext(ctx context.Context) *SystemTagCreateUsingPUTParams {
	var ()
	return &SystemTagCreateUsingPUTParams{

		Context: ctx,
	}
}

// NewSystemTagCreateUsingPUTParamsWithHTTPClient creates a new SystemTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSystemTagCreateUsingPUTParamsWithHTTPClient(client *http.Client) *SystemTagCreateUsingPUTParams {
	var ()
	return &SystemTagCreateUsingPUTParams{
		HTTPClient: client,
	}
}

/*SystemTagCreateUsingPUTParams contains all the parameters to send to the API endpoint
for the system tag create using p u t operation typically these are written to a http.Request
*/
type SystemTagCreateUsingPUTParams struct {

	/*SystemTag
	  systemTag

	*/
	SystemTag *models.SystemTag

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) WithTimeout(timeout time.Duration) *SystemTagCreateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) WithContext(ctx context.Context) *SystemTagCreateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) WithHTTPClient(client *http.Client) *SystemTagCreateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSystemTag adds the systemTag to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) WithSystemTag(systemTag *models.SystemTag) *SystemTagCreateUsingPUTParams {
	o.SetSystemTag(systemTag)
	return o
}

// SetSystemTag adds the systemTag to the system tag create using p u t params
func (o *SystemTagCreateUsingPUTParams) SetSystemTag(systemTag *models.SystemTag) {
	o.SystemTag = systemTag
}

// WriteToRequest writes these params to a swagger request
func (o *SystemTagCreateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SystemTag != nil {
		if err := r.SetBodyParam(o.SystemTag); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
