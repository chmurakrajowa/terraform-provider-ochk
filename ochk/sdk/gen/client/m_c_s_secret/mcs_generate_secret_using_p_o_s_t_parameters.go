// Code generated by go-swagger; DO NOT EDIT.

package m_c_s_secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewMcsGenerateSecretUsingPOSTParams creates a new McsGenerateSecretUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewMcsGenerateSecretUsingPOSTParams() *McsGenerateSecretUsingPOSTParams {
	return &McsGenerateSecretUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewMcsGenerateSecretUsingPOSTParamsWithTimeout creates a new McsGenerateSecretUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewMcsGenerateSecretUsingPOSTParamsWithTimeout(timeout time.Duration) *McsGenerateSecretUsingPOSTParams {
	return &McsGenerateSecretUsingPOSTParams{
		timeout: timeout,
	}
}

// NewMcsGenerateSecretUsingPOSTParamsWithContext creates a new McsGenerateSecretUsingPOSTParams object
// with the ability to set a context for a request.
func NewMcsGenerateSecretUsingPOSTParamsWithContext(ctx context.Context) *McsGenerateSecretUsingPOSTParams {
	return &McsGenerateSecretUsingPOSTParams{
		Context: ctx,
	}
}

// NewMcsGenerateSecretUsingPOSTParamsWithHTTPClient creates a new McsGenerateSecretUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewMcsGenerateSecretUsingPOSTParamsWithHTTPClient(client *http.Client) *McsGenerateSecretUsingPOSTParams {
	return &McsGenerateSecretUsingPOSTParams{
		HTTPClient: client,
	}
}

/* McsGenerateSecretUsingPOSTParams contains all the parameters to send to the API endpoint
   for the mcs generate secret using p o s t operation.

   Typically these are written to a http.Request.
*/
type McsGenerateSecretUsingPOSTParams struct {

	/* McsSecret.

	   mcsSecret
	*/
	McsSecret *models.McsSecret

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the mcs generate secret using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *McsGenerateSecretUsingPOSTParams) WithDefaults() *McsGenerateSecretUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the mcs generate secret using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *McsGenerateSecretUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) WithTimeout(timeout time.Duration) *McsGenerateSecretUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) WithContext(ctx context.Context) *McsGenerateSecretUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) WithHTTPClient(client *http.Client) *McsGenerateSecretUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMcsSecret adds the mcsSecret to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) WithMcsSecret(mcsSecret *models.McsSecret) *McsGenerateSecretUsingPOSTParams {
	o.SetMcsSecret(mcsSecret)
	return o
}

// SetMcsSecret adds the mcsSecret to the mcs generate secret using p o s t params
func (o *McsGenerateSecretUsingPOSTParams) SetMcsSecret(mcsSecret *models.McsSecret) {
	o.McsSecret = mcsSecret
}

// WriteToRequest writes these params to a swagger request
func (o *McsGenerateSecretUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.McsSecret != nil {
		if err := r.SetBodyParam(o.McsSecret); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
