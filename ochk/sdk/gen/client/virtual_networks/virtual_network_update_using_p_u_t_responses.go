// Code generated by go-swagger; DO NOT EDIT.

package virtual_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// VirtualNetworkUpdateUsingPUTReader is a Reader for the VirtualNetworkUpdateUsingPUT structure.
type VirtualNetworkUpdateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VirtualNetworkUpdateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVirtualNetworkUpdateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewVirtualNetworkUpdateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVirtualNetworkUpdateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVirtualNetworkUpdateUsingPUTOK creates a VirtualNetworkUpdateUsingPUTOK with default headers values
func NewVirtualNetworkUpdateUsingPUTOK() *VirtualNetworkUpdateUsingPUTOK {
	return &VirtualNetworkUpdateUsingPUTOK{}
}

/*VirtualNetworkUpdateUsingPUTOK handles this case with default header values.

OK
*/
type VirtualNetworkUpdateUsingPUTOK struct {
	Payload *models.VirtualNetworkUpdateResponse
}

func (o *VirtualNetworkUpdateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] virtualNetworkUpdateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *VirtualNetworkUpdateUsingPUTOK) GetPayload() *models.VirtualNetworkUpdateResponse {
	return o.Payload
}

func (o *VirtualNetworkUpdateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VirtualNetworkUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualNetworkUpdateUsingPUTCreated creates a VirtualNetworkUpdateUsingPUTCreated with default headers values
func NewVirtualNetworkUpdateUsingPUTCreated() *VirtualNetworkUpdateUsingPUTCreated {
	return &VirtualNetworkUpdateUsingPUTCreated{}
}

/*VirtualNetworkUpdateUsingPUTCreated handles this case with default header values.

Entity has been updated
*/
type VirtualNetworkUpdateUsingPUTCreated struct {
	Payload *models.VirtualNetworkUpdateResponse
}

func (o *VirtualNetworkUpdateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] virtualNetworkUpdateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *VirtualNetworkUpdateUsingPUTCreated) GetPayload() *models.VirtualNetworkUpdateResponse {
	return o.Payload
}

func (o *VirtualNetworkUpdateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VirtualNetworkUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualNetworkUpdateUsingPUTBadRequest creates a VirtualNetworkUpdateUsingPUTBadRequest with default headers values
func NewVirtualNetworkUpdateUsingPUTBadRequest() *VirtualNetworkUpdateUsingPUTBadRequest {
	return &VirtualNetworkUpdateUsingPUTBadRequest{}
}

/*VirtualNetworkUpdateUsingPUTBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type VirtualNetworkUpdateUsingPUTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *VirtualNetworkUpdateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /networks/{virtualNetworkId}][%d] virtualNetworkUpdateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *VirtualNetworkUpdateUsingPUTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *VirtualNetworkUpdateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
