// Code generated by go-swagger; DO NOT EDIT.

package virtual_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewVirtualNetworkUpdateUsingPUTParams creates a new VirtualNetworkUpdateUsingPUTParams object
// with the default values initialized.
func NewVirtualNetworkUpdateUsingPUTParams() *VirtualNetworkUpdateUsingPUTParams {
	var ()
	return &VirtualNetworkUpdateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVirtualNetworkUpdateUsingPUTParamsWithTimeout creates a new VirtualNetworkUpdateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVirtualNetworkUpdateUsingPUTParamsWithTimeout(timeout time.Duration) *VirtualNetworkUpdateUsingPUTParams {
	var ()
	return &VirtualNetworkUpdateUsingPUTParams{

		timeout: timeout,
	}
}

// NewVirtualNetworkUpdateUsingPUTParamsWithContext creates a new VirtualNetworkUpdateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewVirtualNetworkUpdateUsingPUTParamsWithContext(ctx context.Context) *VirtualNetworkUpdateUsingPUTParams {
	var ()
	return &VirtualNetworkUpdateUsingPUTParams{

		Context: ctx,
	}
}

// NewVirtualNetworkUpdateUsingPUTParamsWithHTTPClient creates a new VirtualNetworkUpdateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVirtualNetworkUpdateUsingPUTParamsWithHTTPClient(client *http.Client) *VirtualNetworkUpdateUsingPUTParams {
	var ()
	return &VirtualNetworkUpdateUsingPUTParams{
		HTTPClient: client,
	}
}

/*VirtualNetworkUpdateUsingPUTParams contains all the parameters to send to the API endpoint
for the virtual network update using p u t operation typically these are written to a http.Request
*/
type VirtualNetworkUpdateUsingPUTParams struct {

	/*VirtualNetworkID
	  virtualNetworkId

	*/
	VirtualNetworkID string
	/*VirtualNetworkInstance
	  virtualNetworkInstance

	*/
	VirtualNetworkInstance *models.VirtualNetworkInstance

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) WithTimeout(timeout time.Duration) *VirtualNetworkUpdateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) WithContext(ctx context.Context) *VirtualNetworkUpdateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) WithHTTPClient(client *http.Client) *VirtualNetworkUpdateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVirtualNetworkID adds the virtualNetworkID to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) WithVirtualNetworkID(virtualNetworkID string) *VirtualNetworkUpdateUsingPUTParams {
	o.SetVirtualNetworkID(virtualNetworkID)
	return o
}

// SetVirtualNetworkID adds the virtualNetworkId to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) SetVirtualNetworkID(virtualNetworkID string) {
	o.VirtualNetworkID = virtualNetworkID
}

// WithVirtualNetworkInstance adds the virtualNetworkInstance to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) WithVirtualNetworkInstance(virtualNetworkInstance *models.VirtualNetworkInstance) *VirtualNetworkUpdateUsingPUTParams {
	o.SetVirtualNetworkInstance(virtualNetworkInstance)
	return o
}

// SetVirtualNetworkInstance adds the virtualNetworkInstance to the virtual network update using p u t params
func (o *VirtualNetworkUpdateUsingPUTParams) SetVirtualNetworkInstance(virtualNetworkInstance *models.VirtualNetworkInstance) {
	o.VirtualNetworkInstance = virtualNetworkInstance
}

// WriteToRequest writes these params to a swagger request
func (o *VirtualNetworkUpdateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param virtualNetworkId
	if err := r.SetPathParam("virtualNetworkId", o.VirtualNetworkID); err != nil {
		return err
	}

	if o.VirtualNetworkInstance != nil {
		if err := r.SetBodyParam(o.VirtualNetworkInstance); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
