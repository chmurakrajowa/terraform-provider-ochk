// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// BackupPlanGetUsingGETReader is a Reader for the BackupPlanGetUsingGET structure.
type BackupPlanGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupPlanGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupPlanGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupPlanGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupPlanGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupPlanGetUsingGETOK creates a BackupPlanGetUsingGETOK with default headers values
func NewBackupPlanGetUsingGETOK() *BackupPlanGetUsingGETOK {
	return &BackupPlanGetUsingGETOK{}
}

/*
BackupPlanGetUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type BackupPlanGetUsingGETOK struct {
	Payload *models.BackupPlanGetResponse
}

// IsSuccess returns true when this backup plan get using g e t o k response has a 2xx status code
func (o *BackupPlanGetUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup plan get using g e t o k response has a 3xx status code
func (o *BackupPlanGetUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup plan get using g e t o k response has a 4xx status code
func (o *BackupPlanGetUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup plan get using g e t o k response has a 5xx status code
func (o *BackupPlanGetUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup plan get using g e t o k response a status code equal to that given
func (o *BackupPlanGetUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the backup plan get using g e t o k response
func (o *BackupPlanGetUsingGETOK) Code() int {
	return 200
}

func (o *BackupPlanGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *BackupPlanGetUsingGETOK) String() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *BackupPlanGetUsingGETOK) GetPayload() *models.BackupPlanGetResponse {
	return o.Payload
}

func (o *BackupPlanGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupPlanGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupPlanGetUsingGETBadRequest creates a BackupPlanGetUsingGETBadRequest with default headers values
func NewBackupPlanGetUsingGETBadRequest() *BackupPlanGetUsingGETBadRequest {
	return &BackupPlanGetUsingGETBadRequest{}
}

/*
BackupPlanGetUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type BackupPlanGetUsingGETBadRequest struct {
}

// IsSuccess returns true when this backup plan get using g e t bad request response has a 2xx status code
func (o *BackupPlanGetUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup plan get using g e t bad request response has a 3xx status code
func (o *BackupPlanGetUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup plan get using g e t bad request response has a 4xx status code
func (o *BackupPlanGetUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup plan get using g e t bad request response has a 5xx status code
func (o *BackupPlanGetUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup plan get using g e t bad request response a status code equal to that given
func (o *BackupPlanGetUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the backup plan get using g e t bad request response
func (o *BackupPlanGetUsingGETBadRequest) Code() int {
	return 400
}

func (o *BackupPlanGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETBadRequest ", 400)
}

func (o *BackupPlanGetUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETBadRequest ", 400)
}

func (o *BackupPlanGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBackupPlanGetUsingGETNotFound creates a BackupPlanGetUsingGETNotFound with default headers values
func NewBackupPlanGetUsingGETNotFound() *BackupPlanGetUsingGETNotFound {
	return &BackupPlanGetUsingGETNotFound{}
}

/*
BackupPlanGetUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found.
*/
type BackupPlanGetUsingGETNotFound struct {
}

// IsSuccess returns true when this backup plan get using g e t not found response has a 2xx status code
func (o *BackupPlanGetUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup plan get using g e t not found response has a 3xx status code
func (o *BackupPlanGetUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup plan get using g e t not found response has a 4xx status code
func (o *BackupPlanGetUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup plan get using g e t not found response has a 5xx status code
func (o *BackupPlanGetUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup plan get using g e t not found response a status code equal to that given
func (o *BackupPlanGetUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the backup plan get using g e t not found response
func (o *BackupPlanGetUsingGETNotFound) Code() int {
	return 404
}

func (o *BackupPlanGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETNotFound ", 404)
}

func (o *BackupPlanGetUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /backups/plans/{backupPlanId}][%d] backupPlanGetUsingGETNotFound ", 404)
}

func (o *BackupPlanGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
