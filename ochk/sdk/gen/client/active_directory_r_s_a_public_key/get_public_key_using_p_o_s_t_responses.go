// Code generated by go-swagger; DO NOT EDIT.

package active_directory_r_s_a_public_key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GetPublicKeyUsingPOSTReader is a Reader for the GetPublicKeyUsingPOST structure.
type GetPublicKeyUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPublicKeyUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPublicKeyUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPublicKeyUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /ads/cer] getPublicKeyUsingPOST", response, response.Code())
	}
}

// NewGetPublicKeyUsingPOSTOK creates a GetPublicKeyUsingPOSTOK with default headers values
func NewGetPublicKeyUsingPOSTOK() *GetPublicKeyUsingPOSTOK {
	return &GetPublicKeyUsingPOSTOK{}
}

/*
GetPublicKeyUsingPOSTOK describes a response with status code 200, with default header values.

Entity has been imported
*/
type GetPublicKeyUsingPOSTOK struct {
	Payload *models.GetPublicKeyResponse
}

// IsSuccess returns true when this get public key using p o s t o k response has a 2xx status code
func (o *GetPublicKeyUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get public key using p o s t o k response has a 3xx status code
func (o *GetPublicKeyUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get public key using p o s t o k response has a 4xx status code
func (o *GetPublicKeyUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get public key using p o s t o k response has a 5xx status code
func (o *GetPublicKeyUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get public key using p o s t o k response a status code equal to that given
func (o *GetPublicKeyUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get public key using p o s t o k response
func (o *GetPublicKeyUsingPOSTOK) Code() int {
	return 200
}

func (o *GetPublicKeyUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /ads/cer][%d] getPublicKeyUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetPublicKeyUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /ads/cer][%d] getPublicKeyUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetPublicKeyUsingPOSTOK) GetPayload() *models.GetPublicKeyResponse {
	return o.Payload
}

func (o *GetPublicKeyUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetPublicKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublicKeyUsingPOSTBadRequest creates a GetPublicKeyUsingPOSTBadRequest with default headers values
func NewGetPublicKeyUsingPOSTBadRequest() *GetPublicKeyUsingPOSTBadRequest {
	return &GetPublicKeyUsingPOSTBadRequest{}
}

/*
GetPublicKeyUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GetPublicKeyUsingPOSTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

// IsSuccess returns true when this get public key using p o s t bad request response has a 2xx status code
func (o *GetPublicKeyUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get public key using p o s t bad request response has a 3xx status code
func (o *GetPublicKeyUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get public key using p o s t bad request response has a 4xx status code
func (o *GetPublicKeyUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get public key using p o s t bad request response has a 5xx status code
func (o *GetPublicKeyUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get public key using p o s t bad request response a status code equal to that given
func (o *GetPublicKeyUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get public key using p o s t bad request response
func (o *GetPublicKeyUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *GetPublicKeyUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /ads/cer][%d] getPublicKeyUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *GetPublicKeyUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /ads/cer][%d] getPublicKeyUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *GetPublicKeyUsingPOSTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GetPublicKeyUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
