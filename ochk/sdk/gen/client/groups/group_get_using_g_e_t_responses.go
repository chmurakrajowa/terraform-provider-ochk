// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GroupGetUsingGETReader is a Reader for the GroupGetUsingGET structure.
type GroupGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGroupGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGroupGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGroupGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGroupGetUsingGETOK creates a GroupGetUsingGETOK with default headers values
func NewGroupGetUsingGETOK() *GroupGetUsingGETOK {
	return &GroupGetUsingGETOK{}
}

/*GroupGetUsingGETOK handles this case with default header values.

OK
*/
type GroupGetUsingGETOK struct {
	Payload *models.GroupGetResponse
}

func (o *GroupGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /groups/{groupId}][%d] groupGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *GroupGetUsingGETOK) GetPayload() *models.GroupGetResponse {
	return o.Payload
}

func (o *GroupGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGroupGetUsingGETBadRequest creates a GroupGetUsingGETBadRequest with default headers values
func NewGroupGetUsingGETBadRequest() *GroupGetUsingGETBadRequest {
	return &GroupGetUsingGETBadRequest{}
}

/*GroupGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GroupGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *GroupGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /groups/{groupId}][%d] groupGetUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GroupGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GroupGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGroupGetUsingGETNotFound creates a GroupGetUsingGETNotFound with default headers values
func NewGroupGetUsingGETNotFound() *GroupGetUsingGETNotFound {
	return &GroupGetUsingGETNotFound{}
}

/*GroupGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type GroupGetUsingGETNotFound struct {
}

func (o *GroupGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/{groupId}][%d] groupGetUsingGETNotFound ", 404)
}

func (o *GroupGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
