// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GetHistogramCustomUsingPOSTReader is a Reader for the GetHistogramCustomUsingPOST structure.
type GetHistogramCustomUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHistogramCustomUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHistogramCustomUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHistogramCustomUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /log/histogram/custom] getHistogramCustomUsingPOST", response, response.Code())
	}
}

// NewGetHistogramCustomUsingPOSTOK creates a GetHistogramCustomUsingPOSTOK with default headers values
func NewGetHistogramCustomUsingPOSTOK() *GetHistogramCustomUsingPOSTOK {
	return &GetHistogramCustomUsingPOSTOK{}
}

/*
GetHistogramCustomUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type GetHistogramCustomUsingPOSTOK struct {
	Payload *models.GetLogHistogram
}

// IsSuccess returns true when this get histogram custom using p o s t o k response has a 2xx status code
func (o *GetHistogramCustomUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get histogram custom using p o s t o k response has a 3xx status code
func (o *GetHistogramCustomUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get histogram custom using p o s t o k response has a 4xx status code
func (o *GetHistogramCustomUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get histogram custom using p o s t o k response has a 5xx status code
func (o *GetHistogramCustomUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get histogram custom using p o s t o k response a status code equal to that given
func (o *GetHistogramCustomUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get histogram custom using p o s t o k response
func (o *GetHistogramCustomUsingPOSTOK) Code() int {
	return 200
}

func (o *GetHistogramCustomUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /log/histogram/custom][%d] getHistogramCustomUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetHistogramCustomUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /log/histogram/custom][%d] getHistogramCustomUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetHistogramCustomUsingPOSTOK) GetPayload() *models.GetLogHistogram {
	return o.Payload
}

func (o *GetHistogramCustomUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetLogHistogram)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHistogramCustomUsingPOSTBadRequest creates a GetHistogramCustomUsingPOSTBadRequest with default headers values
func NewGetHistogramCustomUsingPOSTBadRequest() *GetHistogramCustomUsingPOSTBadRequest {
	return &GetHistogramCustomUsingPOSTBadRequest{}
}

/*
GetHistogramCustomUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GetHistogramCustomUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this get histogram custom using p o s t bad request response has a 2xx status code
func (o *GetHistogramCustomUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get histogram custom using p o s t bad request response has a 3xx status code
func (o *GetHistogramCustomUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get histogram custom using p o s t bad request response has a 4xx status code
func (o *GetHistogramCustomUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get histogram custom using p o s t bad request response has a 5xx status code
func (o *GetHistogramCustomUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get histogram custom using p o s t bad request response a status code equal to that given
func (o *GetHistogramCustomUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get histogram custom using p o s t bad request response
func (o *GetHistogramCustomUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *GetHistogramCustomUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /log/histogram/custom][%d] getHistogramCustomUsingPOSTBadRequest ", 400)
}

func (o *GetHistogramCustomUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /log/histogram/custom][%d] getHistogramCustomUsingPOSTBadRequest ", 400)
}

func (o *GetHistogramCustomUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
