// Code generated by go-swagger; DO NOT EDIT.

package virtual_machine_performance_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewVirtualMachineOverallReportGetUsingGETParams creates a new VirtualMachineOverallReportGetUsingGETParams object
// with the default values initialized.
func NewVirtualMachineOverallReportGetUsingGETParams() *VirtualMachineOverallReportGetUsingGETParams {
	var ()
	return &VirtualMachineOverallReportGetUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVirtualMachineOverallReportGetUsingGETParamsWithTimeout creates a new VirtualMachineOverallReportGetUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVirtualMachineOverallReportGetUsingGETParamsWithTimeout(timeout time.Duration) *VirtualMachineOverallReportGetUsingGETParams {
	var ()
	return &VirtualMachineOverallReportGetUsingGETParams{

		timeout: timeout,
	}
}

// NewVirtualMachineOverallReportGetUsingGETParamsWithContext creates a new VirtualMachineOverallReportGetUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewVirtualMachineOverallReportGetUsingGETParamsWithContext(ctx context.Context) *VirtualMachineOverallReportGetUsingGETParams {
	var ()
	return &VirtualMachineOverallReportGetUsingGETParams{

		Context: ctx,
	}
}

// NewVirtualMachineOverallReportGetUsingGETParamsWithHTTPClient creates a new VirtualMachineOverallReportGetUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVirtualMachineOverallReportGetUsingGETParamsWithHTTPClient(client *http.Client) *VirtualMachineOverallReportGetUsingGETParams {
	var ()
	return &VirtualMachineOverallReportGetUsingGETParams{
		HTTPClient: client,
	}
}

/*VirtualMachineOverallReportGetUsingGETParams contains all the parameters to send to the API endpoint
for the virtual machine overall report get using g e t operation typically these are written to a http.Request
*/
type VirtualMachineOverallReportGetUsingGETParams struct {

	/*EndDate
	  endDate

	*/
	EndDate strfmt.DateTime
	/*StartDate
	  startDate

	*/
	StartDate strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) WithTimeout(timeout time.Duration) *VirtualMachineOverallReportGetUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) WithContext(ctx context.Context) *VirtualMachineOverallReportGetUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) WithHTTPClient(client *http.Client) *VirtualMachineOverallReportGetUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndDate adds the endDate to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) WithEndDate(endDate strfmt.DateTime) *VirtualMachineOverallReportGetUsingGETParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) SetEndDate(endDate strfmt.DateTime) {
	o.EndDate = endDate
}

// WithStartDate adds the startDate to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) WithStartDate(startDate strfmt.DateTime) *VirtualMachineOverallReportGetUsingGETParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the virtual machine overall report get using g e t params
func (o *VirtualMachineOverallReportGetUsingGETParams) SetStartDate(startDate strfmt.DateTime) {
	o.StartDate = startDate
}

// WriteToRequest writes these params to a swagger request
func (o *VirtualMachineOverallReportGetUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endDate
	qrEndDate := o.EndDate
	qEndDate := qrEndDate.String()
	if qEndDate != "" {
		if err := r.SetQueryParam("endDate", qEndDate); err != nil {
			return err
		}
	}

	// query param startDate
	qrStartDate := o.StartDate
	qStartDate := qrStartDate.String()
	if qStartDate != "" {
		if err := r.SetQueryParam("startDate", qStartDate); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
