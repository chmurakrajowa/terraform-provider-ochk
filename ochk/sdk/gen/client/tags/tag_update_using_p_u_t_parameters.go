// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewTagUpdateUsingPUTParams creates a new TagUpdateUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewTagUpdateUsingPUTParams() *TagUpdateUsingPUTParams {
	return &TagUpdateUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewTagUpdateUsingPUTParamsWithTimeout creates a new TagUpdateUsingPUTParams object
// with the ability to set a timeout on a request.
func NewTagUpdateUsingPUTParamsWithTimeout(timeout time.Duration) *TagUpdateUsingPUTParams {
	return &TagUpdateUsingPUTParams{
		timeout: timeout,
	}
}

// NewTagUpdateUsingPUTParamsWithContext creates a new TagUpdateUsingPUTParams object
// with the ability to set a context for a request.
func NewTagUpdateUsingPUTParamsWithContext(ctx context.Context) *TagUpdateUsingPUTParams {
	return &TagUpdateUsingPUTParams{
		Context: ctx,
	}
}

// NewTagUpdateUsingPUTParamsWithHTTPClient creates a new TagUpdateUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewTagUpdateUsingPUTParamsWithHTTPClient(client *http.Client) *TagUpdateUsingPUTParams {
	return &TagUpdateUsingPUTParams{
		HTTPClient: client,
	}
}

/*
TagUpdateUsingPUTParams contains all the parameters to send to the API endpoint

	for the tag update using p u t operation.

	Typically these are written to a http.Request.
*/
type TagUpdateUsingPUTParams struct {

	/* Tag.

	   tag
	*/
	Tag *models.Tag

	/* TagID.

	   tagId

	   Format: int32
	*/
	TagID int32

	/* UpdateMembers.

	   updateMembers
	*/
	UpdateMembers *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the tag update using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TagUpdateUsingPUTParams) WithDefaults() *TagUpdateUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the tag update using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TagUpdateUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithTimeout(timeout time.Duration) *TagUpdateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithContext(ctx context.Context) *TagUpdateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithHTTPClient(client *http.Client) *TagUpdateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTag adds the tag to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithTag(tag *models.Tag) *TagUpdateUsingPUTParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetTag(tag *models.Tag) {
	o.Tag = tag
}

// WithTagID adds the tagID to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithTagID(tagID int32) *TagUpdateUsingPUTParams {
	o.SetTagID(tagID)
	return o
}

// SetTagID adds the tagId to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetTagID(tagID int32) {
	o.TagID = tagID
}

// WithUpdateMembers adds the updateMembers to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) WithUpdateMembers(updateMembers *bool) *TagUpdateUsingPUTParams {
	o.SetUpdateMembers(updateMembers)
	return o
}

// SetUpdateMembers adds the updateMembers to the tag update using p u t params
func (o *TagUpdateUsingPUTParams) SetUpdateMembers(updateMembers *bool) {
	o.UpdateMembers = updateMembers
}

// WriteToRequest writes these params to a swagger request
func (o *TagUpdateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Tag != nil {
		if err := r.SetBodyParam(o.Tag); err != nil {
			return err
		}
	}

	// path param tagId
	if err := r.SetPathParam("tagId", swag.FormatInt32(o.TagID)); err != nil {
		return err
	}

	if o.UpdateMembers != nil {

		// query param updateMembers
		var qrUpdateMembers bool

		if o.UpdateMembers != nil {
			qrUpdateMembers = *o.UpdateMembers
		}
		qUpdateMembers := swag.FormatBool(qrUpdateMembers)
		if qUpdateMembers != "" {

			if err := r.SetQueryParam("updateMembers", qUpdateMembers); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
