// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ProjectUpdateUsingPUTReader is a Reader for the ProjectUpdateUsingPUT structure.
type ProjectUpdateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectUpdateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectUpdateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewProjectUpdateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectUpdateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects/{projectId}] projectUpdateUsingPUT", response, response.Code())
	}
}

// NewProjectUpdateUsingPUTOK creates a ProjectUpdateUsingPUTOK with default headers values
func NewProjectUpdateUsingPUTOK() *ProjectUpdateUsingPUTOK {
	return &ProjectUpdateUsingPUTOK{}
}

/*
ProjectUpdateUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type ProjectUpdateUsingPUTOK struct {
	Payload *models.ProjectUpdateResponse
}

// IsSuccess returns true when this project update using p u t o k response has a 2xx status code
func (o *ProjectUpdateUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project update using p u t o k response has a 3xx status code
func (o *ProjectUpdateUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project update using p u t o k response has a 4xx status code
func (o *ProjectUpdateUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project update using p u t o k response has a 5xx status code
func (o *ProjectUpdateUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project update using p u t o k response a status code equal to that given
func (o *ProjectUpdateUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the project update using p u t o k response
func (o *ProjectUpdateUsingPUTOK) Code() int {
	return 200
}

func (o *ProjectUpdateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *ProjectUpdateUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *ProjectUpdateUsingPUTOK) GetPayload() *models.ProjectUpdateResponse {
	return o.Payload
}

func (o *ProjectUpdateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectUpdateUsingPUTCreated creates a ProjectUpdateUsingPUTCreated with default headers values
func NewProjectUpdateUsingPUTCreated() *ProjectUpdateUsingPUTCreated {
	return &ProjectUpdateUsingPUTCreated{}
}

/*
ProjectUpdateUsingPUTCreated describes a response with status code 201, with default header values.

Entity has been updated
*/
type ProjectUpdateUsingPUTCreated struct {
	Payload *models.ProjectUpdateResponse
}

// IsSuccess returns true when this project update using p u t created response has a 2xx status code
func (o *ProjectUpdateUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project update using p u t created response has a 3xx status code
func (o *ProjectUpdateUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project update using p u t created response has a 4xx status code
func (o *ProjectUpdateUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this project update using p u t created response has a 5xx status code
func (o *ProjectUpdateUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this project update using p u t created response a status code equal to that given
func (o *ProjectUpdateUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the project update using p u t created response
func (o *ProjectUpdateUsingPUTCreated) Code() int {
	return 201
}

func (o *ProjectUpdateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *ProjectUpdateUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *ProjectUpdateUsingPUTCreated) GetPayload() *models.ProjectUpdateResponse {
	return o.Payload
}

func (o *ProjectUpdateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectUpdateUsingPUTBadRequest creates a ProjectUpdateUsingPUTBadRequest with default headers values
func NewProjectUpdateUsingPUTBadRequest() *ProjectUpdateUsingPUTBadRequest {
	return &ProjectUpdateUsingPUTBadRequest{}
}

/*
ProjectUpdateUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type ProjectUpdateUsingPUTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

// IsSuccess returns true when this project update using p u t bad request response has a 2xx status code
func (o *ProjectUpdateUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project update using p u t bad request response has a 3xx status code
func (o *ProjectUpdateUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project update using p u t bad request response has a 4xx status code
func (o *ProjectUpdateUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project update using p u t bad request response has a 5xx status code
func (o *ProjectUpdateUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project update using p u t bad request response a status code equal to that given
func (o *ProjectUpdateUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the project update using p u t bad request response
func (o *ProjectUpdateUsingPUTBadRequest) Code() int {
	return 400
}

func (o *ProjectUpdateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectUpdateUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] projectUpdateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectUpdateUsingPUTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *ProjectUpdateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
