// Code generated by go-swagger; DO NOT EDIT.

package w_s_o2_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GetTokenUsingPOST1Reader is a Reader for the GetTokenUsingPOST1 structure.
type GetTokenUsingPOST1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenUsingPOST1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenUsingPOST1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTokenUsingPOST1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTokenUsingPOST1OK creates a GetTokenUsingPOST1OK with default headers values
func NewGetTokenUsingPOST1OK() *GetTokenUsingPOST1OK {
	return &GetTokenUsingPOST1OK{}
}

/*GetTokenUsingPOST1OK handles this case with default header values.

OK
*/
type GetTokenUsingPOST1OK struct {
	Payload *models.WSOTokenResponse
}

func (o *GetTokenUsingPOST1OK) Error() string {
	return fmt.Sprintf("[POST /wso2/token][%d] getTokenUsingPOST1OK  %+v", 200, o.Payload)
}

func (o *GetTokenUsingPOST1OK) GetPayload() *models.WSOTokenResponse {
	return o.Payload
}

func (o *GetTokenUsingPOST1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSOTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenUsingPOST1BadRequest creates a GetTokenUsingPOST1BadRequest with default headers values
func NewGetTokenUsingPOST1BadRequest() *GetTokenUsingPOST1BadRequest {
	return &GetTokenUsingPOST1BadRequest{}
}

/*GetTokenUsingPOST1BadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GetTokenUsingPOST1BadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *GetTokenUsingPOST1BadRequest) Error() string {
	return fmt.Sprintf("[POST /wso2/token][%d] getTokenUsingPOST1BadRequest  %+v", 400, o.Payload)
}

func (o *GetTokenUsingPOST1BadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GetTokenUsingPOST1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
