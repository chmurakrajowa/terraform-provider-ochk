// Code generated by go-swagger; DO NOT EDIT.

package resource_pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// VcsResourcePoolsGetUsingGETReader is a Reader for the VcsResourcePoolsGetUsingGET structure.
type VcsResourcePoolsGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VcsResourcePoolsGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVcsResourcePoolsGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVcsResourcePoolsGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVcsResourcePoolsGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVcsResourcePoolsGetUsingGETOK creates a VcsResourcePoolsGetUsingGETOK with default headers values
func NewVcsResourcePoolsGetUsingGETOK() *VcsResourcePoolsGetUsingGETOK {
	return &VcsResourcePoolsGetUsingGETOK{}
}

/*VcsResourcePoolsGetUsingGETOK handles this case with default header values.

OK
*/
type VcsResourcePoolsGetUsingGETOK struct {
	Payload *models.VcsResourcePoolsGetResponse
}

func (o *VcsResourcePoolsGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /vcs/resourcepools/{resourcePoolId}][%d] vcsResourcePoolsGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *VcsResourcePoolsGetUsingGETOK) GetPayload() *models.VcsResourcePoolsGetResponse {
	return o.Payload
}

func (o *VcsResourcePoolsGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VcsResourcePoolsGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVcsResourcePoolsGetUsingGETBadRequest creates a VcsResourcePoolsGetUsingGETBadRequest with default headers values
func NewVcsResourcePoolsGetUsingGETBadRequest() *VcsResourcePoolsGetUsingGETBadRequest {
	return &VcsResourcePoolsGetUsingGETBadRequest{}
}

/*VcsResourcePoolsGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type VcsResourcePoolsGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *VcsResourcePoolsGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /vcs/resourcepools/{resourcePoolId}][%d] vcsResourcePoolsGetUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *VcsResourcePoolsGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *VcsResourcePoolsGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVcsResourcePoolsGetUsingGETNotFound creates a VcsResourcePoolsGetUsingGETNotFound with default headers values
func NewVcsResourcePoolsGetUsingGETNotFound() *VcsResourcePoolsGetUsingGETNotFound {
	return &VcsResourcePoolsGetUsingGETNotFound{}
}

/*VcsResourcePoolsGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type VcsResourcePoolsGetUsingGETNotFound struct {
}

func (o *VcsResourcePoolsGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /vcs/resourcepools/{resourcePoolId}][%d] vcsResourcePoolsGetUsingGETNotFound ", 404)
}

func (o *VcsResourcePoolsGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
