// Code generated by go-swagger; DO NOT EDIT.

package billing_tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewBillingTagCreateUsingPUTParams creates a new BillingTagCreateUsingPUTParams object
// with the default values initialized.
func NewBillingTagCreateUsingPUTParams() *BillingTagCreateUsingPUTParams {
	var ()
	return &BillingTagCreateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBillingTagCreateUsingPUTParamsWithTimeout creates a new BillingTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBillingTagCreateUsingPUTParamsWithTimeout(timeout time.Duration) *BillingTagCreateUsingPUTParams {
	var ()
	return &BillingTagCreateUsingPUTParams{

		timeout: timeout,
	}
}

// NewBillingTagCreateUsingPUTParamsWithContext creates a new BillingTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewBillingTagCreateUsingPUTParamsWithContext(ctx context.Context) *BillingTagCreateUsingPUTParams {
	var ()
	return &BillingTagCreateUsingPUTParams{

		Context: ctx,
	}
}

// NewBillingTagCreateUsingPUTParamsWithHTTPClient creates a new BillingTagCreateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBillingTagCreateUsingPUTParamsWithHTTPClient(client *http.Client) *BillingTagCreateUsingPUTParams {
	var ()
	return &BillingTagCreateUsingPUTParams{
		HTTPClient: client,
	}
}

/*BillingTagCreateUsingPUTParams contains all the parameters to send to the API endpoint
for the billing tag create using p u t operation typically these are written to a http.Request
*/
type BillingTagCreateUsingPUTParams struct {

	/*BillingTag
	  billingTag

	*/
	BillingTag *models.BillingTag

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) WithTimeout(timeout time.Duration) *BillingTagCreateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) WithContext(ctx context.Context) *BillingTagCreateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) WithHTTPClient(client *http.Client) *BillingTagCreateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillingTag adds the billingTag to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) WithBillingTag(billingTag *models.BillingTag) *BillingTagCreateUsingPUTParams {
	o.SetBillingTag(billingTag)
	return o
}

// SetBillingTag adds the billingTag to the billing tag create using p u t params
func (o *BillingTagCreateUsingPUTParams) SetBillingTag(billingTag *models.BillingTag) {
	o.BillingTag = billingTag
}

// WriteToRequest writes these params to a swagger request
func (o *BillingTagCreateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BillingTag != nil {
		if err := r.SetBodyParam(o.BillingTag); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
