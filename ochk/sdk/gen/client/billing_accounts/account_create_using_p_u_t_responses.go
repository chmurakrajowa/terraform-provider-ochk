// Code generated by go-swagger; DO NOT EDIT.

package billing_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// AccountCreateUsingPUTReader is a Reader for the AccountCreateUsingPUT structure.
type AccountCreateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountCreateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountCreateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAccountCreateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountCreateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccountCreateUsingPUTOK creates a AccountCreateUsingPUTOK with default headers values
func NewAccountCreateUsingPUTOK() *AccountCreateUsingPUTOK {
	return &AccountCreateUsingPUTOK{}
}

/*
AccountCreateUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type AccountCreateUsingPUTOK struct {
	Payload *models.AccountCreateResponse
}

// IsSuccess returns true when this account create using p u t o k response has a 2xx status code
func (o *AccountCreateUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this account create using p u t o k response has a 3xx status code
func (o *AccountCreateUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account create using p u t o k response has a 4xx status code
func (o *AccountCreateUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this account create using p u t o k response has a 5xx status code
func (o *AccountCreateUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this account create using p u t o k response a status code equal to that given
func (o *AccountCreateUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the account create using p u t o k response
func (o *AccountCreateUsingPUTOK) Code() int {
	return 200
}

func (o *AccountCreateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *AccountCreateUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *AccountCreateUsingPUTOK) GetPayload() *models.AccountCreateResponse {
	return o.Payload
}

func (o *AccountCreateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCreateUsingPUTCreated creates a AccountCreateUsingPUTCreated with default headers values
func NewAccountCreateUsingPUTCreated() *AccountCreateUsingPUTCreated {
	return &AccountCreateUsingPUTCreated{}
}

/*
AccountCreateUsingPUTCreated describes a response with status code 201, with default header values.

Entity has been created
*/
type AccountCreateUsingPUTCreated struct {
	Payload *models.AccountCreateResponse
}

// IsSuccess returns true when this account create using p u t created response has a 2xx status code
func (o *AccountCreateUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this account create using p u t created response has a 3xx status code
func (o *AccountCreateUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account create using p u t created response has a 4xx status code
func (o *AccountCreateUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this account create using p u t created response has a 5xx status code
func (o *AccountCreateUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this account create using p u t created response a status code equal to that given
func (o *AccountCreateUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the account create using p u t created response
func (o *AccountCreateUsingPUTCreated) Code() int {
	return 201
}

func (o *AccountCreateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *AccountCreateUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *AccountCreateUsingPUTCreated) GetPayload() *models.AccountCreateResponse {
	return o.Payload
}

func (o *AccountCreateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCreateUsingPUTBadRequest creates a AccountCreateUsingPUTBadRequest with default headers values
func NewAccountCreateUsingPUTBadRequest() *AccountCreateUsingPUTBadRequest {
	return &AccountCreateUsingPUTBadRequest{}
}

/*
AccountCreateUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type AccountCreateUsingPUTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

// IsSuccess returns true when this account create using p u t bad request response has a 2xx status code
func (o *AccountCreateUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account create using p u t bad request response has a 3xx status code
func (o *AccountCreateUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account create using p u t bad request response has a 4xx status code
func (o *AccountCreateUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this account create using p u t bad request response has a 5xx status code
func (o *AccountCreateUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this account create using p u t bad request response a status code equal to that given
func (o *AccountCreateUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the account create using p u t bad request response
func (o *AccountCreateUsingPUTBadRequest) Code() int {
	return 400
}

func (o *AccountCreateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *AccountCreateUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /billing/accounts][%d] accountCreateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *AccountCreateUsingPUTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *AccountCreateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
