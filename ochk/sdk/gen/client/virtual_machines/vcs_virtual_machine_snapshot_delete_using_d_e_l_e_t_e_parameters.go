// Code generated by go-swagger; DO NOT EDIT.

package virtual_machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewVcsVirtualMachineSnapshotDeleteUsingDELETEParams creates a new VcsVirtualMachineSnapshotDeleteUsingDELETEParams object
// with the default values initialized.
func NewVcsVirtualMachineSnapshotDeleteUsingDELETEParams() *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	var ()
	return &VcsVirtualMachineSnapshotDeleteUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithTimeout creates a new VcsVirtualMachineSnapshotDeleteUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithTimeout(timeout time.Duration) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	var ()
	return &VcsVirtualMachineSnapshotDeleteUsingDELETEParams{

		timeout: timeout,
	}
}

// NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithContext creates a new VcsVirtualMachineSnapshotDeleteUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithContext(ctx context.Context) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	var ()
	return &VcsVirtualMachineSnapshotDeleteUsingDELETEParams{

		Context: ctx,
	}
}

// NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithHTTPClient creates a new VcsVirtualMachineSnapshotDeleteUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVcsVirtualMachineSnapshotDeleteUsingDELETEParamsWithHTTPClient(client *http.Client) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	var ()
	return &VcsVirtualMachineSnapshotDeleteUsingDELETEParams{
		HTTPClient: client,
	}
}

/*VcsVirtualMachineSnapshotDeleteUsingDELETEParams contains all the parameters to send to the API endpoint
for the vcs virtual machine snapshot delete using d e l e t e operation typically these are written to a http.Request
*/
type VcsVirtualMachineSnapshotDeleteUsingDELETEParams struct {

	/*SnapshotID
	  snapshotId

	*/
	SnapshotID string
	/*VirtualMachineID
	  virtualMachineId

	*/
	VirtualMachineID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WithTimeout(timeout time.Duration) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WithContext(ctx context.Context) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WithHTTPClient(client *http.Client) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSnapshotID adds the snapshotID to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WithSnapshotID(snapshotID string) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	o.SetSnapshotID(snapshotID)
	return o
}

// SetSnapshotID adds the snapshotId to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) SetSnapshotID(snapshotID string) {
	o.SnapshotID = snapshotID
}

// WithVirtualMachineID adds the virtualMachineID to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WithVirtualMachineID(virtualMachineID string) *VcsVirtualMachineSnapshotDeleteUsingDELETEParams {
	o.SetVirtualMachineID(virtualMachineID)
	return o
}

// SetVirtualMachineID adds the virtualMachineId to the vcs virtual machine snapshot delete using d e l e t e params
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) SetVirtualMachineID(virtualMachineID string) {
	o.VirtualMachineID = virtualMachineID
}

// WriteToRequest writes these params to a swagger request
func (o *VcsVirtualMachineSnapshotDeleteUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param snapshotId
	if err := r.SetPathParam("snapshotId", o.SnapshotID); err != nil {
		return err
	}

	// path param virtualMachineId
	if err := r.SetPathParam("virtualMachineId", o.VirtualMachineID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
