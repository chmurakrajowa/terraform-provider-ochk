// Code generated by go-swagger; DO NOT EDIT.

package virtual_machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// VcsVirtualMachineCreateUsingPUTReader is a Reader for the VcsVirtualMachineCreateUsingPUT structure.
type VcsVirtualMachineCreateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VcsVirtualMachineCreateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVcsVirtualMachineCreateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewVcsVirtualMachineCreateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVcsVirtualMachineCreateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVcsVirtualMachineCreateUsingPUTOK creates a VcsVirtualMachineCreateUsingPUTOK with default headers values
func NewVcsVirtualMachineCreateUsingPUTOK() *VcsVirtualMachineCreateUsingPUTOK {
	return &VcsVirtualMachineCreateUsingPUTOK{}
}

/*VcsVirtualMachineCreateUsingPUTOK handles this case with default header values.

OK
*/
type VcsVirtualMachineCreateUsingPUTOK struct {
	Payload *models.VcsVirtualMachineCreateResponse
}

func (o *VcsVirtualMachineCreateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /vcs/virtual-machines][%d] vcsVirtualMachineCreateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *VcsVirtualMachineCreateUsingPUTOK) GetPayload() *models.VcsVirtualMachineCreateResponse {
	return o.Payload
}

func (o *VcsVirtualMachineCreateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VcsVirtualMachineCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVcsVirtualMachineCreateUsingPUTCreated creates a VcsVirtualMachineCreateUsingPUTCreated with default headers values
func NewVcsVirtualMachineCreateUsingPUTCreated() *VcsVirtualMachineCreateUsingPUTCreated {
	return &VcsVirtualMachineCreateUsingPUTCreated{}
}

/*VcsVirtualMachineCreateUsingPUTCreated handles this case with default header values.

Entity has been created
*/
type VcsVirtualMachineCreateUsingPUTCreated struct {
	Payload *models.VcsVirtualMachineCreateResponse
}

func (o *VcsVirtualMachineCreateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /vcs/virtual-machines][%d] vcsVirtualMachineCreateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *VcsVirtualMachineCreateUsingPUTCreated) GetPayload() *models.VcsVirtualMachineCreateResponse {
	return o.Payload
}

func (o *VcsVirtualMachineCreateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VcsVirtualMachineCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVcsVirtualMachineCreateUsingPUTBadRequest creates a VcsVirtualMachineCreateUsingPUTBadRequest with default headers values
func NewVcsVirtualMachineCreateUsingPUTBadRequest() *VcsVirtualMachineCreateUsingPUTBadRequest {
	return &VcsVirtualMachineCreateUsingPUTBadRequest{}
}

/*VcsVirtualMachineCreateUsingPUTBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type VcsVirtualMachineCreateUsingPUTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *VcsVirtualMachineCreateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /vcs/virtual-machines][%d] vcsVirtualMachineCreateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *VcsVirtualMachineCreateUsingPUTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *VcsVirtualMachineCreateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
