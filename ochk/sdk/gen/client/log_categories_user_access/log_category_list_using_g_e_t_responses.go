// Code generated by go-swagger; DO NOT EDIT.

package log_categories_user_access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// LogCategoryListUsingGETReader is a Reader for the LogCategoryListUsingGET structure.
type LogCategoryListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogCategoryListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogCategoryListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogCategoryListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLogCategoryListUsingGETOK creates a LogCategoryListUsingGETOK with default headers values
func NewLogCategoryListUsingGETOK() *LogCategoryListUsingGETOK {
	return &LogCategoryListUsingGETOK{}
}

/*
LogCategoryListUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type LogCategoryListUsingGETOK struct {
	Payload *models.LogCategoryListResponse
}

// IsSuccess returns true when this log category list using g e t o k response has a 2xx status code
func (o *LogCategoryListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this log category list using g e t o k response has a 3xx status code
func (o *LogCategoryListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this log category list using g e t o k response has a 4xx status code
func (o *LogCategoryListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this log category list using g e t o k response has a 5xx status code
func (o *LogCategoryListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this log category list using g e t o k response a status code equal to that given
func (o *LogCategoryListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the log category list using g e t o k response
func (o *LogCategoryListUsingGETOK) Code() int {
	return 200
}

func (o *LogCategoryListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /log/user/categories][%d] logCategoryListUsingGETOK  %+v", 200, o.Payload)
}

func (o *LogCategoryListUsingGETOK) String() string {
	return fmt.Sprintf("[GET /log/user/categories][%d] logCategoryListUsingGETOK  %+v", 200, o.Payload)
}

func (o *LogCategoryListUsingGETOK) GetPayload() *models.LogCategoryListResponse {
	return o.Payload
}

func (o *LogCategoryListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogCategoryListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogCategoryListUsingGETBadRequest creates a LogCategoryListUsingGETBadRequest with default headers values
func NewLogCategoryListUsingGETBadRequest() *LogCategoryListUsingGETBadRequest {
	return &LogCategoryListUsingGETBadRequest{}
}

/*
LogCategoryListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type LogCategoryListUsingGETBadRequest struct {
}

// IsSuccess returns true when this log category list using g e t bad request response has a 2xx status code
func (o *LogCategoryListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this log category list using g e t bad request response has a 3xx status code
func (o *LogCategoryListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this log category list using g e t bad request response has a 4xx status code
func (o *LogCategoryListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this log category list using g e t bad request response has a 5xx status code
func (o *LogCategoryListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this log category list using g e t bad request response a status code equal to that given
func (o *LogCategoryListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the log category list using g e t bad request response
func (o *LogCategoryListUsingGETBadRequest) Code() int {
	return 400
}

func (o *LogCategoryListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /log/user/categories][%d] logCategoryListUsingGETBadRequest ", 400)
}

func (o *LogCategoryListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /log/user/categories][%d] logCategoryListUsingGETBadRequest ", 400)
}

func (o *LogCategoryListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
