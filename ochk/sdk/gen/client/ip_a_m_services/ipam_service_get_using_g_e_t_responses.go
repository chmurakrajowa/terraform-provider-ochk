// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// IpamServiceGetUsingGETReader is a Reader for the IpamServiceGetUsingGET structure.
type IpamServiceGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IpamServiceGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIpamServiceGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIpamServiceGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIpamServiceGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ipam/services/{serviceId}] ipamServiceGetUsingGET", response, response.Code())
	}
}

// NewIpamServiceGetUsingGETOK creates a IpamServiceGetUsingGETOK with default headers values
func NewIpamServiceGetUsingGETOK() *IpamServiceGetUsingGETOK {
	return &IpamServiceGetUsingGETOK{}
}

/*
IpamServiceGetUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type IpamServiceGetUsingGETOK struct {
	Payload *models.ServiceGetResponse
}

// IsSuccess returns true when this ipam service get using g e t o k response has a 2xx status code
func (o *IpamServiceGetUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ipam service get using g e t o k response has a 3xx status code
func (o *IpamServiceGetUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ipam service get using g e t o k response has a 4xx status code
func (o *IpamServiceGetUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ipam service get using g e t o k response has a 5xx status code
func (o *IpamServiceGetUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ipam service get using g e t o k response a status code equal to that given
func (o *IpamServiceGetUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the ipam service get using g e t o k response
func (o *IpamServiceGetUsingGETOK) Code() int {
	return 200
}

func (o *IpamServiceGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *IpamServiceGetUsingGETOK) String() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *IpamServiceGetUsingGETOK) GetPayload() *models.ServiceGetResponse {
	return o.Payload
}

func (o *IpamServiceGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIpamServiceGetUsingGETBadRequest creates a IpamServiceGetUsingGETBadRequest with default headers values
func NewIpamServiceGetUsingGETBadRequest() *IpamServiceGetUsingGETBadRequest {
	return &IpamServiceGetUsingGETBadRequest{}
}

/*
IpamServiceGetUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type IpamServiceGetUsingGETBadRequest struct {
}

// IsSuccess returns true when this ipam service get using g e t bad request response has a 2xx status code
func (o *IpamServiceGetUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ipam service get using g e t bad request response has a 3xx status code
func (o *IpamServiceGetUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ipam service get using g e t bad request response has a 4xx status code
func (o *IpamServiceGetUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ipam service get using g e t bad request response has a 5xx status code
func (o *IpamServiceGetUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ipam service get using g e t bad request response a status code equal to that given
func (o *IpamServiceGetUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the ipam service get using g e t bad request response
func (o *IpamServiceGetUsingGETBadRequest) Code() int {
	return 400
}

func (o *IpamServiceGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETBadRequest ", 400)
}

func (o *IpamServiceGetUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETBadRequest ", 400)
}

func (o *IpamServiceGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIpamServiceGetUsingGETNotFound creates a IpamServiceGetUsingGETNotFound with default headers values
func NewIpamServiceGetUsingGETNotFound() *IpamServiceGetUsingGETNotFound {
	return &IpamServiceGetUsingGETNotFound{}
}

/*
IpamServiceGetUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found.
*/
type IpamServiceGetUsingGETNotFound struct {
}

// IsSuccess returns true when this ipam service get using g e t not found response has a 2xx status code
func (o *IpamServiceGetUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ipam service get using g e t not found response has a 3xx status code
func (o *IpamServiceGetUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ipam service get using g e t not found response has a 4xx status code
func (o *IpamServiceGetUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this ipam service get using g e t not found response has a 5xx status code
func (o *IpamServiceGetUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this ipam service get using g e t not found response a status code equal to that given
func (o *IpamServiceGetUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the ipam service get using g e t not found response
func (o *IpamServiceGetUsingGETNotFound) Code() int {
	return 404
}

func (o *IpamServiceGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETNotFound ", 404)
}

func (o *IpamServiceGetUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /ipam/services/{serviceId}][%d] ipamServiceGetUsingGETNotFound ", 404)
}

func (o *IpamServiceGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
