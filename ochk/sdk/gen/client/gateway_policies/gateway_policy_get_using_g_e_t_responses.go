// Code generated by go-swagger; DO NOT EDIT.

package gateway_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GatewayPolicyGetUsingGETReader is a Reader for the GatewayPolicyGetUsingGET structure.
type GatewayPolicyGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GatewayPolicyGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGatewayPolicyGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGatewayPolicyGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGatewayPolicyGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGatewayPolicyGetUsingGETOK creates a GatewayPolicyGetUsingGETOK with default headers values
func NewGatewayPolicyGetUsingGETOK() *GatewayPolicyGetUsingGETOK {
	return &GatewayPolicyGetUsingGETOK{}
}

/* GatewayPolicyGetUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GatewayPolicyGetUsingGETOK struct {
	Payload *models.GatewayPolicyGetResponse
}

func (o *GatewayPolicyGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}][%d] gatewayPolicyGetUsingGETOK  %+v", 200, o.Payload)
}
func (o *GatewayPolicyGetUsingGETOK) GetPayload() *models.GatewayPolicyGetResponse {
	return o.Payload
}

func (o *GatewayPolicyGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayPolicyGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGatewayPolicyGetUsingGETBadRequest creates a GatewayPolicyGetUsingGETBadRequest with default headers values
func NewGatewayPolicyGetUsingGETBadRequest() *GatewayPolicyGetUsingGETBadRequest {
	return &GatewayPolicyGetUsingGETBadRequest{}
}

/* GatewayPolicyGetUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GatewayPolicyGetUsingGETBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *GatewayPolicyGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}][%d] gatewayPolicyGetUsingGETBadRequest  %+v", 400, o.Payload)
}
func (o *GatewayPolicyGetUsingGETBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *GatewayPolicyGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGatewayPolicyGetUsingGETNotFound creates a GatewayPolicyGetUsingGETNotFound with default headers values
func NewGatewayPolicyGetUsingGETNotFound() *GatewayPolicyGetUsingGETNotFound {
	return &GatewayPolicyGetUsingGETNotFound{}
}

/* GatewayPolicyGetUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found.
*/
type GatewayPolicyGetUsingGETNotFound struct {
}

func (o *GatewayPolicyGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}][%d] gatewayPolicyGetUsingGETNotFound ", 404)
}

func (o *GatewayPolicyGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
