// Code generated by go-swagger; DO NOT EDIT.

package subtenant_custom_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new subtenant custom groups API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for subtenant custom groups API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GroupMemberCreateUsingPUT(params *GroupMemberCreateUsingPUTParams, opts ...ClientOption) (*GroupMemberCreateUsingPUTOK, *GroupMemberCreateUsingPUTCreated, error)

	GroupMemberDeleteUsingDELETE(params *GroupMemberDeleteUsingDELETEParams, opts ...ClientOption) (*GroupMemberDeleteUsingDELETEOK, error)

	GroupMemberGetUsingGET(params *GroupMemberGetUsingGETParams, opts ...ClientOption) (*GroupMemberGetUsingGETOK, error)

	GroupMemberListUsingGET(params *GroupMemberListUsingGETParams, opts ...ClientOption) (*GroupMemberListUsingGETOK, error)

	SubtenantGroupGetUsingGET(params *SubtenantGroupGetUsingGETParams, opts ...ClientOption) (*SubtenantGroupGetUsingGETOK, error)

	SubtenantGroupListUsingGET(params *SubtenantGroupListUsingGETParams, opts ...ClientOption) (*SubtenantGroupListUsingGETOK, error)

	SubtenantGroupUpdateUsingPUT(params *SubtenantGroupUpdateUsingPUTParams, opts ...ClientOption) (*SubtenantGroupUpdateUsingPUTOK, error)

	UserMemberCreateUsingPUT(params *UserMemberCreateUsingPUTParams, opts ...ClientOption) (*UserMemberCreateUsingPUTOK, *UserMemberCreateUsingPUTCreated, error)

	UserMemberDeleteUsingDELETE(params *UserMemberDeleteUsingDELETEParams, opts ...ClientOption) (*UserMemberDeleteUsingDELETEOK, error)

	UserMemberGetUsingGET(params *UserMemberGetUsingGETParams, opts ...ClientOption) (*UserMemberGetUsingGETOK, error)

	UserMemberListUsingGET(params *UserMemberListUsingGETParams, opts ...ClientOption) (*UserMemberListUsingGETOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GroupMemberCreateUsingPUT creates

  Add group member of custom group in vRealize Automation
*/
func (a *Client) GroupMemberCreateUsingPUT(params *GroupMemberCreateUsingPUTParams, opts ...ClientOption) (*GroupMemberCreateUsingPUTOK, *GroupMemberCreateUsingPUTCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupMemberCreateUsingPUTParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "groupMemberCreateUsingPUT",
		Method:             "PUT",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GroupMemberCreateUsingPUTReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *GroupMemberCreateUsingPUTOK:
		return value, nil, nil
	case *GroupMemberCreateUsingPUTCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for subtenant_custom_groups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupMemberDeleteUsingDELETE deletes

  Delete group member of custom group from vRealize Automation
*/
func (a *Client) GroupMemberDeleteUsingDELETE(params *GroupMemberDeleteUsingDELETEParams, opts ...ClientOption) (*GroupMemberDeleteUsingDELETEOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupMemberDeleteUsingDELETEParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "groupMemberDeleteUsingDELETE",
		Method:             "DELETE",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/groups/{groupId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GroupMemberDeleteUsingDELETEReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupMemberDeleteUsingDELETEOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for groupMemberDeleteUsingDELETE: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupMemberGetUsingGET gets

  Get group IAAS API group member
*/
func (a *Client) GroupMemberGetUsingGET(params *GroupMemberGetUsingGETParams, opts ...ClientOption) (*GroupMemberGetUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupMemberGetUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "groupMemberGetUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/groups/{groupId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GroupMemberGetUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupMemberGetUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for groupMemberGetUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupMemberListUsingGET lists

  List groups IAAS API group members
*/
func (a *Client) GroupMemberListUsingGET(params *GroupMemberListUsingGETParams, opts ...ClientOption) (*GroupMemberListUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupMemberListUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "groupMemberListUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GroupMemberListUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupMemberListUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for groupMemberListUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SubtenantGroupGetUsingGET gets

  Get custom groups for subtenant
*/
func (a *Client) SubtenantGroupGetUsingGET(params *SubtenantGroupGetUsingGETParams, opts ...ClientOption) (*SubtenantGroupGetUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSubtenantGroupGetUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "subtenantGroupGetUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups/{groupId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SubtenantGroupGetUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SubtenantGroupGetUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for subtenantGroupGetUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SubtenantGroupListUsingGET lists

  List custom groups for subtenant
*/
func (a *Client) SubtenantGroupListUsingGET(params *SubtenantGroupListUsingGETParams, opts ...ClientOption) (*SubtenantGroupListUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSubtenantGroupListUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "subtenantGroupListUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SubtenantGroupListUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SubtenantGroupListUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for subtenantGroupListUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SubtenantGroupUpdateUsingPUT updates

  Update custom group membership in vRealize Automation
*/
func (a *Client) SubtenantGroupUpdateUsingPUT(params *SubtenantGroupUpdateUsingPUTParams, opts ...ClientOption) (*SubtenantGroupUpdateUsingPUTOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSubtenantGroupUpdateUsingPUTParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "subtenantGroupUpdateUsingPUT",
		Method:             "PUT",
		PathPattern:        "/subtenants/{subtenantId}/groups/{groupId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SubtenantGroupUpdateUsingPUTReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SubtenantGroupUpdateUsingPUTOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for subtenantGroupUpdateUsingPUT: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UserMemberCreateUsingPUT creates

  Add user member of custom group in vRealize Automation
*/
func (a *Client) UserMemberCreateUsingPUT(params *UserMemberCreateUsingPUTParams, opts ...ClientOption) (*UserMemberCreateUsingPUTOK, *UserMemberCreateUsingPUTCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUserMemberCreateUsingPUTParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "userMemberCreateUsingPUT",
		Method:             "PUT",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/users",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UserMemberCreateUsingPUTReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UserMemberCreateUsingPUTOK:
		return value, nil, nil
	case *UserMemberCreateUsingPUTCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for subtenant_custom_groups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UserMemberDeleteUsingDELETE deletes

  Delete user member of custom group from vRealize Automation
*/
func (a *Client) UserMemberDeleteUsingDELETE(params *UserMemberDeleteUsingDELETEParams, opts ...ClientOption) (*UserMemberDeleteUsingDELETEOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUserMemberDeleteUsingDELETEParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "userMemberDeleteUsingDELETE",
		Method:             "DELETE",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UserMemberDeleteUsingDELETEReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UserMemberDeleteUsingDELETEOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for userMemberDeleteUsingDELETE: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UserMemberGetUsingGET gets

  Get user IAAS API group member
*/
func (a *Client) UserMemberGetUsingGET(params *UserMemberGetUsingGETParams, opts ...ClientOption) (*UserMemberGetUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUserMemberGetUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "userMemberGetUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UserMemberGetUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UserMemberGetUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for userMemberGetUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UserMemberListUsingGET lists

  List user IAAS API group members
*/
func (a *Client) UserMemberListUsingGET(params *UserMemberListUsingGETParams, opts ...ClientOption) (*UserMemberListUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUserMemberListUsingGETParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "userMemberListUsingGET",
		Method:             "GET",
		PathPattern:        "/subtenants/{subtenantId}/groups/{parentGroupId}/members/users",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UserMemberListUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UserMemberListUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for userMemberListUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
