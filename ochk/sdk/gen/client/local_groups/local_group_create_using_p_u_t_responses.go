// Code generated by go-swagger; DO NOT EDIT.

package local_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// LocalGroupCreateUsingPUTReader is a Reader for the LocalGroupCreateUsingPUT structure.
type LocalGroupCreateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocalGroupCreateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLocalGroupCreateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLocalGroupCreateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLocalGroupCreateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLocalGroupCreateUsingPUTOK creates a LocalGroupCreateUsingPUTOK with default headers values
func NewLocalGroupCreateUsingPUTOK() *LocalGroupCreateUsingPUTOK {
	return &LocalGroupCreateUsingPUTOK{}
}

/*LocalGroupCreateUsingPUTOK handles this case with default header values.

OK
*/
type LocalGroupCreateUsingPUTOK struct {
	Payload *models.CreateLocalGroupResponse
}

func (o *LocalGroupCreateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /groups/local][%d] localGroupCreateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *LocalGroupCreateUsingPUTOK) GetPayload() *models.CreateLocalGroupResponse {
	return o.Payload
}

func (o *LocalGroupCreateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateLocalGroupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalGroupCreateUsingPUTCreated creates a LocalGroupCreateUsingPUTCreated with default headers values
func NewLocalGroupCreateUsingPUTCreated() *LocalGroupCreateUsingPUTCreated {
	return &LocalGroupCreateUsingPUTCreated{}
}

/*LocalGroupCreateUsingPUTCreated handles this case with default header values.

Entity has been updated
*/
type LocalGroupCreateUsingPUTCreated struct {
	Payload *models.CreateLocalGroupResponse
}

func (o *LocalGroupCreateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /groups/local][%d] localGroupCreateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *LocalGroupCreateUsingPUTCreated) GetPayload() *models.CreateLocalGroupResponse {
	return o.Payload
}

func (o *LocalGroupCreateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateLocalGroupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalGroupCreateUsingPUTBadRequest creates a LocalGroupCreateUsingPUTBadRequest with default headers values
func NewLocalGroupCreateUsingPUTBadRequest() *LocalGroupCreateUsingPUTBadRequest {
	return &LocalGroupCreateUsingPUTBadRequest{}
}

/*LocalGroupCreateUsingPUTBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type LocalGroupCreateUsingPUTBadRequest struct {
	Payload *models.ProxyResponseMessage
}

func (o *LocalGroupCreateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /groups/local][%d] localGroupCreateUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *LocalGroupCreateUsingPUTBadRequest) GetPayload() *models.ProxyResponseMessage {
	return o.Payload
}

func (o *LocalGroupCreateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxyResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
